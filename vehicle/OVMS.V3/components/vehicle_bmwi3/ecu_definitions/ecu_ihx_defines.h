
//
// Warning: don't edit - generated by generate_ecu_code.pl processing ../dev/ihx_i1.json: IHX 78: Integrated automatic heating/aircon
// This generated code  makes it easier to process CANBUS messages from the IHX ecu in a BMW i3
//

#define I3_ECU_IHX_TX                                                0x06F178
#define I3_ECU_IHX_RX                                                0x0678F1

// Skipping KLAPPENMOTOR_IDENT on 0xA111 which takes arguments

#define I3_PID_IHX_EDH_VERRIEGELUNG                                  0xA11B
        // Controlling the protective locking of the eDH. / Steuern der Schutzverriegelung des eDH.

    #define I3_RES_IHX_STAT_EDH_VERRIEGELUNG_AKTIV                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_EDH_VERRIEGELUNG_AKTIV_UNIT              '0/1'
    #define I3_RES_IHX_STAT_EDH_VERRIEGELUNG_AKTIV_TYPE              unsigned char
        // Lock status (active = 1 / not active = 0. / Zustand der Verriegelung (aktiv = 1/nicht aktiv = 0.

    #define I3_RES_IHX_STAT_EDH_VERRIEGELUNG_ZAEHLER_WERT            (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_EDH_VERRIEGELUNG_ZAEHLER_WERT_TYPE       unsigned char
        // Indicates the number of protective interlocks that have occurred so far. / Gibt die Anzahl der bisher
        // aufgetretenen Schutzverriegelungen an.

#define I3_PID_IHX_WP_BEFUELLUNG                                     0xA11C
        // Switching of the valves for filling the heat pump circuit / Schaltung der Ventile zur Befüllung
        // Wärmepumpenkreislauf

    #define I3_RES_IHX_STAT_WP_BEFUELLUNG                            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_WP_BEFUELLUNG_UNIT                       '0/1'
    #define I3_RES_IHX_STAT_WP_BEFUELLUNG_TYPE                       unsigned char
        // 0x00 diagnostic job is not running; 0x01 Daignose job started / 0x00 Diagnosejob läuft nicht; 0x01 Daignosejob
        // gestartet

#define I3_PID_IHX_WP_EXP_VENTIL_KALIBRIEREN                         0xA11D
        // Calibrate the expansion valves / Kalibrierung der Expansionsventile durchführen

    #define I3_RES_IHX_STAT_KALIBRIERUNG                             (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KALIBRIERUNG_UNIT                        '0/1'
    #define I3_RES_IHX_STAT_KALIBRIERUNG_TYPE                        unsigned char
        // Calibration status: 0x00 = calibration not active 0x01 = calibration active / Status der Kalibrierung: 0x00 =
        // Kalibrierung nicht aktiv 0x01 = Kalibrierung aktiv

#define I3_PID_IHX_SITZHEIZUNG_VORNE_TASTER_LINKS                    0xD15D
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_LINKS_EIN       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_LINKS_EIN_UNIT  '0/1'
    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_LINKS_EIN_TYPE  unsigned char
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

#define I3_PID_IHX_SITZHEIZUNG_VORNE_TASTER_RECHTS                   0xD15E
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_RECHTS_EIN      (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_RECHTS_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_TASTER_SITZHEIZUNG_VORNE_RECHTS_EIN_TYPE unsigned char
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

#define I3_PID_IHX_SITZHEIZUNG_VORNE_LED_RECHTS                      0xD15F
        // Status LED display seat heating, front right / Status LED-Anzeige Sitzheizung vorne rechts

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE1_EIN  (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE1_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE1_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE2_EIN  (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE2_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE2_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE3_EIN  (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE3_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_STUFE3_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_NR          (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_NR_UNIT     '0-n'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_RECHTS_NR_TYPE     unsigned char
        // 0 = LEDs off, 1 = one LED on, 2 = two LEDs on, 3 = three LEDs on, 255 = LEDs not available / 0 = LEDs aus, 1 =
        // eine LED ein, 2 = zwei LEDs ein, 3 = drei LEDs ein, 255 = LEDs nicht vorhanden

#define I3_PID_IHX_SITZHEIZUNG_VORNE_LED_LINKS                       0xD160
        // Status LED display seat heating, front left / Status LED-Anzeige Sitzheizung vorne links

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE1_EIN   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE1_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE1_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE2_EIN   (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE2_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE2_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE3_EIN   (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE3_EIN_UNIT '0/1'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_STUFE3_EIN_TYPE unsigned char
        // LED: 0 = OFF, 1 = ON / LED: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_NR           (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_NR_UNIT      '0-n'
    #define I3_RES_IHX_STAT_LED_SITZHEIZUNG_VORNE_LINKS_NR_TYPE      unsigned char
        // 0 = LEDs off, 1 = one LED on, 2 = two LEDs on, 3 = three LEDs on, 255 = LEDs not available / 0 = LEDs aus, 1 =
        // eine LED ein, 2 = zwei LEDs ein, 3 = drei LEDs ein, 255 = LEDs nicht vorhanden

// Skipping FBM_SENS_TASTEN on 0xD592 which takes arguments

// Skipping FBM_TASTEN on 0xD593 which takes arguments

// Skipping STEUERN_SIGNALMODE on 0xD598 which takes arguments

#define I3_PID_IHX_FBM_TASTEN_VORHANDEN_WERT                         0xD599
        // Indicates how many FBM buttons are installed: 0 = no FBM buttons installed, 1 = 1 button installed, 2 = 2
        // buttons installed, N = n buttons installed, 255 = number unknown / Gibt aus, wieviele FBM-Tasten verbaut sind:
        // 0 = keine FBM-Tasten verbaut, 1 = 1 Taste verbaut, 2 = 2 Tasten verbaut, N = n Tasten verbaut, 255 = Anzahl
        // unbekannt

    #define I3_RES_IHX_STAT_FBM_TASTEN_VORHANDEN_WERT                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_FBM_TASTEN_VORHANDEN_WERT_UNIT           'Tasten'
    #define I3_RES_IHX_STAT_FBM_TASTEN_VORHANDEN_WERT_TYPE           unsigned char
        // Indicates how many FBM buttons are installed: 0 = no FBM buttons installed, 1 = 1 button installed, 2 = 2
        // buttons installed, N = n buttons installed, 255 = number unknown / Gibt aus, wieviele FBM-Tasten verbaut sind:
        // 0 = keine FBM-Tasten verbaut, 1 = 1 Taste verbaut, 2 = 2 Tasten verbaut, N = n Tasten verbaut, 255 = Anzahl
        // unbekannt

// Skipping STEUERN_SH_TASTEN on 0xD5A0 which takes arguments

#define I3_PID_IHX_TEMP_FUSSRAUM_LINKS_WERT                          0xD859
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_LINKS_WERT                 (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_LINKS_WERT_UNIT            '°C'
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_LINKS_WERT_TYPE            char
        // Temperature sensor / Temperaturfühler

#define I3_PID_IHX_TEMP_FUSSRAUM_RECHTS_WERT                         0xD85A
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_RECHTS_WERT                (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_RECHTS_WERT_UNIT           '°C'
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_RECHTS_WERT_TYPE           char
        // Temperature sensor / Temperaturfühler

#define I3_PID_IHX_TEMP_INNEN_UNBELUEFTET                            0xD85C
        // Calculated internal temperature / Errechnete Innentemperatur

    #define I3_RES_IHX_STAT_TEMP_INNEN_WERT                          (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_INNEN_WERT_UNIT                     '°C'
    #define I3_RES_IHX_STAT_TEMP_INNEN_WERT_TYPE                     char
        // Calculated internal temperature / Errechnete Innentemperatur

#define I3_PID_IHX_BUS_IN_POTI_SCHICHTUNG_FOND_WERT                  0xD860
        // Potentiometer layering base: 0 ... 100% / Potentiometer Schichtung Fond:  0 ... 100%

    #define I3_RES_IHX_STAT_BUS_IN_POTI_SCHICHTUNG_FOND_WERT         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_IN_POTI_SCHICHTUNG_FOND_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_BUS_IN_POTI_SCHICHTUNG_FOND_WERT_TYPE    unsigned char
        // Potentiometer layering base: 0 ... 100% / Potentiometer Schichtung Fond:  0 ... 100%

#define I3_PID_IHX_KONFIGURATION_KLIMA_VORN                          0xD866
        // Configuration of the front air conditioning / Konfiguration der Klimaanlage vorn

    #define I3_RES_IHX_STAT_VORHANDEN_ZUSATZWASSERPUMPE              (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_ZUSATZWASSERPUMPE_UNIT         '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_ZUSATZWASSERPUMPE_TYPE         unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_IHX_STAT_KLIMA_DISPLAY_EINHEIT_NR                 (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLIMA_DISPLAY_EINHEIT_NR_UNIT            '0-n'
    #define I3_RES_IHX_STAT_KLIMA_DISPLAY_EINHEIT_NR_TYPE            unsigned char
        // 0 = Celsius, 1 = Fahrenheit / 0 = Celsius,  1 = Fahrenheit

    #define I3_RES_IHX_STAT_KLIMA_VARIANTE_NR                        (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_KLIMA_VARIANTE_NR_UNIT                   '0-n'
    #define I3_RES_IHX_STAT_KLIMA_VARIANTE_NR_TYPE                   unsigned char
        // Climate variant: For values see table TAB_KLIMAVARIANTE / Klimavariante:  Werte siehe Tabelle
        // TAB_KLIMAVARIANTE

    #define I3_RES_IHX_STAT_VORHANDEN_EMOTORWASSERPUMPE              (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_VORHANDEN_EMOTORWASSERPUMPE_UNIT         '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_EMOTORWASSERPUMPE_TYPE         unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG             (RXBUF_UCHAR(4))
    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG_UNIT        '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG_TYPE        unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_PTC_VORN                       (RXBUF_UCHAR(5))
    #define I3_RES_IHX_STAT_VORHANDEN_PTC_VORN_UNIT                  '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_PTC_VORN_TYPE                  unsigned char
        // PTC module: 0 = not available, 1 = available / PTC-Modul: 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_UMWAELZPUMPE                   (RXBUF_UCHAR(6))
    #define I3_RES_IHX_STAT_VORHANDEN_UMWAELZPUMPE_UNIT              '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_UMWAELZPUMPE_TYPE              unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

#define I3_PID_IHX_KAELTEMITTEL_MEDIUM                               0xD868
        // Cooling medium: 0 = R134a, 1 = CO2 / Kühlmedium: 0 = R134a, 1 = CO2

    #define I3_RES_IHX_STAT_KAELTEMITTEL_MEDIUM_NR                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KAELTEMITTEL_MEDIUM_NR_UNIT              '0-n'
    #define I3_RES_IHX_STAT_KAELTEMITTEL_MEDIUM_NR_TYPE              unsigned char
        // Cooling medium: 0 = R134a, 1 = CO2 / Kühlmedium: 0 = R134a, 1 = CO2

// Skipping STEUERN_KLAPPENMOTOR_VORN on 0xD86E which takes arguments

// Skipping KLIMA_TASTEN_VORN on 0xD86F which takes arguments

// Skipping STEUERN_BEDIENUNG_TEMP on 0xD875 which takes arguments

// Skipping STEUERN_GEBLAESE on 0xD877 which takes arguments

#define I3_PID_IHX_STEUERN_MOTOREN_KALIBRIERLAUF                     0xD88D
        // Calibration of the stepper motors. / Kalibrierung der Schrittmotore.

#define I3_PID_IHX_SCHRITTMOTOR_FEHLER                               0xD88E
        // Query the stepper motor error / Abfrage der Schrittmotor-Fehler

    #define I3_RES_IHX_STAT_SCHRITTMOTOR_BLOCKIERUNG_WERT            (RXBUF_UINT(0))
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_BLOCKIERUNG_WERT_UNIT       'Fehler'
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_BLOCKIERUNG_WERT_TYPE       unsigned short
        // Output of the status of the stepper motor activated last: Error counter blocking stepper motor / Ausgabe des
        // Status des zuletzt angesteuerten Schrittmotors: Fehlerzähler Blockierung Schrittmotor

    #define I3_RES_IHX_STAT_SCHRITTMOTOR_ANTWORT_FEHLT_WERT          (RXBUF_UINT(2))
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_ANTWORT_FEHLT_WERT_UNIT     'Fehler'
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_ANTWORT_FEHLT_WERT_TYPE     unsigned short
        // Output of the status of the last activated stepper motor: Error counter response stepper motor / Ausgabe des
        // Status des zuletzt angesteuerten Schrittmotors: Fehlerzähler Antwort Schrittmotor

    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INTERNER_FEHLER_WERT        (RXBUF_UINT(4))
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INTERNER_FEHLER_WERT_UNIT   'Fehler'
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INTERNER_FEHLER_WERT_TYPE   unsigned short
        // Output of the status of the stepper motor activated last: Error counter for internal motor errors / Ausgabe
        // des Status des zuletzt angesteuerten Schrittmotors: Fehlerzähler interner Motorfehler

    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INITIALISIERUNG_FEHLER_WERT (RXBUF_UINT(6))
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INITIALISIERUNG_FEHLER_WERT_UNIT 'Fehler'
    #define I3_RES_IHX_STAT_SCHRITTMOTOR_INITIALISIERUNG_FEHLER_WERT_TYPE unsigned short
        // Output of the status of the stepper motor activated last: Error counter initialization error / Ausgabe des
        // Status des zuletzt angesteuerten Schrittmotors: Fehlerzähler Initialisierungsfehler

#define I3_PID_IHX_STEUERN_SELBSTTEST_SCHRITTMOTOREN                 0xD88F
        // Call starts the self-test of the stepper motors. All motors are approached to 50% and then checked whether the
        // position has been reached. The result can be queried with the SELFTEST_STRITTMOTOREN service. / Aufruf startet
        // den Selbsttest der Schrittmotoren. Alle Motore werden auf 50% angefahren und anschließend geprüft, ob die
        // Position ereicht worden ist. Das Ergebnis kann mit dem Service SELBSTTEST_SCHRITTMOTOREN abgefragt werden.

// Skipping STEUERN_DISPLAY_TESTEN on 0xD89A which takes arguments

// Skipping ELEKTRISCHER_ZUHEIZER_FRONT on 0xD8A0 which takes arguments

#define I3_PID_IHX_VORHANDEN_FONDSCHICHTUNG                          0xD8AA
        // 0 = rear stratification potentiometer not available 1 = rear stratification potentiometer available /
        // 0=Fondschichtungspotentiometer nicht vorhanden 1=Fondschichtungspotentiometer vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI_UNIT       '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI_TYPE       unsigned char
        // 0 = rear stratification potentiometer not available 1 = rear stratification potentiometer available /
        // 0=Fondschichtungspotentiometer nicht vorhanden 1=Fondschichtungspotentiometer vorhanden

#define I3_PID_IHX_SOLARSENSOR_VORHANDEN                             0xD8AB
        // Solar sensor: 0 = not available / coded; 1 = present / coded / Solarsensor: 0 = nicht vorhanden / codiert; 1 =
        // vorhanden / codiert

    #define I3_RES_IHX_STAT_VORHANDEN_SOLARSENSOR_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_SOLARSENSOR_EIN_UNIT           '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_SOLARSENSOR_EIN_TYPE           unsigned char
        // Solar sensor: 0 = not available / coded; 1 = present / coded / Solarsensor: 0 = nicht vorhanden / codiert; 1 =
        // vorhanden / codiert

#define I3_PID_IHX_AUC_SENSOR_VORHANDEN                              0xD8AC
        // AUC sensor: 0 = not available; 1 = present / AUC-Sensor: 0 = nicht vorhanden; 1 = vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_AUC_SENSOR                     (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_AUC_SENSOR_UNIT                '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_AUC_SENSOR_TYPE                unsigned char
        // AUC sensor: 0 = not available; 1 = present / AUC-Sensor: 0 = nicht vorhanden; 1 = vorhanden

// Skipping AUDIO_TASTEN on 0xD8B5 which takes arguments

// Skipping LEDS_KLIMA_VORN on 0xD8C1 which takes arguments

#define I3_PID_IHX_EKK_DREHZAHLERHOEHUNG                             0xD8C2
        // Speed increase EKK 0 = OFF, 1 = ON / Drehzahlerhöhung EKK 0=AUS, 1=EIN

    #define I3_RES_IHX_STAT_EKK_DREHZAHLERHOEHUNG_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_EKK_DREHZAHLERHOEHUNG_EIN_UNIT           '0/1'
    #define I3_RES_IHX_STAT_EKK_DREHZAHLERHOEHUNG_EIN_TYPE           unsigned char
        // Speed increase EKK 0 = OFF, 1 = ON / Drehzahlerhöhung EKK 0=AUS, 1=EIN

// Skipping EKMV_DREHZAHL_GEN20 on 0xD8C3 which takes arguments

#define I3_PID_IHX_EKMV_ANALOGWERTE_GEN20                            0xD8C4
        // Analog values from refrigerant compressor Gen. 2.0 / Analogwertewerte von Kältemittelverdichter Gen. 2.0

    #define I3_RES_IHX_STAT_DREHZAHL_WERT                            (RXBUF_UCHAR(0)/2.0f)
    #define I3_RES_IHX_STAT_DREHZAHL_WERT_UNIT                       '%'
    #define I3_RES_IHX_STAT_DREHZAHL_WERT_TYPE                       float
        // Output of the actual speed / Ausgabe der Ist-Drehzahl

    #define I3_RES_IHX_STAT_LEISTUNG_WERT                            (RXBUF_UCHAR(1)/25.0f)
    #define I3_RES_IHX_STAT_LEISTUNG_WERT_UNIT                       'kW'
    #define I3_RES_IHX_STAT_LEISTUNG_WERT_TYPE                       float
        // Output of the power in KW to 2 decimal places. The SG delivers the value with a factor of 25 and divides it by
        // 25 in the SGBD. / Ausgabe der Leistung in KW auf 2 Nachkommastellen genau. Vom SG wird der Wert mit Faktor 25
        // geliefert und in der SGBD durch 25 dividiert.

    #define I3_RES_IHX_STAT_STROM_DC_WERT                            (RXBUF_UCHAR(2)/4.0f)
    #define I3_RES_IHX_STAT_STROM_DC_WERT_UNIT                       'A'
    #define I3_RES_IHX_STAT_STROM_DC_WERT_TYPE                       float
        // Output of the current of high voltage. / Ausgabe des Stroms der Hochspannung.

    #define I3_RES_IHX_STAT_HOCHSPANNUNG_WERT                        (RXBUF_UCHAR(3)*2.0f)
    #define I3_RES_IHX_STAT_HOCHSPANNUNG_WERT_UNIT                   'V'
    #define I3_RES_IHX_STAT_HOCHSPANNUNG_WERT_TYPE                   float
        // Output of the high voltage in volts. Invalid Value = 510 volts / Ausgabe der Hochspannung in Volt.
        // Ungültigkeitswert = 510 Volt

    #define I3_RES_IHX_STAT_TEMPERATUR_WERT                          (RXBUF_UCHAR(4)-50.0)
    #define I3_RES_IHX_STAT_TEMPERATUR_WERT_UNIT                     '°C'
    #define I3_RES_IHX_STAT_TEMPERATUR_WERT_TYPE                     unsigned char
        // Output of the temperature in degrees Celsius. The control unit delivers the value with offset 50. SGBD
        // subtracts 50. / Ausgabe der Temperatur in Grad Celsius. Das Steuergerät liefert den Wert mit Offset 50. SGBD
        // subtrahiert 50.

    #define I3_RES_IHX_STAT_STROM_AC_WERT                            (RXBUF_UCHAR(5))
    #define I3_RES_IHX_STAT_STROM_AC_WERT_UNIT                       'A'
    #define I3_RES_IHX_STAT_STROM_AC_WERT_TYPE                       unsigned char
        // Output of the stream. / Ausgabe des Stroms.

#define I3_PID_IHX_EKMV_BETRIEBSZUSTAND_GEN20                        0xD8C5
        // Operating states of refrigerant compressor Gen. 2.0 / Betriebszustände von Kältemittelverdichter Gen. 2.0

    // RES_0xD8C5_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // Operating states of refrigerant compressor Gen. 2.0 / Betriebszustände von Kältemittelverdichter Gen. 2.0
    #define I3_RES_IHX_RES_0xD8C5_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_IHX_RES_0xD8C5_D_UNIT                             'Bit'
    #define I3_RES_IHX_RES_0xD8C5_D_TYPE                             unsigned char
        // Operating states of refrigerant compressor Gen. 2.0 / Betriebszustände von Kältemittelverdichter Gen. 2.0

// Skipping EKMV_RESET_GEN20 on 0xD8C6 which takes arguments

// Skipping EKMV_AKS_GEN20 on 0xD8C7 which takes arguments

// Skipping EKMV_FREILAUF on 0xD8CB which takes arguments

#define I3_PID_IHX_EDH_STATUS                                        0xD8CD
        // Status values of electrical instantaneous water heaters / Statuswerte elektrischer Durchlauferhitzer

    #define I3_RES_IHX_STAT_TEMPERATUR_WASSERAUSTRITT_WERT           (RXBUF_UINT(0)-40.0)
    #define I3_RES_IHX_STAT_TEMPERATUR_WASSERAUSTRITT_WERT_UNIT      '°C'
    #define I3_RES_IHX_STAT_TEMPERATUR_WASSERAUSTRITT_WERT_TYPE      unsigned short
        // Temperature of the heating water at the water outlet of the electric instantaneous water heater. / Temperatur
        // des Heizwassers am Wasseraustritt des elektrischen Durchlauferhitzers.

    #define I3_RES_IHX_STAT_STROM_WERT                               (RXBUF_UINT(2)*0.2f)
    #define I3_RES_IHX_STAT_STROM_WERT_UNIT                          'A'
    #define I3_RES_IHX_STAT_STROM_WERT_TYPE                          float
        // Current consumption (high voltage side) of the electric instantaneous water heater. / Stromaufnahme
        // (hochvoltseitig) des elektrischen Durchlauferhitzers.

    #define I3_RES_IHX_STAT_HOCHVOLTSPANNUNG_WERT                    (RXBUF_UINT(4)*2.0f)
    #define I3_RES_IHX_STAT_HOCHVOLTSPANNUNG_WERT_UNIT               'V'
    #define I3_RES_IHX_STAT_HOCHVOLTSPANNUNG_WERT_TYPE               float
        // High-voltage voltage measured on the electrical water heater. Invalid Value = 510 volts. / Hochvoltspannung
        // gemessen am elektrischen Durchlauferhitzers. Ungültigkeitswert = 510 Volt.

    #define I3_RES_IHX_STAT_ZAEHLER_VERRIEGELUNG_WERT                (RXBUF_UINT(6))
    #define I3_RES_IHX_STAT_ZAEHLER_VERRIEGELUNG_WERT_TYPE           unsigned short
        // Interlocking counter of the electric water heater. / Verriegelungszähler des elektrischen Durchlauferhitzers.

#define I3_PID_IHX_KONFIGURATION_KLIMA_PRODUKTLINIE                  0xD8CE
        // Outputs the product line coded in the control unit. See table TAB_KLIMA_PRODUKTLINIE / Gibt die im Steuergerät
        // codierte Produktlinie aus. Siehe Tabelle TAB_KLIMA_PRODUKTLINIE

    #define I3_RES_IHX_STAT_KLIMA_PRODUKTLINIE                       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_PRODUKTLINIE_UNIT                  '0-n'
    #define I3_RES_IHX_STAT_KLIMA_PRODUKTLINIE_TYPE                  unsigned char
        // Outputs the product line coded in the control unit. See table TAB_KLIMA_PRODUKTLINIE / Gibt die im Steuergerät
        // codierte Produktlinie aus. Siehe Tabelle TAB_KLIMA_PRODUKTLINIE

#define I3_PID_IHX_BUS_IN_HV_POWERMANAGEMENT                         0xD8D2
        // The maximum power provided by the HV-PM for the air conditioning. / Die maximal vom HV-PM für die Klima
        // bereitgestellten Leistungen.

    #define I3_RES_IHX_STAT_FREIGABE_KLIMAKOMPRESSOR                 (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_FREIGABE_KLIMAKOMPRESSOR_UNIT            '0/1'
    #define I3_RES_IHX_STAT_FREIGABE_KLIMAKOMPRESSOR_TYPE            unsigned char
        // HV release for eKMV: 0x00 = no release 0x01 = release / HV-Freigabe für eKMV: 0x00 = keine Freigabe 0x01 =
        // Freigabe

    #define I3_RES_IHX_STAT_LEISTUNG_KLIMAKOMPRESSOR_MAXIMAL_WERT    (RXBUF_UINT(1)/1000.0f)
    #define I3_RES_IHX_STAT_LEISTUNG_KLIMAKOMPRESSOR_MAXIMAL_WERT_UNIT 'kW'
    #define I3_RES_IHX_STAT_LEISTUNG_KLIMAKOMPRESSOR_MAXIMAL_WERT_TYPE float
        // Maximum power provided by the HV-PM for the eKMV. / Maximal vom HV-PM für den eKMV bereitgestellte Leistung.

#define I3_PID_IHX_BUS_IN_HV_PM_EDH                                  0xD8D3
        // The maximum power provided by the HV-PM for the EDH. / Die maximal vom HV-PM für den EDH bereitgestellte
        // Leistung.

    #define I3_RES_IHX_STAT_FREIGABE_EDH                             (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_FREIGABE_EDH_UNIT                        '0/1'
    #define I3_RES_IHX_STAT_FREIGABE_EDH_TYPE                        unsigned char
        // HV release for EDH: 0x00 = no release 0x01 = release / HV-Freigabe für EDH: 0x00 = keine Freigabe 0x01 =
        // Freigabe

    #define I3_RES_IHX_STAT_LEISTUNG_EDH_MAXIMAL_WERT                (RXBUF_UINT(1)/1000.0f)
    #define I3_RES_IHX_STAT_LEISTUNG_EDH_MAXIMAL_WERT_UNIT           'kW'
    #define I3_RES_IHX_STAT_LEISTUNG_EDH_MAXIMAL_WERT_TYPE           float
        // Maximum power provided by the HV-PM for the EDH. / Maximal vom HV-PM für den EDH bereitgestellte Leistung.

#define I3_PID_IHX_BUS_IN_KUEHLMITTELTEMPERATUR                      0xD8D4
        // Engine coolant temperature / Kühlmitteltemperatur Motor

    #define I3_RES_IHX_STAT_BUS_IN_KUEHLMITTEL_MOTOR_TEMP_WERT       (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_BUS_IN_KUEHLMITTEL_MOTOR_TEMP_WERT_UNIT  '°C'
    #define I3_RES_IHX_STAT_BUS_IN_KUEHLMITTEL_MOTOR_TEMP_WERT_TYPE  short
        // Engine coolant temperature / Kühlmitteltemperatur Motor

#define I3_PID_IHX_SOLLWERT_ELEKTRISCHER_ZUHEIZER_VORN               0xD902
        // Electrical auxiliary heater (PTC or EDH) setpoint in percent 0 - 100% / Elektrischer Zuheizer (PTC oder EDH)
        // Sollwert in Prozent 0 - 100 %

    #define I3_RES_IHX_STAT_SOLLWERT_ELEKTRISCHER_ZUHEIZER_WERT      (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_SOLLWERT_ELEKTRISCHER_ZUHEIZER_WERT_UNIT '%'
    #define I3_RES_IHX_STAT_SOLLWERT_ELEKTRISCHER_ZUHEIZER_WERT_TYPE unsigned char
        // Electrical auxiliary heater (PTC or EDH) setpoint in percent 0 - 100% / Elektrischer Zuheizer (PTC oder EDH)
        // Sollwert in Prozent 0 - 100 %

#define I3_PID_IHX_BUS_OUT_ZUSATZWASSERPUMPE_EIN                     0xD904
        // Auxiliary water pump status: 0 = OFF, 1 = ON / Zusatzwasserpumpenstatus: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_BUS_OUT_ZUSATZWASSERPUMPE_EIN            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_OUT_ZUSATZWASSERPUMPE_EIN_UNIT       '0/1'
    #define I3_RES_IHX_STAT_BUS_OUT_ZUSATZWASSERPUMPE_EIN_TYPE       unsigned char
        // Auxiliary water pump status: 0 = OFF, 1 = ON / Zusatzwasserpumpenstatus: 0 = AUS, 1 = EIN

#define I3_PID_IHX_TIMER_EINLAUFSCHUTZ                               0xD905
        // Determination of the remaining time for the inlet protection. / Ermittlung der verbleibenden Restzeit beim
        // Einlaufschutz.

    #define I3_RES_IHX_STAT_TIMER_EINLAUFSCHUTZ_WERT                 (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_TIMER_EINLAUFSCHUTZ_WERT_UNIT            's'
    #define I3_RES_IHX_STAT_TIMER_EINLAUFSCHUTZ_WERT_TYPE            unsigned char
        // Remaining time of the inlet protection in seconds / Restzeit des Einlaufschutzes in Sekunden

    #define I3_RES_IHX_STAT_TIMER_START_WERT                         (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_TIMER_START_WERT_UNIT                    's'
    #define I3_RES_IHX_STAT_TIMER_START_WERT_TYPE                    unsigned char
        // Start value from the timer for inlet protection / Startwert vom Timer für Einlaufschutz

#define I3_PID_IHX_SITZHEIZUNG_VORNE_TASTER_VORHANDEN                0xD90E
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_SITZHEIZUNG_TASTER_VORNE       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_SITZHEIZUNG_TASTER_VORNE_UNIT  '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_SITZHEIZUNG_TASTER_VORNE_TYPE  unsigned char
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

#define I3_PID_IHX_VORHANDEN_KOMPRESSORKUPPLUNG                      0xD916
        // 0 = compressor clutch not available 1 = compressor clutch available / 0=Kompressorkupplung nicht vorhanden
        // 1=Kompressorkupplung vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG_0XD916      (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG_0XD916_UNIT '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_KOMPRESSORKUPPLUNG_0XD916_TYPE unsigned char
        // 0 = compressor clutch not available 1 = compressor clutch available / 0=Kompressorkupplung nicht vorhanden
        // 1=Kompressorkupplung vorhanden

// Skipping EINLAUFSCHUTZ_KOMPRESSOR on 0xD918 which takes arguments

#define I3_PID_IHX_KLIMA_VORN_LUFTVERTEILUNG_LI_RE                   0xD91A
        // Output of the status of the air distribution in front. / Ausgabe des Status der Luftverteilung vorne.

    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_LINKS_NR       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_LINKS_NR_UNIT  '0-n'
    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_LINKS_NR_TYPE  unsigned char
        // 1 = DOWN; 2 = CENTER; 3 = CENTER_BOTTOM; 4 = UP; 5 = TOP_UNTEN (driver only); 6 = TOP_MITTE; 7 =
        // TOP_MITTE_BOTTOM; 8 = AUTO; 32 = INDIVIDUAL; 40 = SPECIAL PROGRAM; 255 = INVALID (BASE); / 1=UNTEN; 2=MITTE;
        // 3=MITTE_UNTEN; 4=OBEN; 5=OBEN_UNTEN (Nur Fahrer); 6=OBEN_MITTE; 7=OBEN_MITTE_UNTEN; 8=AUTO; 32=INDIVIDUAL;
        // 40=SONDERPROGRAMM; 255=UNGUELTIG (BASIS);

    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_RECHTS_NR      (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_RECHTS_NR_UNIT '0-n'
    #define I3_RES_IHX_STAT_KLIMA_VORN_LUFTVERTEILUNG_RECHTS_NR_TYPE unsigned char
        // 1 = DOWN; 2 = CENTER; 3 = CENTER_BOTTOM; 4 = UP; 5 = TOP_UNTEN (driver only); 6 = TOP_MITTE; 7 =
        // TOP_MITTE_BOTTOM; 8 = AUTO; 32 = INDIVIDUAL; 40 = SPECIAL PROGRAM; 255 = INVALID (BASE); / 1=UNTEN; 2=MITTE;
        // 3=MITTE_UNTEN; 4=OBEN; 5=OBEN_UNTEN (Nur Fahrer); 6=OBEN_MITTE; 7=OBEN_MITTE_UNTEN; 8=AUTO; 32=INDIVIDUAL;
        // 40=SONDERPROGRAMM; 255=UNGUELTIG (BASIS);

#define I3_PID_IHX_BUS_OUT_KLIMAKOMPRESSOR_PWM_WERT                  0xD91D
        // Signal for requesting the compressor power in PWM / Signal für die Anforderung der Kompressorleistung in PWM

    #define I3_RES_IHX_STAT_BUS_OUT_KLIMAKOMPRESSOR_PWM_WERT         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_OUT_KLIMAKOMPRESSOR_PWM_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_BUS_OUT_KLIMAKOMPRESSOR_PWM_WERT_TYPE    unsigned char
        // Signal for requesting the compressor power in PWM / Signal für die Anforderung der Kompressorleistung in PWM

// Skipping STEUERN_DIAGNOSE_ENDE on 0xD927 which takes arguments

#define I3_PID_IHX_KLIMA_VORN_KLAPPEN_PRG_MITTE                      0xD928
        // Automatic flap program: 0 = OFF = manual setting, 1 = ON = AUTO switched on / Automatik-Klappenprogramm: 0 =
        // AUS = Manuelle Einstellung, 1 = EIN = AUTO eingeschaltet

    #define I3_RES_IHX_STAT_KLIMA_VORN_KLAPPEN_PRG_MITTE             (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_KLAPPEN_PRG_MITTE_UNIT        '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_KLAPPEN_PRG_MITTE_TYPE        unsigned char
        // Automatic flap program: 0 = OFF = manual setting, 1 = ON = AUTO switched on / Automatik-Klappenprogramm: 0 =
        // AUS = Manuelle Einstellung, 1 = EIN = AUTO eingeschaltet

#define I3_PID_IHX_KLIMA_VORN_GEBLAESESTUFE_ANZ                      0xD92B
        // Outputs the display of the current fan speed. / Gibt die Anzeige der aktuellen Gebläsestufe aus.

    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESESTUFE_ANZ_WERT        (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESESTUFE_ANZ_WERT_UNIT   'Stufe'
    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESESTUFE_ANZ_WERT_TYPE   unsigned char
        // Outputs the display of the current fan speed. / Gibt die Anzeige der aktuellen Gebläsestufe aus.

#define I3_PID_IHX_KLIMA_VORN_OFF_EIN                                0xD92C
        // Function status air conditioning OFF: 0 = OFF = air conditioning is switched on, LED is off 1 = ON = air
        // conditioning is switched off, LED is on / Funktionsstatus Klima OFF: 0 = AUS = Klima ist eingeschaltet, LED
        // ist aus 1 = EIN = Klima ist ausgeschaltet, LED ist an

    #define I3_RES_IHX_STAT_KLIMA_VORN_OFF_EIN                       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_OFF_EIN_UNIT                  '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_OFF_EIN_TYPE                  unsigned char
        // Function status air conditioning OFF: 0 = OFF = air conditioning is switched on, LED is off 1 = ON = air
        // conditioning is switched off, LED is on / Funktionsstatus Klima OFF: 0 = AUS = Klima ist eingeschaltet, LED
        // ist aus 1 = EIN = Klima ist ausgeschaltet, LED ist an

#define I3_PID_IHX_KLIMA_VORN_PRG_DEFROST_EIN                        0xD92D
        // Defrost program: 0 = OFF, 1 = ON / Defrost-Programm: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_DEFROST_EIN               (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_DEFROST_EIN_UNIT          '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_DEFROST_EIN_TYPE          unsigned char
        // Defrost program: 0 = OFF, 1 = ON / Defrost-Programm: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_MAX_AC_EIN                         0xD92E
        // Maximum cooling program: 0 = OFF, 1 = ON / Programm maximal Kühlen: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_MAX_AC_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_MAX_AC_EIN_UNIT           '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_MAX_AC_EIN_TYPE           unsigned char
        // Maximum cooling program: 0 = OFF, 1 = ON / Programm maximal Kühlen: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_AUC_EIN                            0xD930
        // Automatic air circulation control: 0 = OFF, 1 = ON / Automatische Umluft Control: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AUC_EIN                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AUC_EIN_UNIT              '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AUC_EIN_TYPE              unsigned char
        // Automatic air circulation control: 0 = OFF, 1 = ON / Automatische Umluft Control: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_UMLUFT_EIN                         0xD931
        // Recirculation program: 0 = OFF, 1 = ON / Programm Umluft: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_UMLUFT_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_UMLUFT_EIN_UNIT           '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_UMLUFT_EIN_TYPE           unsigned char
        // Recirculation program: 0 = OFF, 1 = ON / Programm Umluft: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_HHS_EIN                            0xD932
        // Rear window heating: 0 = OFF, 1 = ON / Heckscheibenheizung: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HHS_EIN                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HHS_EIN_UNIT              '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HHS_EIN_TYPE              unsigned char
        // Rear window heating: 0 = OFF, 1 = ON / Heckscheibenheizung: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_AC_EIN                             0xD934
        // Climate program: 0 = OFF, 1 = ON / Klimaprogramm: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AC_EIN                    (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AC_EIN_UNIT               '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_AC_EIN_TYPE               unsigned char
        // Climate program: 0 = OFF, 1 = ON / Klimaprogramm: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_PRG_KLIMASTIL_MITTE                    0xD936
        // Output of the middle soft-intensity setting in steps: 1 - 7 / Ausgabe der Soft-Intense-Einstellung Mitte in
        // Stufen: 1 - 7

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_KLIMASTIL_MITTE_WERT      (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_KLIMASTIL_MITTE_WERT_UNIT 'Stufe'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_KLIMASTIL_MITTE_WERT_TYPE unsigned char
        // Output of the middle soft-intensity setting in steps: 1 - 7 / Ausgabe der Soft-Intense-Einstellung Mitte in
        // Stufen: 1 - 7

#define I3_PID_IHX_KLIMA_VORN_PRG_STANDLUEFTEN_EIN                   0xD939
        // Independent ventilation program: 0 = OFF, 1 = ON / Programm Standlüften: 0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_STANDLUEFTEN_EIN          (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_STANDLUEFTEN_EIN_UNIT     '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_STANDLUEFTEN_EIN_TYPE     unsigned char
        // Independent ventilation program: 0 = OFF, 1 = ON / Programm Standlüften: 0 = AUS, 1 = EIN

#define I3_PID_IHX_KLIMA_VORN_GEBLAESELEISTUNG_WERT                  0xD93F
        // Fan output of the IHKA fan output stage in%. / Gebläseleistung der Gebläseendstufe IHKA in %.

    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESELEISTUNG_WERT         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESELEISTUNG_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_KLIMA_VORN_GEBLAESELEISTUNG_WERT_TYPE    unsigned char
        // Fan output of the IHKA fan output stage in%. / Gebläseleistung der Gebläseendstufe IHKA in %.

#define I3_PID_IHX_KLP_POS_DEFROST_WERT                              0xD941
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_DEFROST_WERT                  (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_DEFROST_WERT_UNIT             '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_DEFROST_WERT_TYPE             unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_DEFROST_WERT                 (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_DEFROST_WERT_UNIT            '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_DEFROST_WERT_TYPE            unsigned char
        // Setpoint of the damper position: 0 ... 100 / Sollwert der Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_BELUEFTUNG_WERT                           0xD942
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_BELUEFTUNG_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_BELUEFTUNG_WERT_UNIT          '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_BELUEFTUNG_WERT_TYPE          unsigned char
        // Actual value flap opening; 0..100% (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0..100% (127 = gelesener Wert ungültig, 255=Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_BELUEFTUNG_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_BELUEFTUNG_WERT_UNIT         '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_BELUEFTUNG_WERT_TYPE         unsigned char
        // Setpoint of the damper position: 0 ... 100% / Sollwert der Klappenstellung: 0 ... 100 %

#define I3_PID_IHX_KLP_POS_FUSSRAUM_WERT                             0xD947
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_FUSSRAUM_WERT                 (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_FUSSRAUM_WERT_UNIT            '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_FUSSRAUM_WERT_TYPE            unsigned char
        // Actual value flap opening: 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung: 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_FUSSRAUM_WERT                (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_FUSSRAUM_WERT_UNIT           '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_FUSSRAUM_WERT_TYPE           unsigned char
        // Setpoint damper position: 0 ... 100 / Sollwert Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_SCHICHTUNG_WERT                           0xD949
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_WERT_UNIT          '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_WERT_TYPE          unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_WERT_UNIT         '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_WERT_TYPE         unsigned char
        // Setpoint damper position: 0 ... 100 / Sollwert Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_SCHICHTUNG_LI_WERT                        0xD94A
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_LI_WERT            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_LI_WERT_UNIT       '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_LI_WERT_TYPE       unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_LI_WERT           (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_LI_WERT_UNIT      '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_LI_WERT_TYPE      unsigned char
        // Setpoint damper position: 0 ... 100 / Sollwert Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_SCHICHTUNG_RE_WERT                        0xD94B
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_RE_WERT            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_RE_WERT_UNIT       '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_SCHICHTUNG_RE_WERT_TYPE       unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_RE_WERT           (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_RE_WERT_UNIT      '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_SCHICHTUNG_RE_WERT_TYPE      unsigned char
        // Setpoint damper position: 0 ... 100 / Sollwert Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_UMLUFT_WERT                               0xD94D
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_UMLUFT_WERT                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_UMLUFT_WERT_UNIT              '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_UMLUFT_WERT_TYPE              unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_UMLUFT_WERT                  (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_UMLUFT_WERT_UNIT             '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_UMLUFT_WERT_TYPE             unsigned char
        // Setpoint damper position: 0 ... 100 / Sollwert Klappenstellung: 0...100

#define I3_PID_IHX_KLP_POS_TEMP_LUFT_FOND_WERT                       0xD950
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_TEMP_LUFT_FOND_WERT           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_TEMP_LUFT_FOND_WERT_UNIT      '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_TEMP_LUFT_FOND_WERT_TYPE      unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) / Istwert
        // Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden)

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_TEMP_LUFT_FOND_WERT          (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_TEMP_LUFT_FOND_WERT_UNIT     '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_TEMP_LUFT_FOND_WERT_TYPE     unsigned char
        // Setpoint of the damper position: 0 ... 100 / Sollwert der Klappenstellung: 0...100

#define I3_PID_IHX_MOTOR_KALIBRIERLAUF                               0xD953
        // Query of the current status of the calibration run of the flap motors. / Abfrage des aktuellen Status des
        // Kalibrierlaufs der Klappenmotoren.

    #define I3_RES_IHX_STAT_KALIBRIERLAUF_NR                         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KALIBRIERLAUF_NR_UNIT                    '0-n'
    #define I3_RES_IHX_STAT_KALIBRIERLAUF_NR_TYPE                    unsigned char
        // 0 = not yet started in this terminal cycle, 1 = calibration run is currently running, 2 = calibration run
        // completed / 0 = in diesem Klemmenzyklus noch nicht gestartet, 1 = Kalibrierlauf läuft gerade, 2 =
        // Kalibrierlauf abgeschlossen

    #define I3_RES_IHX_STAT_KALIBRIERLAUF_ERGEBNIS                   (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KALIBRIERLAUF_ERGEBNIS_UNIT              '0/1'
    #define I3_RES_IHX_STAT_KALIBRIERLAUF_ERGEBNIS_TYPE              unsigned char
        // 0 = calibration run completed NOK, 1 = calibration run completed OK and data saved; The result relates to the
        // last calibration run carried out. The result may only be saved after a completely completed calibration run. /
        // 0 = Kalibrierlauf abgeschlossen NIO, 1 = Kalibierlauf abgeschlossen IO und Daten gespeichert; Das Ergebnis
        // bezieht sich auf den zuletzt durchgeführten Kalibrierlauf. Das Ergebnis darf nur im Anschluss eines
        // vollständig durchlaufenen Kalibrierlaufs abgespeichert werden.

    #define I3_RES_IHX_STAT_MOTOR_1_NR                               (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_MOTOR_1_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_1_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_2_NR                               (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_MOTOR_2_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_2_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_3_NR                               (RXBUF_UCHAR(4))
    #define I3_RES_IHX_STAT_MOTOR_3_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_3_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_4_NR                               (RXBUF_UCHAR(5))
    #define I3_RES_IHX_STAT_MOTOR_4_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_4_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_5_NR                               (RXBUF_UCHAR(6))
    #define I3_RES_IHX_STAT_MOTOR_5_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_5_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_6_NR                               (RXBUF_UCHAR(7))
    #define I3_RES_IHX_STAT_MOTOR_6_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_6_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_7_NR                               (RXBUF_UCHAR(8))
    #define I3_RES_IHX_STAT_MOTOR_7_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_7_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_8_NR                               (RXBUF_UCHAR(9))
    #define I3_RES_IHX_STAT_MOTOR_8_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_8_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_9_NR                               (RXBUF_UCHAR(10))
    #define I3_RES_IHX_STAT_MOTOR_9_NR_UNIT                          '0-n'
    #define I3_RES_IHX_STAT_MOTOR_9_NR_TYPE                          unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_10_NR                              (RXBUF_UCHAR(11))
    #define I3_RES_IHX_STAT_MOTOR_10_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_10_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_11_NR                              (RXBUF_UCHAR(12))
    #define I3_RES_IHX_STAT_MOTOR_11_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_11_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_12_NR                              (RXBUF_UCHAR(13))
    #define I3_RES_IHX_STAT_MOTOR_12_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_12_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_13_NR                              (RXBUF_UCHAR(14))
    #define I3_RES_IHX_STAT_MOTOR_13_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_13_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_14_NR                              (RXBUF_UCHAR(15))
    #define I3_RES_IHX_STAT_MOTOR_14_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_14_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_15_NR                              (RXBUF_UCHAR(16))
    #define I3_RES_IHX_STAT_MOTOR_15_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_15_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_16_NR                              (RXBUF_UCHAR(17))
    #define I3_RES_IHX_STAT_MOTOR_16_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_16_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_17_NR                              (RXBUF_UCHAR(18))
    #define I3_RES_IHX_STAT_MOTOR_17_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_17_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_18_NR                              (RXBUF_UCHAR(19))
    #define I3_RES_IHX_STAT_MOTOR_18_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_18_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_19_NR                              (RXBUF_UCHAR(20))
    #define I3_RES_IHX_STAT_MOTOR_19_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_19_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

    #define I3_RES_IHX_STAT_MOTOR_20_NR                              (RXBUF_UCHAR(21))
    #define I3_RES_IHX_STAT_MOTOR_20_NR_UNIT                         '0-n'
    #define I3_RES_IHX_STAT_MOTOR_20_NR_TYPE                         unsigned char
        // 0 = calibration NOK, 1 = calibration OK, 2 = flap not installed / 0 = Kalibrierung NIO, 1 = Kalibrierung IO, 2
        // = Klappe nicht verbaut

#define I3_PID_IHX_SELBSTTEST_SCHRITTMOTORE                          0xD954
        // Status of stepper motor self-tests: 0 = not started / not requested, 1 = test is currently running, 2 = test
        // successfully completed, 3 = test not completed successfully / Status Schrittmotorenselbsttests: 0 = nicht
        // gestartet/nicht angefordert, 1 = Test läuft gerade, 2 = Test erfolgreich abgeschlossen, 3 = Test nicht
        // erfolgreich abgeschlossen

    #define I3_RES_IHX_STAT_SELBSTTEST_SCHRITTMOTORE_NR              (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_SELBSTTEST_SCHRITTMOTORE_NR_UNIT         '0-n'
    #define I3_RES_IHX_STAT_SELBSTTEST_SCHRITTMOTORE_NR_TYPE         unsigned char
        // Status of stepper motor self-tests: 0 = not started / not requested, 1 = test is currently running, 2 = test
        // successfully completed, 3 = test not completed successfully / Status Schrittmotorenselbsttests: 0 = nicht
        // gestartet/nicht angefordert, 1 = Test läuft gerade, 2 = Test erfolgreich abgeschlossen, 3 = Test nicht
        // erfolgreich abgeschlossen

#define I3_PID_IHX_TEMP_BELUEFTUNG_LINKS_WERT                        0xD957
        // Left ventilation flap temperature If the sensor is defective or unplugged, the value 127 is returned /
        // Temperatur Belüftungsklappe links Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_LINKS_WERT               (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_LINKS_WERT_UNIT          '°C'
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_LINKS_WERT_TYPE          char
        // Left ventilation flap temperature If the sensor is defective or unplugged, the value 127 is returned /
        // Temperatur Belüftungsklappe links Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

#define I3_PID_IHX_TEMP_BELUEFTUNG_RECHTS_WERT                       0xD958
        // Right ventilation flap temperature If the sensor is defective or unplugged, the value 127 is returned /
        // Temperatur Belüftungsklappe rechts Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_RECHTS_WERT              (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_RECHTS_WERT_UNIT         '°C'
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_RECHTS_WERT_TYPE         char
        // Right ventilation flap temperature If the sensor is defective or unplugged, the value 127 is returned /
        // Temperatur Belüftungsklappe rechts Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

#define I3_PID_IHX_DRUCKSENSOR_VORHANDEN                             0xD959
        // Indicates whether a pressure sensor is installed for R134A: 0 = not available, 1 = available / Gibt aus, ob
        // ein Drucksensor für R134A verbaut ist: 0 = nicht vorhanden, 1 = vorhanden

    #define I3_RES_IHX_STAT_DRUCKSENSOR_VORHANDEN                    (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_DRUCKSENSOR_VORHANDEN_UNIT               '0/1'
    #define I3_RES_IHX_STAT_DRUCKSENSOR_VORHANDEN_TYPE               unsigned char
        // Indicates whether a pressure sensor is installed for R134A: 0 = not available, 1 = available / Gibt aus, ob
        // ein Drucksensor für R134A verbaut ist: 0 = nicht vorhanden, 1 = vorhanden

#define I3_PID_IHX_VORHANDEN_WASSERVENTIL                            0xD95A
        // Water valve available / Wasserventil vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_MONO              (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_MONO_UNIT         '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_MONO_TYPE         unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_DUO               (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_DUO_UNIT          '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_WASSERVENTIL_DUO_TYPE          unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

#define I3_PID_IHX_TEMP_VERDAMPFER_WERT                              0xD95C
        // Temperature sensor evaporator If the sensor is defective or unplugged, the value 127 is returned /
        // Temperaturfühler Verdampfer Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

    #define I3_RES_IHX_STAT_TEMP_VERDAMPFER_WERT                     (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_VERDAMPFER_WERT_UNIT                '°C'
    #define I3_RES_IHX_STAT_TEMP_VERDAMPFER_WERT_TYPE                char
        // Temperature sensor evaporator If the sensor is defective or unplugged, the value 127 is returned /
        // Temperaturfühler Verdampfer Bei defektem oder abgesteckten Sensor wird der Wert 127 zurück geliefert

#define I3_PID_IHX_BUS_IN_KOMPRESSORFREIGABE                         0xD960
        // Air conditioning compressor release from the engine electronics: 0 = not released, 1 = released /
        // Klimakompressorfreigabe von der Motorelektronik: 0 = nicht freigegeben, 1 = Freigabe erteilt

    #define I3_RES_IHX_STAT_BUS_IN_KOMPRESSORFREIGABE_EIN            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_IN_KOMPRESSORFREIGABE_EIN_UNIT       '0/1'
    #define I3_RES_IHX_STAT_BUS_IN_KOMPRESSORFREIGABE_EIN_TYPE       unsigned char
        // Air conditioning compressor release from the engine electronics: 0 = not released, 1 = released /
        // Klimakompressorfreigabe von der Motorelektronik: 0 = nicht freigegeben, 1 = Freigabe erteilt

#define I3_PID_IHX_BUS_IN_SOLARSENSOR_WERT                           0xD962
        // BUS signal solar sensor / BUS-Signal Solarsensor

    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_LINKS_WERT            (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_LINKS_WERT_UNIT       'W/m²'
    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_LINKS_WERT_TYPE       short
        // Solar sensor / Solarsensor

    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_RECHTS_WERT           (RXBUF_SINT(2))
    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_RECHTS_WERT_UNIT      'W/m²'
    #define I3_RES_IHX_STAT_BUS_IN_SOLARSENSOR_RECHTS_WERT_TYPE      short
        // Solar sensor / Solarsensor

#define I3_PID_IHX_BUS_IN_AUC_SENSOR_WERT                            0xD964
        // Load level from the AUC sensor / Belastungsstufe vom AUC-Sensor

    #define I3_RES_IHX_STAT_BUS_IN_AUC_SENSOR_WERT                   (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_IN_AUC_SENSOR_WERT_UNIT              'Stufe'
    #define I3_RES_IHX_STAT_BUS_IN_AUC_SENSOR_WERT_TYPE              unsigned char
        // Load level from the AUC sensor / Belastungsstufe vom AUC-Sensor

#define I3_PID_IHX_BUS_IN_BESCHLAGSENSOR_WERT                        0xD966
        // PMW signal condensation sensor / PMW-Signal Beschlagssensor

    #define I3_RES_IHX_STAT_BUS_IN_BESCHLAGSENSOR_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_IN_BESCHLAGSENSOR_WERT_UNIT          '%'
    #define I3_RES_IHX_STAT_BUS_IN_BESCHLAGSENSOR_WERT_TYPE          unsigned char
        // PMW signal condensation sensor / PMW-Signal Beschlagssensor

#define I3_PID_IHX_BUS_IN_KAELTEMITTELDRUCK_WERT                     0xD968
        // Refrigerant pressure for R134A / Kältemitteldruck für R134A

    #define I3_RES_IHX_STAT_BUS_IN_R134A_DRUCK_WERT                  (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_IN_R134A_DRUCK_WERT_UNIT             'bar'
    #define I3_RES_IHX_STAT_BUS_IN_R134A_DRUCK_WERT_TYPE             unsigned char
        // Refrigerant pressure for R134A / Kältemitteldruck für R134A

#define I3_PID_IHX_BUS_IN_TEMP_AUSSEN_WERT                           0xD96B
        // Outside temperature / Außentemperatur

    #define I3_RES_IHX_STAT_BUS_IN_TEMP_AUSSEN_WERT                  (RXBUF_SINT(0)/2.0f-40.0)
    #define I3_RES_IHX_STAT_BUS_IN_TEMP_AUSSEN_WERT_UNIT             '°C'
    #define I3_RES_IHX_STAT_BUS_IN_TEMP_AUSSEN_WERT_TYPE             float
        // Outside temperature / Außentemperatur

#define I3_PID_IHX_BESCHLAGSENSOR_VORHANDEN                          0xD96D
        // 0: Condensation sensor not available / coded 1: Condensation sensor available / coded / 0: Beschlagsensor
        // nicht vorhanden / codiert   1: Beschlagsensor vorhanden / codiert

    #define I3_RES_IHX_STAT_VORHANDEN_BESCHLAGSENSOR                 (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_BESCHLAGSENSOR_UNIT            '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_BESCHLAGSENSOR_TYPE            unsigned char
        // 0: Condensation sensor not available / coded 1: Condensation sensor available / coded / 0: Beschlagsensor
        // nicht vorhanden / codiert   1: Beschlagsensor vorhanden / codiert

// Skipping FRONTSCHEIBENHEIZUNG on 0xD96F which takes arguments

#define I3_PID_IHX_KLIMA_TEMPERATUR_SOLLWERT                         0xD977
        // Output of the setpoint temperature (left and right) of the air conditioning system. / Ausgabe der
        // eingestellten Sollwert-Temperatur (links und rechts) der Klimaanlage.

    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_LINKS_WERT          (RXBUF_UCHAR(0)/2.0f)
    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_LINKS_WERT_UNIT     '°C'
    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_LINKS_WERT_TYPE     float
        // Output of the set target temperature on the left. / Ausgabe der eingestellten Sollwert-Temperatur links.

    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_RECHTS_WERT         (RXBUF_UCHAR(1)/2.0f)
    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_RECHTS_WERT_UNIT    '°C'
    #define I3_RES_IHX_STAT_KLIMA_VORNE_SOLLTEMP_RECHTS_WERT_TYPE    float
        // Output of the set target temperature on the right. / Ausgabe der eingestellten Sollwert-Temperatur rechts.

// Skipping STEUERN_EINZELADRESSIERUNG on 0xD978 which takes arguments

#define I3_PID_IHX_KLIMA_LIN_1_ADRESSEN                              0xD97B
        // Reading of all addressable LIN addresses of the LIN bus system. / Lesen aller ansprechbaren LIN-Adressen des
        // LIN-Bus-System.

    #define I3_RES_IHX_STAT_SLAVE1_ADR_WERT                          (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_SLAVE1_ADR_WERT_TYPE                     short
        // Output address slave 1 / Ausgabe Adresse Slave 1

    #define I3_RES_IHX_STAT_SLAVE2_ADR_WERT                          (RXBUF_SINT(2))
    #define I3_RES_IHX_STAT_SLAVE2_ADR_WERT_TYPE                     short
        // Output address slave 2 / Ausgabe Adresse Slave 2

    #define I3_RES_IHX_STAT_SLAVE3_ADR_WERT                          (RXBUF_SINT(4))
    #define I3_RES_IHX_STAT_SLAVE3_ADR_WERT_TYPE                     short
        // Output address slave 3 / Ausgabe Adresse Slave 3

    #define I3_RES_IHX_STAT_SLAVE4_ADR_WERT                          (RXBUF_SINT(6))
    #define I3_RES_IHX_STAT_SLAVE4_ADR_WERT_TYPE                     short
        // Output address slave 4 / Ausgabe Adresse Slave 4

    #define I3_RES_IHX_STAT_SLAVE5_ADR_WERT                          (RXBUF_SINT(8))
    #define I3_RES_IHX_STAT_SLAVE5_ADR_WERT_TYPE                     short
        // Output address slave 5 / Ausgabe Adresse Slave 5

    #define I3_RES_IHX_STAT_SLAVE6_ADR_WERT                          (RXBUF_SINT(10))
    #define I3_RES_IHX_STAT_SLAVE6_ADR_WERT_TYPE                     short
        // Output address slave 6 / Ausgabe Adresse Slave 6

    #define I3_RES_IHX_STAT_SLAVE7_ADR_WERT                          (RXBUF_SINT(12))
    #define I3_RES_IHX_STAT_SLAVE7_ADR_WERT_TYPE                     short
        // Output address slave 7 / Ausgabe Adresse Slave 7

    #define I3_RES_IHX_STAT_SLAVE8_ADR_WERT                          (RXBUF_SINT(14))
    #define I3_RES_IHX_STAT_SLAVE8_ADR_WERT_TYPE                     short
        // Output address slave 8 / Ausgabe Adresse Slave 8

    #define I3_RES_IHX_STAT_SLAVE9_ADR_WERT                          (RXBUF_SINT(16))
    #define I3_RES_IHX_STAT_SLAVE9_ADR_WERT_TYPE                     short
        // Output address slave 9 / Ausgabe Adresse Slave 9

    #define I3_RES_IHX_STAT_SLAVE10_ADR_WERT                         (RXBUF_SINT(18))
    #define I3_RES_IHX_STAT_SLAVE10_ADR_WERT_TYPE                    short
        // Output address slave 10 / Ausgabe Adresse Slave 10

    #define I3_RES_IHX_STAT_SLAVE11_ADR_WERT                         (RXBUF_SINT(20))
    #define I3_RES_IHX_STAT_SLAVE11_ADR_WERT_TYPE                    short
        // Output address slave 11 / Ausgabe Adresse Slave 11

    #define I3_RES_IHX_STAT_SLAVE12_ADR_WERT                         (RXBUF_SINT(22))
    #define I3_RES_IHX_STAT_SLAVE12_ADR_WERT_TYPE                    short
        // Output address slave 12 / Ausgabe Adresse Slave 12

    #define I3_RES_IHX_STAT_SLAVE13_ADR_WERT                         (RXBUF_SINT(24))
    #define I3_RES_IHX_STAT_SLAVE13_ADR_WERT_TYPE                    short
        // Output address slave 13 / Ausgabe Adresse Slave 13

    #define I3_RES_IHX_STAT_SLAVE14_ADR_WERT                         (RXBUF_SINT(26))
    #define I3_RES_IHX_STAT_SLAVE14_ADR_WERT_TYPE                    short
        // Output address slave 14 / Ausgabe Adresse Slave 14

    #define I3_RES_IHX_STAT_SLAVE15_ADR_WERT                         (RXBUF_SINT(28))
    #define I3_RES_IHX_STAT_SLAVE15_ADR_WERT_TYPE                    short
        // Output address slave 15 / Ausgabe Adresse Slave 15

    #define I3_RES_IHX_STAT_SLAVE16_ADR_WERT                         (RXBUF_SINT(30))
    #define I3_RES_IHX_STAT_SLAVE16_ADR_WERT_TYPE                    short
        // Output address slave 16 / Ausgabe Adresse Slave 16

    #define I3_RES_IHX_STAT_MOT_0X3F_WERT                            (RXBUF_SINT(32))
    #define I3_RES_IHX_STAT_MOT_0X3F_WERT_TYPE                       short
        // Availability of the slave with address 0x3F (63 dec): 0x00 = slave with address 0x3F installed, 0xFF = slave
        // with address 0x3F not installed / Verfügbarkeit des Slaves mit der Adresse 0x3F (63 dez): 0x00 = Slave mit
        // Adresse 0x3F verbaut, 0xFF = Slave mit Adresse 0x3F nicht verbaut

    #define I3_RES_IHX_STAT_FEHLERSTATUS_WERT                        (RXBUF_SINT(34))
    #define I3_RES_IHX_STAT_FEHLERSTATUS_WERT_TYPE                   short
        // 0 = no error, 255 = unknown error / 0 = kein Fehler, 255 = unbekannter Fehler

#define I3_PID_IHX_STEUERN_RESET_LIN                                 0xD97C
        // Resetting the LIN bus with switching off the LIN supply voltage. / Rücksetzen des LIN-Bus mit Wegschalten der
        // LIN-Versorgungsspannung.

#define I3_PID_IHX_KLAPPEN_VERSTELLBEREICH                           0xD980
        // Reading out the adjustment range of the individual flaps as increments that could be determined via the
        // calibration run. / Auslesen des Verstellbereichs der einzelnen Klappen als Inkremente, die über den Eichlauf
        // ermittelt werden konnten.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE1_WERT             (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE1_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE1_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE2_WERT             (RXBUF_SINT(2))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE2_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE2_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE3_WERT             (RXBUF_SINT(4))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE3_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE3_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE4_WERT             (RXBUF_SINT(6))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE4_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE4_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE5_WERT             (RXBUF_SINT(8))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE5_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE5_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE6_WERT             (RXBUF_SINT(10))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE6_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE6_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE7_WERT             (RXBUF_SINT(12))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE7_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE7_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE8_WERT             (RXBUF_SINT(14))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE8_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE8_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE9_WERT             (RXBUF_SINT(16))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE9_WERT_UNIT        'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE9_WERT_TYPE        short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE10_WERT            (RXBUF_SINT(18))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE10_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE10_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE11_WERT            (RXBUF_SINT(20))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE11_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE11_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE12_WERT            (RXBUF_SINT(22))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE12_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE12_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE13_WERT            (RXBUF_SINT(24))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE13_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE13_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE14_WERT            (RXBUF_SINT(26))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE14_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE14_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE15_WERT            (RXBUF_SINT(28))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE15_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE15_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE16_WERT            (RXBUF_SINT(30))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE16_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE16_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE17_WERT            (RXBUF_SINT(32))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE17_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE17_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE18_WERT            (RXBUF_SINT(34))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE18_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE18_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE19_WERT            (RXBUF_SINT(36))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE19_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE19_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE20_WERT            (RXBUF_SINT(38))
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE20_WERT_UNIT       'Inkremente'
    #define I3_RES_IHX_STAT_VERSTELLBEREICH_KLAPPE20_WERT_TYPE       short
        // Specification of the adjustment range in increments. / Angabe des Verstellbereiches in Inkrementen.

#define I3_PID_IHX_STEUERN_AUTOADR_KLAPPENMOTOREN                    0xD981
        // Starts the auto addressing to assign the motor addresses in the system based on the sequence of the
        // connections on the wiring harness. / Startet die Autoadressierung zur Vergabe der Motoradressen im System
        // anhand der Reihenfolge der Anschlüsse am Kabelbaum.

#define I3_PID_IHX_KLIMA_TEMPERATUR_MITTE_SOLLWERT                   0xD988
        // Output of the set target temperature / Ausgabe der eingestellten Sollwert-Temperatur

    #define I3_RES_IHX_STAT_KLIMA_SOLLTEMP_MITTE_WERT                (RXBUF_UCHAR(0)/2.0f)
    #define I3_RES_IHX_STAT_KLIMA_SOLLTEMP_MITTE_WERT_UNIT           '°C'
    #define I3_RES_IHX_STAT_KLIMA_SOLLTEMP_MITTE_WERT_TYPE           float
        // Output of the set target temperature / Ausgabe der eingestellten Sollwert-Temperatur

#define I3_PID_IHX_KLP_POS_MISCHLUFT_WERT                            0xD98A
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_WERT                (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_WERT_UNIT           '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_WERT_TYPE           unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) 0 = cold 100 = warm
        // / Istwert Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden) 0 = Kalt 100
        // = Warm

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_WERT               (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_WERT_UNIT          '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_WERT_TYPE          unsigned char
        // Setpoint damper position: 0 ... 100: 0 = cold 100 = warm / Sollwert Klappenstellung: 0...100: 0 = Kalt 100 =
        // Warm

#define I3_PID_IHX_KLP_POS_ZENTRALANTRIEB_WERT                       0xD98B
        // Reading out the setpoint and actual value of the motor for the central drive with link plate. / Auslesen des
        // Soll- und Ist-Werts des Motors für den Zentralantrieb mit Kulissenscheibe.

    #define I3_RES_IHX_STAT_MOT_ISTPOS_ZENTRALANTRIEB_WERT           (RXBUF_UINT(0))
    #define I3_RES_IHX_STAT_MOT_ISTPOS_ZENTRALANTRIEB_WERT_UNIT      '°'
    #define I3_RES_IHX_STAT_MOT_ISTPOS_ZENTRALANTRIEB_WERT_TYPE      unsigned short
        // Actual value of gate position: 0 ... 360 degrees IHKA: 0 = 100% defrost 120 = 100% ventilation 242 = 100%
        // footwell IHKA-VA02 IHKS: pos_ist = position according to stepper motor driver pos_function = position
        // according to board structure, KFL - if pos_ist is less than or equal to 100 : pos_function = 100 - pos_ist -
        // otherwise: pos_function = 460 - pos_ist / Istwert Kulissenstellung: 0...360 Grad IHKA: 0 = 100% Defrost 120 =
        // 100% Belüftung 242 = 100% Fussraum  IHKA-VA02 IHKS: pos_ist = Position laut Schrittmotortreiber pos_function =
        // Position laut Brettaufbau, KFL  - falls pos_ist kleiner oder gleich 100: pos_function = 100 - pos_ist - sonst:
        // pos_function = 460 - pos_ist

    #define I3_RES_IHX_STAT_MOT_SOLLPOS_ZENTRALANTRIEB_WERT          (RXBUF_UINT(2))
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_ZENTRALANTRIEB_WERT_UNIT     '°'
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_ZENTRALANTRIEB_WERT_TYPE     unsigned short
        // Setpoint gate position: 0 ... 360 degrees IHKA: 0 = 100% defrost 120 = 100% ventilation 242 = 100% footwell
        // IHKA-VA02 IHKS: pos_ist = position according to stepper motor driver pos_function = position according to
        // board structure, KFL - if pos_ist is less than or equal to 100 : pos_function = 100 - pos_ist - otherwise:
        // pos_function = 460 - pos_ist / Sollwert Kulissenstellung: 0...360 Grad IHKA: 0 = 100% Defrost 120 = 100%
        // Belüftung 242 = 100% Fussraum   IHKA-VA02 IHKS: pos_ist = Position laut Schrittmotortreiber pos_function =
        // Position laut Brettaufbau, KFL  - falls pos_ist kleiner oder gleich 100: pos_function = 100 - pos_ist - sonst:
        // pos_function = 460 - pos_ist

#define I3_PID_IHX_KLP_POS_MISCHLUFT_LINKS_WERT                      0xD98C
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_LINKS_WERT          (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_LINKS_WERT_UNIT     '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_LINKS_WERT_TYPE     unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) 0 = cold 100 = warm
        // / Istwert Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden) 0 = Kalt 100
        // = Warm

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_LINKS_WERT         (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_LINKS_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_LINKS_WERT_TYPE    unsigned char
        // Setpoint damper position: 0 ... 100 0 = cold 100 = warm / Sollwert Klappenstellung: 0...100 0 = Kalt 100 =
        // Warm

#define I3_PID_IHX_KLP_POS_MISCHLUFT_RECHTS_WERT                     0xD98E
        // Reading out the setpoint and actual value of the flap position of the flap motor. / Auslesen des Soll- und
        // Ist-Werts der Klappenposition des Klappenmotors.

    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_RECHTS_WERT         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_RECHTS_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_KLP_ISTPOS_MISCHLUFT_RECHTS_WERT_TYPE    unsigned char
        // Actual value flap opening; 0 ... 100 (127 = read value invalid, 255 = flap not available) 0 = cold 100 = warm
        // / Istwert Klappenöffnung; 0...100  (127 = gelesener Wert ungültig, 255 = Klappe nicht vorhanden) 0 = Kalt 100
        // = Warm

    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_RECHTS_WERT        (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_RECHTS_WERT_UNIT   '%'
    #define I3_RES_IHX_STAT_KLP_SOLLPOS_MISCHLUFT_RECHTS_WERT_TYPE   unsigned char
        // Setpoint damper position: 0 ... 100 0 = cold 100 = warm / Sollwert Klappenstellung: 0...100 0 = Kalt 100 =
        // Warm

#define I3_PID_IHX_MIKROSCHALTER_ZENTRALANTRIEB                      0xD98F
        // Output of the status of the microswitch on the central drive: 0 = OFF, 1 = ON / Ausgabe des Status des
        // Mikroschalters am Zentralantrieb:  0 = AUS, 1 = EIN

    #define I3_RES_IHX_STAT_MIKROSCHALTER_ZENTRALANTRIEB_EIN         (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_MIKROSCHALTER_ZENTRALANTRIEB_EIN_UNIT    '0/1'
    #define I3_RES_IHX_STAT_MIKROSCHALTER_ZENTRALANTRIEB_EIN_TYPE    unsigned char
        // Output of the status of the microswitch on the central drive: 0 = OFF, 1 = ON / Ausgabe des Status des
        // Mikroschalters am Zentralantrieb:  0 = AUS, 1 = EIN

#define I3_PID_IHX_TEMP_BELUEFTUNG_WERT                              0xD990
        // Ventilation temperature sensor / Temperaturfühler Belüftung

    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_WERT                     (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_WERT_UNIT                '°C'
    #define I3_RES_IHX_STAT_TEMP_BELUEFTUNG_WERT_TYPE                char
        // Ventilation temperature sensor / Temperaturfühler Belüftung

#define I3_PID_IHX_TEMP_FUSSRAUM_WERT                                0xD991
        // Footwell temperature sensor / Temperaturfühler Fussraum

    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_WERT                       (RXBUF_SCHAR(0))
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_WERT_UNIT                  '°C'
    #define I3_RES_IHX_STAT_TEMP_FUSSRAUM_WERT_TYPE                  char
        // Footwell temperature sensor / Temperaturfühler Fussraum

#define I3_PID_IHX_VORHANDEN_AUDIOBEDIENTEIL                         0xD995
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_AUDIOBEDIENTEIL                (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_VORHANDEN_AUDIOBEDIENTEIL_UNIT           '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_AUDIOBEDIENTEIL_TYPE           short
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

#define I3_PID_IHX_POTI_SCHICHTUNG_MITTE_WERT                        0xD998
        // Potentiometer stratification ventilation: 0 ... 100% / Potentiometer Schichtung Belüftung: 0 ... 100%

    #define I3_RES_IHX_STAT_POTI_SCHICHTUNG_MITTE_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_POTI_SCHICHTUNG_MITTE_WERT_UNIT          '%'
    #define I3_RES_IHX_STAT_POTI_SCHICHTUNG_MITTE_WERT_TYPE          unsigned char
        // Potentiometer stratification ventilation: 0 ... 100% / Potentiometer Schichtung Belüftung: 0 ... 100%

#define I3_PID_IHX_MOT_POS_BEL_FUSS_LI_RE_WERT                       0xD99C
        // Reading out the setpoint and actual values for the central drive for ventilation and footwell. / Auslesen der
        // Soll- und Ist-Werte für den Zentralantrieb für Belüftung und Fussraum.

    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_LINKS_WERT           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_LINKS_WERT_UNIT      '%'
    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_LINKS_WERT_TYPE      unsigned char
        // Actual value central drive ventilation footwell: 0 ... 100% / Istwert Zentralantrieb Belüftung Fussraum:
        // 0...100 %

    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_RECHTS_WERT          (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_RECHTS_WERT_UNIT     '%'
    #define I3_RES_IHX_STAT_MOT_ISTPOS_BEL_FUSS_RECHTS_WERT_TYPE     unsigned char
        // Actual value central drive ventilation footwell: 0 ... 100% / Istwert Zentralantrieb Belüftung Fussraum:
        // 0...100 %

    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_LINKS_WERT          (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_LINKS_WERT_UNIT     '%'
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_LINKS_WERT_TYPE     unsigned char
        // Setpoint central drive ventilation footwell: 0 ... 100% / Sollwert Zentralantrieb Belüftung Fussraum: 0...100
        // %

    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_RECHTS_WERT         (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_RECHTS_WERT_UNIT    '%'
    #define I3_RES_IHX_STAT_MOT_SOLLPOS_BEL_FUSS_RECHTS_WERT_TYPE    unsigned char
        // Setpoint central drive ventilation footwell: 0 ... 100% / Sollwert Zentralantrieb Belüftung Fussraum: 0...100
        // %

#define I3_PID_IHX_VARIANTE_AUDIOBEDIENTEIL                          0xD9A0
        // For the audio control version, see table TAB_VARIANTE_AUDIOBEDIENTEIL / Variante Audiobedienteil siehe Tabelle
        // TAB_VARIANTE_AUDIOBEDIENTEIL

    #define I3_RES_IHX_STAT_VARIANTE_AUDIOBEDIENTEIL                 (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VARIANTE_AUDIOBEDIENTEIL_UNIT            '0-n'
    #define I3_RES_IHX_STAT_VARIANTE_AUDIOBEDIENTEIL_TYPE            unsigned char
        // For the audio control version, see table TAB_VARIANTE_AUDIOBEDIENTEIL / Variante Audiobedienteil siehe Tabelle
        // TAB_VARIANTE_AUDIOBEDIENTEIL

#define I3_PID_IHX_BUS_OUT_KOMPRESSORKUPPLUNG_EIN                    0xD9A1
        // Signal for the request to the compressor clutch 0 = clutch open 1 = clutch closed / Signal für die Anforderung
        // an die Kompressorkupplung 0 = Kupplung offen 1 = Kupplung geschlossen

    #define I3_RES_IHX_STAT_BUS_OUT_KOMPRESSORKUPPLUNG_EIN           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_BUS_OUT_KOMPRESSORKUPPLUNG_EIN_UNIT      '0/1'
    #define I3_RES_IHX_STAT_BUS_OUT_KOMPRESSORKUPPLUNG_EIN_TYPE      unsigned char
        // Signal for the request to the compressor clutch 0 = clutch open 1 = clutch closed / Signal für die Anforderung
        // an die Kompressorkupplung 0 = Kupplung offen 1 = Kupplung geschlossen

#define I3_PID_IHX_VORHANDEN_EKMV                                    0xD9A4
        // Electric refrigerant compressor: see table TAB_KMV_HYBRID_GENERATION / Elektrischer Kältemittelverdichter:
        // siehe Tabelle TAB_KMV_HYBRID_GENERATION

    #define I3_RES_IHX_STAT_VORHANDEN_EKMV                           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_EKMV_UNIT                      '0-n'
    #define I3_RES_IHX_STAT_VORHANDEN_EKMV_TYPE                      unsigned char
        // Electric refrigerant compressor: see table TAB_KMV_HYBRID_GENERATION / Elektrischer Kältemittelverdichter:
        // siehe Tabelle TAB_KMV_HYBRID_GENERATION

// Skipping STEUERN_ZENTRALANTRIEB on 0xD9A6 which takes arguments

// Skipping FREIGABE_KOMPRESSOREINLAUF on 0xD9A7 which takes arguments

#define I3_PID_IHX_KLIMA_VORN_PRG_HFS                                0xD9A8
        // Functional status of front window heating: 0 = OFF 1 = ON / Funktionszustand Frontscheibenheizung: 0 = AUS 1 =
        // EIN

    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HFS                       (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HFS_UNIT                  '0/1'
    #define I3_RES_IHX_STAT_KLIMA_VORN_PRG_HFS_TYPE                  unsigned char
        // Functional status of front window heating: 0 = OFF 1 = ON / Funktionszustand Frontscheibenheizung: 0 = AUS 1 =
        // EIN

#define I3_PID_IHX_WAERMEPUMPE_SENSOREN                              0xD9AC
        // Heat pump sensors / Sensoren der Wärmepumpe

    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_1_WERT              (RXBUF_UINT(0)*0.2f-20.0)
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_1_WERT_UNIT         '°C'
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_1_WERT_TYPE         float
        // Heat pump temperature sensor 1 / Wärmepumpe Temperaturfühler 1

    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_2_WERT              (RXBUF_UINT(2)*0.2f-20.0)
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_2_WERT_UNIT         '°C'
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_2_WERT_TYPE         float
        // Heat pump temperature sensor 2 / Wärmepumpe Temperaturfühler 2

    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_3_WERT              (RXBUF_UINT(4)*0.2f-20.0)
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_3_WERT_UNIT         '°C'
    #define I3_RES_IHX_STAT_WP_TEMPERATURFUEHLER_3_WERT_TYPE         float
        // Heat pump temperature sensor 3 / Wärmepumpe Temperaturfühler 3

    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_DRUCK_WERT               (RXBUF_UINT(6)/10.0f)
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_DRUCK_WERT_UNIT          'bar'
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_DRUCK_WERT_TYPE          float
        // Heat pump: pressure from pressure temperature sensor 1 / Wärmepumpe: Druck vom Druck-Temperaturfühler 1

    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_TEMP_WERT                (RXBUF_UINT(8)*0.2f-20.0)
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_TEMP_WERT_UNIT           '°C'
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_1_TEMP_WERT_TYPE           float
        // Heat pump: temperature from pressure temperature sensor 1 / Wärmepumpe: Temperatur vom Druck-Temperaturfühler
        // 1

    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_DRUCK_WERT               (RXBUF_UINT(10)/10.0f)
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_DRUCK_WERT_UNIT          'bar'
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_DRUCK_WERT_TYPE          float
        // Heat pump: pressure from pressure / temperature sensor 2 / Wärmepumpe: Druck vom Druck-Temperaturfühler 2

    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_TEMP_WERT                (RXBUF_UINT(12)*0.2f-20.0)
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_TEMP_WERT_UNIT           '°C'
    #define I3_RES_IHX_STAT_WP_PT_FUEHLER_2_TEMP_WERT_TYPE           float
        // Heat pump: temperature from pressure temperature sensor 2 / Wärmepumpe: Temperatur vom Druck-Temperaturfühler
        // 2

// Skipping WAERMEPUMPE_VENTILE on 0xD9AD which takes arguments

#define I3_PID_IHX_VORHANDEN_EDH                                     0xD9AE
        // 0x00 = eDH not available 0x01 = eDH available / 0x00 = eDH nicht vorhanden 0x01 = eDH vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_EDH                            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_EDH_UNIT                       '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_EDH_TYPE                       unsigned char
        // 0x00 = eDH not available 0x01 = eDH available / 0x00 = eDH nicht vorhanden 0x01 = eDH vorhanden

#define I3_PID_IHX_VORHANDEN_WAERMEPUMPE                             0xD9AF
        // 0x00 = heat pump not available 0x01 = heat pump available / 0x00 = Wärmepumpe nicht vorhanden 0x01 =
        // Wärmepumpe vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_WAERMEPUMPE                    (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_WAERMEPUMPE_UNIT               '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_WAERMEPUMPE_TYPE               unsigned char
        // 0x00 = heat pump not available 0x01 = heat pump available / 0x00 = Wärmepumpe nicht vorhanden 0x01 =
        // Wärmepumpe vorhanden

#define I3_PID_IHX_VORHANDEN_FSH                                     0xD9B1
        // 0x00 = front window heating not available 0x01 = front window heating available / 0x00 = Frontscheibenheizung
        // nicht vorhanden 0x01 = Frontscheibenheizung vorhanden

    #define I3_RES_IHX_STAT_VORHANDEN_FSH                            (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_VORHANDEN_FSH_UNIT                       '0/1'
    #define I3_RES_IHX_STAT_VORHANDEN_FSH_TYPE                       unsigned char
        // 0x00 = front window heating not available 0x01 = front window heating available / 0x00 = Frontscheibenheizung
        // nicht vorhanden 0x01 = Frontscheibenheizung vorhanden

// Skipping WAERMEPUMPE_ZWP on 0xD9DE which takes arguments

// Skipping WAERMEPUMPE_EINZELNE_VENTILE on 0xD9DF which takes arguments

#define I3_PID_IHX_SPANNUNG_KLEMME_30_WERT                           0xDAD8
        // Voltage value on the control unit at terminal 30 (accurate to one decimal place) / Spannungswert am
        // Steuergerät an Klemme 30 (auf eine Nachkommastelle genau)

    #define I3_RES_IHX_STAT_SPANNUNG_KLEMME_30_WERT                  (RXBUF_SINT(0)/10.0f)
    #define I3_RES_IHX_STAT_SPANNUNG_KLEMME_30_WERT_UNIT             'V'
    #define I3_RES_IHX_STAT_SPANNUNG_KLEMME_30_WERT_TYPE             float
        // Voltage value on the control unit at terminal 30 (accurate to one decimal place) / Spannungswert am
        // Steuergerät an Klemme 30 (auf eine Nachkommastelle genau)

#define I3_PID_IHX_STATUS_KLEMME_R_EIN                               0xDAFD
        // Status of terminal R in the control unit: 0 = OFF, 1 = ON / Status Klemme R im Steuergerät: 0=AUS, 1=EIN

    #define I3_RES_IHX_STAT_STATUS_KLEMME_R_EIN                      (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_STATUS_KLEMME_R_EIN_UNIT                 '0/1'
    #define I3_RES_IHX_STAT_STATUS_KLEMME_R_EIN_TYPE                 short
        // Status of terminal R in the control unit: 0 = OFF, 1 = ON / Status Klemme R im Steuergerät: 0=AUS, 1=EIN

#define I3_PID_IHX_STATUS_KLEMME_15_EIN                              0xDAFE
        // Status of terminal 15 in the control unit: 0 = OFF; 1 = ON / Status Klemme 15 im Steuergerät: 0=AUS; 1=EIN

    #define I3_RES_IHX_STAT_STATUS_KLEMME_15_EIN                     (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_STATUS_KLEMME_15_EIN_UNIT                '0/1'
    #define I3_RES_IHX_STAT_STATUS_KLEMME_15_EIN_TYPE                short
        // Status of terminal 15 in the control unit: 0 = OFF; 1 = ON / Status Klemme 15 im Steuergerät: 0=AUS; 1=EIN

#define I3_PID_IHX_STATUS_KLEMME_30B_EIN                             0xDB06
        // Status of terminal 30B in the control unit: 0 = OFF; 1 = ON / Status Klemme 30B im Steuergerät: 0=AUS; 1=EIN

    #define I3_RES_IHX_STAT_STATUS_KLEMME_30B_EIN                    (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_STATUS_KLEMME_30B_EIN_UNIT               '0/1'
    #define I3_RES_IHX_STAT_STATUS_KLEMME_30B_EIN_TYPE               short
        // Status of terminal 30B in the control unit: 0 = OFF; 1 = ON / Status Klemme 30B im Steuergerät: 0=AUS; 1=EIN

#define I3_PID_IHX_STATUS_KLEMME_50_EIN                              0xDB10
        // Status of terminal 50 in the control unit: 0 = OFF; 1 = ON / Status Klemme 50 im Steuergerät: 0=AUS; 1=EIN

    #define I3_RES_IHX_STAT_STATUS_KLEMME_50_EIN                     (RXBUF_SINT(0))
    #define I3_RES_IHX_STAT_STATUS_KLEMME_50_EIN_UNIT                '0/1'
    #define I3_RES_IHX_STAT_STATUS_KLEMME_50_EIN_TYPE                short
        // Status of terminal 50 in the control unit: 0 = OFF; 1 = ON / Status Klemme 50 im Steuergerät: 0=AUS; 1=EIN

#define I3_PID_IHX_HV_EDH_STECKVERBINDUNG                            0xDFC0
        // Status high-voltage plug connection: See table TAB_HV_STECKVERBINDUNG / Status Hochvolt-Steckverbindung: Siehe
        // Tabelle TAB_HV_STECKVERBINDUNG

    #define I3_RES_IHX_STAT_HV_STECKER_EDH                           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_HV_STECKER_EDH_UNIT                      '0-n'
    #define I3_RES_IHX_STAT_HV_STECKER_EDH_TYPE                      unsigned char
        // Status high-voltage plug connection: See table TAB_HV_STECKVERBINDUNG / Status Hochvolt-Steckverbindung: Siehe
        // Tabelle TAB_HV_STECKVERBINDUNG

#define I3_PID_IHX_HV_EKMV_STECKVERBINDUNG                           0xDFC1
        // Status high-voltage plug connection: See table TAB_HV_STECKVERBINDUNG / Status Hochvolt-Steckverbindung: Siehe
        // Tabelle TAB_HV_STECKVERBINDUNG

    #define I3_RES_IHX_STAT_HV_STECKER_EKMV                          (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_HV_STECKER_EKMV_UNIT                     '0-n'
    #define I3_RES_IHX_STAT_HV_STECKER_EKMV_TYPE                     unsigned char
        // Status high-voltage plug connection: See table TAB_HV_STECKVERBINDUNG / Status Hochvolt-Steckverbindung: Siehe
        // Tabelle TAB_HV_STECKVERBINDUNG

#define I3_PID_IHX_UWB_CPD_DIAGINFO                                  0x4001
        // Environmental conditions for HV battery cooling performance / Umweltbedingungen zum HV-Batterie
        // Kühlperformance

#define I3_PID_IHX_UWB_HKLUSV_DIAGINFO                               0x4002
        // Diagnostic status of the heating circuit switching valve. Distinction stuck open / closed. / Diagnosezustand
        // der Heizkreislaufumschaltventil. Unterscheidung klemmt offen / zu.

    #define I3_RES_IHX_STAT_AUTOADR                                  (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_AUTOADR_UNIT                             '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_TYPE                             unsigned char
        // real status auto addressing / real status autoadresierung

    #define I3_RES_IHX_STAT_AUTOADR_ERROR                            (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_AUTOADR_ERROR_UNIT                       '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_ERROR_TYPE                       unsigned char
        // Error: 0: no error 1: by preparing the network for autoaddressing 2: by resetting the network after an
        // autoaddressing 3: by setting the actuators in service mode 4: by setting the actuators in normal mode 5: by
        // addressing & programming the actuators. 6: unknown error occurred. / Error: 0:  no error  1:  by preparing the
        // network for autoaddressing  2: by resetting the network after an autoaddressing  3: by setting the actuators
        // in service mode  4: by setting the actuators in normal mode  5:  by addressing & programming the actuators. 
        // 6:  unknow error occured.

    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_0_1_2_3                    (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_0_1_2_3_UNIT               '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_0_1_2_3_TYPE               unsigned char
        // Lin Motorr: Motor 0 to Motor 3. (11111111 11111111) / Lin Motorenr: Motor 0 to Motor 3. (11111111 11111111)

    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_4_5_6_7                    (RXBUF_UCHAR(3))
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_4_5_6_7_UNIT               '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_4_5_6_7_TYPE               unsigned char
        // Lin motor no .: Motor 4 to Motor 7. (01111111 11111111) / Lin Motorenr: Motor 4 to Motor 7. (01111111
        // 11111111)

    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_8_9_10_11                  (RXBUF_UCHAR(4))
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_8_9_10_11_UNIT             '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_8_9_10_11_TYPE             unsigned char
        // Lin Motorenr: Motor 8 to Motor 11. (01111111 11111111) / Lin Motorenr: Motor 8 to Motor 11. (01111111
        // 11111111)

    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_12_13_14                   (RXBUF_UCHAR(5))
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_12_13_14_UNIT              '0-n'
    #define I3_RES_IHX_STAT_AUTOADR_MOTOR_12_13_14_TYPE              unsigned char
        // Lin Motorenr: Motor 8 to Motor 11. (01111111 11111111) / Lin Motorenr: Motor 8 to Motor 11. (01111111
        // 11111111)

    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_0_1_2_3                   (RXBUF_UCHAR(6))
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_0_1_2_3_UNIT              '0-n'
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_0_1_2_3_TYPE              unsigned char
        // Programming status: 1: programmed 0: not programmed Motor 15 to Motor 1. (01111111 11111111) / Programming
        // status: 1: programmed 0: not programmed  Motor 15 to Motor 1. (01111111 11111111)

    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_4_5_6_7                   (RXBUF_UCHAR(7))
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_4_5_6_7_UNIT              '0-n'
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_4_5_6_7_TYPE              unsigned char
        // Programming status: 1: programmed 0: not programmed Motor 15 to Motor 1. (01111111 11111111) / Programming
        // status: 1: programmed 0: not programmed  Motor 15 to Motor 1. (01111111 11111111)

    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_8_9_10_11                 (RXBUF_UCHAR(8))
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_8_9_10_11_UNIT            '0-n'
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_8_9_10_11_TYPE            unsigned char
        // Programming status: 1: programmed 0: not programmed Motor 15 to Motor 1. (01111111 11111111) / Programming
        // status: 1: programmed 0: not programmed  Motor 15 to Motor 1. (01111111 11111111)

    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_12_13_14                  (RXBUF_UCHAR(9))
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_12_13_14_UNIT             '0-n'
    #define I3_RES_IHX_STAT_PROGRAMM_MOTOR_12_13_14_TYPE             unsigned char
        // Programming status: 1: programmed 0: not programmed Motor 15 to Motor 1. (01111111 11111111) / Programming
        // status: 1: programmed 0: not programmed  Motor 15 to Motor 1. (01111111 11111111)

#define I3_PID_IHX__ADC_EINGAENGE_WERT                               0x4010
        // Return value of ADC converter for all analogue input: STAT_ADC_VERDAMPFER_WERT for TEMP_SENS_VERD / Return
        // value of ADC converter for all analogue input: STAT_ADC_VERDAMPFER_WERT  for TEMP_SENS_VERD

    #define I3_RES_IHX_STAT_ADC_VERDAMPFER                           (RXBUF_UINT(0))
    #define I3_RES_IHX_STAT_ADC_VERDAMPFER_UNIT                      '0-n'
    #define I3_RES_IHX_STAT_ADC_VERDAMPFER_TYPE                      unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_ZWEITE_VERDAMPFER                    (RXBUF_UINT(2))
    #define I3_RES_IHX_STAT_ADC_ZWEITE_VERDAMPFER_UNIT               '0-n'
    #define I3_RES_IHX_STAT_ADC_ZWEITE_VERDAMPFER_TYPE               unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_BELUEFTUNG_LINKS                     (RXBUF_UINT(4))
    #define I3_RES_IHX_STAT_ADC_BELUEFTUNG_LINKS_UNIT                '0-n'
    #define I3_RES_IHX_STAT_ADC_BELUEFTUNG_LINKS_TYPE                unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_BELEUFTUNG_RECHTS                    (RXBUF_UINT(6))
    #define I3_RES_IHX_STAT_ADC_BELEUFTUNG_RECHTS_UNIT               '0-n'
    #define I3_RES_IHX_STAT_ADC_BELEUFTUNG_RECHTS_TYPE               unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_LINKS                       (RXBUF_UINT(8))
    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_LINKS_UNIT                  '0-n'
    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_LINKS_TYPE                  unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_RECHTS                      (RXBUF_UINT(10))
    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_RECHTS_UNIT                 '0-n'
    #define I3_RES_IHX_STAT_ADC_FUSSRAUM_RECHTS_TYPE                 unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_SCHICHTUNG_POTI                      (RXBUF_UINT(12))
    #define I3_RES_IHX_STAT_ADC_SCHICHTUNG_POTI_UNIT                 '0-n'
    #define I3_RES_IHX_STAT_ADC_SCHICHTUNG_POTI_TYPE                 unsigned short
        // Temperature sensor / Temperaturfühler

    #define I3_RES_IHX_STAT_ADC_KLEMME_30                            (RXBUF_UINT(14))
    #define I3_RES_IHX_STAT_ADC_KLEMME_30_UNIT                       '0-n'
    #define I3_RES_IHX_STAT_ADC_KLEMME_30_TYPE                       unsigned short
        // Voltage value on the control unit at terminal 30 / Spannungswert am Steuergerät an Klemme 30

    #define I3_RES_IHX_STAT_EXT_SUPPLY_DIAG                          (RXBUF_UINT(16))
    #define I3_RES_IHX_STAT_EXT_SUPPLY_DIAG_UNIT                     '0-n'
    #define I3_RES_IHX_STAT_EXT_SUPPLY_DIAG_TYPE                     unsigned short
        // Current value diagnosis / Stromswert  diagnose

    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_SPANNUNG                    (RXBUF_UINT(18))
    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_SPANNUNG_UNIT               '0-n'
    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_SPANNUNG_TYPE               unsigned short
        // Voltage value diagnosis / Spannungswert  diagnose

    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_STROM                       (RXBUF_UINT(20))
    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_STROM_UNIT                  '0-n'
    #define I3_RES_IHX_STAT_ADC_LIN_DIAG_STROM_TYPE                  unsigned short
        // Current value diagnosis / Stromswert  diagnose

#define I3_PID_IHX__STAT_STANDHEIZUNG_WERT                           0x4011
        // Return the value of the parking heater ECU input: WAKESH / Return the value of the parking-heater ECU input: 
        // WAKESH

    #define I3_RES_IHX_STAT_STANDHEIZUNG_WERT                        (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_STANDHEIZUNG_WERT_UNIT                   'HEX'
    #define I3_RES_IHX_STAT_STANDHEIZUNG_WERT_TYPE                   unsigned char
        // Return the value of the parking heater ECU input: WAKESH / Return the value of the parking-heater ECU input: 
        // WAKESH

#define I3_PID_IHX__STANDHEIZUNG_AUSGANG                             0x4012
        // Command the ECU output OUTPUT_SH / Command the ECU output OUTPUT_SH

    #define I3_RES_IHX_STAT_STADHEIZING_AUSGANG                      (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_STADHEIZING_AUSGANG_UNIT                 '0-n'
    #define I3_RES_IHX_STAT_STADHEIZING_AUSGANG_TYPE                 unsigned char
        // STADHEIZING_EXIT / STADHEIZING_AUSGANG

    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_CMD_AUSGANG              (RXBUF_UCHAR(1))
    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_CMD_AUSGANG_UNIT         '0-n'
    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_CMD_AUSGANG_TYPE         unsigned char
        // AC_LIN_SPANNUNG_CMD_AUSGANG / AC_LIN_SPANNUNG_CMD_AUSGANG

    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_DEN_AUSGANG              (RXBUF_UCHAR(2))
    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_DEN_AUSGANG_UNIT         '0-n'
    #define I3_RES_IHX_STAT_AC_LIN_SPANNUNG_DEN_AUSGANG_TYPE         unsigned char
        // AC_LIN_SPANNUNG_DEN_AUSGANG / AC_LIN_SPANNUNG_DEN_AUSGANG

// Skipping _VALEO_ENABLE on 0x4018 which takes arguments

// Skipping _VALEO_PCB_HW_NUMBER on 0x4019 which takes arguments

// Skipping _VALEO_PCB_PRODUCTION_DATA on 0x401A which takes arguments

// Skipping _VALEO_PART_NUMBER on 0x401B which takes arguments

// Skipping _VALEO_PART_NUMBER_INDEX on 0x401C which takes arguments

// Skipping _VALEO_SERIAL_NUMBER on 0x401D which takes arguments

// Skipping _ICT_STEP_COUNTER on 0x401E which takes arguments

// Skipping _HWAP_ID on 0x401F which takes arguments

#define I3_PID_IHX__VALEO_LESEN_SPEICHER                             0x4020
        // MEMORY BLOCK / SPEICHER BLOCK

    #define I3_RES_IHX_STAT_SPEICHER_BLOCK                           (RXBUF_UCHAR(0))
    #define I3_RES_IHX_STAT_SPEICHER_BLOCK_UNIT                      '0-n'
    #define I3_RES_IHX_STAT_SPEICHER_BLOCK_TYPE                      unsigned char
        // MEMORY BLOCK / SPEICHER BLOCK

// Skipping _VALEO_LESEN_SCHREIBEN on 0x4021 which takes arguments

// Skipping _HWAP_VERSION on 0x4023 which takes arguments
