
//
// Warning: don't edit - generated by generate_ecu_code.pl processing ../dev/nbtevo.json: NBT 63: Headunit high
// This generated code  makes it easier to process CANBUS messages from the NBT ecu in a BMW i3
//

#define I3_ECU_NBT_TX                                                0x06F163
#define I3_ECU_NBT_RX                                                0x0663F1

#define I3_PID_NBT_RESET_AKTIVIERUNGSLEITUNG                         0x1024
        // Reset_Aktivierungsleitung DOORS-ID: FZHS_3798 / Reset_Aktivierungsleitung DOORS-ID: FZHS_3798

#define I3_PID_NBT_ETH_PHY_SWITCH_ENGINE_RESET                       0x1044
        // Is used to reset a PHY or switch / es and optionally to keep it in the reset state. / Wird verwendet, um einen
        // PHY oder Switch/es zurückzusetzen und optional im Zustand Reset zu halten.

    #define I3_RES_NBT_STAT_PHY_STOPPED_FOR_T_WERT                   (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_PHY_STOPPED_FOR_T_WERT_UNIT              's'
    #define I3_RES_NBT_STAT_PHY_STOPPED_FOR_T_WERT_TYPE              unsigned char
        // Remaining duration in seconds during which the given PHY is still inactive. Value range: 0 seconds - 255
        // seconds / Verbleibende Dauer in Sekunden, in denen der gegebene PHY noch inaktiv ist.  Wertebereich: 0
        // Sekunden - 255 Sekunden

// Skipping ETH_CABLE_DIAG on 0x1046 which takes arguments

// Skipping ETH_PHY_IDENTIFIER on 0x1047 which takes arguments

// Skipping ETH_PHY_LOOPBACK_TEST on 0x1048 which takes arguments

// Skipping ETH_GET_PORT_TX_RX_STATS on 0x1049 which takes arguments

#define I3_PID_NBT_ETH_RESET_PORT_CONFIGURATION                      0x104A
        // Resets the saved port configuration. Implementation is mandatory for ECUs with more than 1 port. For ECUs with
        // 1 port: Must be implemented for SP2018 control units, optional for SP2015 control units. / Setzt die
        // gespeicherte Portkonfiguration zurück. Für ECUs mit mehr als 1 Port verpflichtend umzusetzen. Für ECUs mit 1
        // Port: Verpflichtend umzusetzen für SP2018 Steuergeräte, optional für SP2015 Steuergeräte. 

#define I3_PID_NBT_ETH_RESET_PORT_TX_RX_STATS                        0x104B
        // Resets the receive and transmit counters of a switch. / Setzt die Receive- und Transmitzähler eines Switchs
        // zurück.

// Skipping ETH_ENABLE_TEST_MODE on 0x104C which takes arguments

#define I3_PID_NBT_STATUS_LIFECYCLE                                  0x1735
        // Status lifecycle / Status Lifecycle

    #define I3_RES_NBT_STAT_LIFECYCLE                                (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_LIFECYCLE_UNIT                           '0-n'
    #define I3_RES_NBT_STAT_LIFECYCLE_TYPE                           unsigned char
        // Status lifecycle / Status Lifecycle

#define I3_PID_NBT_ETH_GET_NUMBER_OF_PORTS                           0x1800
        // Number of ports / Anzahl der Ports

    #define I3_RES_NBT_STAT_NUM_PORTS_WERT                           (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_NUM_PORTS_WERT_TYPE                      unsigned char
        // Number of ports / Anzahl der Ports

#define I3_PID_NBT_ETH_PHY_LINK_STATE                                0x1802
        // Returns the current link status of all physically available ports. / Gibt den aktuellen Link-Status aller
        // physikalisch vorhandenen Ports zurück.

    #define I3_RES_NBT_STAT_NUM_OF_PORTS_WERT                        (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_NUM_OF_PORTS_WERT_TYPE                   unsigned char
        // Number of physical ports. / Anzahl der physikalischen Ports. 

    // BF_PHY_LINK_STATE_BTFLD is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Link status of all ports. / Linkstatus aller Port.
            // STAT_PHY_LINK_STATE_PORT_00: Mask: 0x0001 - Link status for port 0
            // STAT_PHY_LINK_STATE_PORT_01: Mask: 0x0002 - Link status for port 1
            // STAT_PHY_LINK_STATE_PORT_02: Mask: 0x0004 - Link status for port 2
            // STAT_PHY_LINK_STATE_PORT_03: Mask: 0x0008 - Link status for port 3
            // STAT_PHY_LINK_STATE_PORT_04: Mask: 0x0010 - Link status for port 4
            // STAT_PHY_LINK_STATE_PORT_05: Mask: 0x0020 - Link status for port 5
            // STAT_PHY_LINK_STATE_PORT_06: Mask: 0x0040 - Link status for port 6
            // STAT_PHY_LINK_STATE_PORT_07: Mask: 0x0080 - Link status for port 7
            // STAT_PHY_LINK_STATE_PORT_08: Mask: 0x0100 - Link status for port 8
            // STAT_PHY_LINK_STATE_PORT_09: Mask: 0x0200 - Link status for port 9
            // STAT_PHY_LINK_STATE_PORT_10: Mask: 0x0400 - Link status for port 10
            // STAT_PHY_LINK_STATE_PORT_11: Mask: 0x0800 - Link status for port 11
            // STAT_PHY_LINK_STATE_PORT_12: Mask: 0x1000 - Link status for port 12
            // STAT_PHY_LINK_STATE_PORT_13: Mask: 0x2000 - Link status for port 13
            // STAT_PHY_LINK_STATE_PORT_14: Mask: 0x4000 - Link status for port 14
            // STAT_PHY_LINK_STATE_PORT_15: Mask: 0x8000 - Link status for port 15
    #define I3_RES_NBT_BF_PHY_LINK_STATE_BTFLD                       (RXBUF_UINT(1))
    #define I3_RES_NBT_BF_PHY_LINK_STATE_BTFLD_UNIT                  'Bit'
    #define I3_RES_NBT_BF_PHY_LINK_STATE_BTFLD_TYPE                  unsigned short
        // Link status of all ports. / Linkstatus aller Port.

#define I3_PID_NBT_ETH_LEARN_PORT_CONFIGURATION                      0x1803
        // Returns the learned port configuration of the SG. Implementation is mandatory for ECUs with more than 1 port.
        // For ECUs with 1 port: Must be implemented for SP2018 control units, optional for SP2015 control units. / Gibt
        // die gelernte Port-Konfiguration des SGs zurück.  Für ECUs mit mehr als 1 Port verpflichtend umzusetzen. Für
        // ECUs mit 1 Port: Verpflichtend umzusetzen für SP2018 Steuergeräte, optional für SP2015 Steuergeräte.

    #define I3_RES_NBT_STAT_LEARN_PORT_CONFIGURATION                 (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_LEARN_PORT_CONFIGURATION_UNIT            '0-n'
    #define I3_RES_NBT_STAT_LEARN_PORT_CONFIGURATION_TYPE            unsigned char
        // 0: Learning successful 1: Learning not successful or not yet learned / 0: Lernen erfolgreich 1: Lernen nicht
        // erfolgreich oder noch nicht gelernt

    // BF_ETH_PORT_CONFIGURATION is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // 1 bit per port, which indicates whether LinkUp (1) or no link (0) is present. / Pro Port 1Bit, das angibt ob
        // LinkUp(1) oder kein Link (0) vorliegt.
            // STAT_PORT_00: Mask: 0x0001 - Port status port 00
            // STAT_PORT_01: Mask: 0x0002 - Port status port 01
            // STAT_PORT_02: Mask: 0x0004 - Port status port 02
            // STAT_PORT_03: Mask: 0x0008 - Port status port 03
            // STAT_PORT_04: Mask: 0x0010 - Port status port 04
            // STAT_PORT_05: Mask: 0x0020 - Port status port 05
            // STAT_PORT_06: Mask: 0x0040 - Port status port 06
            // STAT_PORT_07: Mask: 0x0080 - Port status port 07
            // STAT_PORT_08: Mask: 0x0100 - Port status port 08
            // STAT_PORT_09: Mask: 0x0200 - Port status port 09
            // STAT_PORT_10: Mask: 0x0400 - Port status port 10
            // STAT_PORT_11: Mask: 0x0800 - Port status port 11
            // STAT_PORT_12: Mask: 0x1000 - Port status port 12
            // STAT_PORT_13: Mask: 0x2000 - Port status port 13
            // STAT_PORT_14: Mask: 0x4000 - Port status port 14
            // STAT_PORT_15: Mask: 0x8000 - Port status port 15
    #define I3_RES_NBT_BF_ETH_PORT_CONFIGURATION                     (RXBUF_UINT(1))
    #define I3_RES_NBT_BF_ETH_PORT_CONFIGURATION_UNIT                'Bit'
    #define I3_RES_NBT_BF_ETH_PORT_CONFIGURATION_TYPE                unsigned short
        // 1 bit per port, which indicates whether LinkUp (1) or no link (0) is present. / Pro Port 1Bit, das angibt ob
        // LinkUp(1) oder kein Link (0) vorliegt.

// Skipping STEUERN_KLANGZEICHEN on 0xA000 which takes arguments

// Skipping SINUSGENERATOR on 0xA001 which takes arguments

#define I3_PID_NBT_STEUERN_VOLUMEAUDIO_DEFAULT                       0xA002
        // Reset of all volume values to default values / Zurücksetzen aller Lautstärkewerte auf Default-Werte

// Skipping STEUERN_PDC_SIGNAL on 0xA003 which takes arguments

#define I3_PID_NBT_STEUERN_LINEAR                                    0xA004
        // Resetting the faders and volume to default values / Zurücksetzen der Fader und Lautstärke auf Default-Werte

// Skipping STEUERN_EJECT on 0xA006 which takes arguments

// Skipping STEUERN_EMERGENCY_EJECT on 0xA007 which takes arguments

// Skipping WAVEBAND on 0xA008 which takes arguments

// Skipping STEUERN_TUNER_SUCHLAUF on 0xA009 which takes arguments

#define I3_PID_NBT_FIND_BEST_STATION                                 0xA00A
        // Returns the status of the searching process and the information data of the best station if the searching
        // process has been ended successfully. / Returns the status of the searching process and the information data of
        // the best station if the searching process has been ended successfully.

    #define I3_RES_NBT_STAT_SEARCHING_PROCESS                        (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_UNIT                   '0-n'
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_TYPE                   unsigned char
        // This status must be reinitialised to 0 when the head unit starts up (normal wake up, reset). / This status
        // must be reinitialised to 0 when the Head-Unit starts up (normal wake up, reset).

    // Can't yet generate code for STAT_NAME_TEXT of type string[8], at offset 1. But we account for the 8 bytes
        // PS name of the best station / PS name of the best station

    #define I3_RES_NBT_STAT_PI_WERT                                  (RXBUF_UINT(9))
    #define I3_RES_NBT_STAT_PI_WERT_TYPE                             unsigned short
        // Program identification of the best station / Program Identification of the best station

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT                       (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_TYPE                  unsigned char
        // Field strength of the best station / Fieldstrength of the best station

    #define I3_RES_NBT_STAT_QUALITY_WERT                             (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_QUALITY_WERT_TYPE                        unsigned char
        // Quality of the best station / Quality of the best station

// Skipping NEXT_ENTSOURCE on 0xA00B which takes arguments

// Skipping NAVI_SIMULATION on 0xA00E which takes arguments

// Skipping TEST_ANTENNE on 0xA018 which takes arguments

// Skipping SIGNALAUSGABE on 0xA01A which takes arguments

// Skipping VIDEOVERBINDUNG on 0xA01C which takes arguments

// Skipping TEST_VIDEOEINGANG on 0xA01D which takes arguments

// Skipping TEST_VERBAU on 0xA01E which takes arguments

// Skipping LAUTSPRECHER_IMPEDANZMESSUNG on 0xA021 which takes arguments

// Skipping SELBSTTEST on 0xA022 which takes arguments

#define I3_PID_NBT_STEUERN_INTERNAL_RESET                            0xA023
        // not defined in diagnosis database / not defined in diagnosis database

// Skipping MENU on 0xA024 which takes arguments

// Skipping LANGUAGE on 0xA025 which takes arguments

// Skipping STEUERN_NAVI_SPEECH on 0xA027 which takes arguments

// Skipping STATUS_USB_STACK_INFO_FOR_DEVICE on 0xA02E which takes arguments

#define I3_PID_NBT_PROVISIONING                                      0xA02F
        // Status of the provisioning process / Status des Provisionierungsprozess

    #define I3_RES_NBT_STAT_PROVISIONING                             (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_PROVISIONING_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_PROVISIONING_TYPE                        unsigned char
        // Status of the provisioning process, values according to table TProvisioningStatus / Status des
        // Provisionierungsprozess, Werte gemäß Tabelle TProvisioningStatus

#define I3_PID_NBT_STEUERN_DELETE_COOKIES                            0xA030
        // not defined in diagnosis database / not defined in diagnosis database

// Skipping STEUERN_VOLUMEAUDIO on 0xA036 which takes arguments

// Skipping STEUERN_TRACK_NUMBER on 0xA037 which takes arguments

// Skipping STATUS_VOLUMEAUDIO on 0xA039 which takes arguments

// Skipping NAVI_MAP on 0xA03A which takes arguments

#define I3_PID_NBT_STEUERN_RESCUE_MODE                               0xA03B
        // not defined in diagnosis database / not defined in diagnosis database

// Skipping LUEFTER on 0xA03C which takes arguments

#define I3_PID_NBT_SDARS_FACTORY_DEFAULTS                            0xA03D
        // Sets factory defaults for SDARS / Sets factory defaults for SDARS

    #define I3_RES_NBT_STAT_SDARS_FACTORY_DEFAULTS                   (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SDARS_FACTORY_DEFAULTS_UNIT              '0-n'
    #define I3_RES_NBT_STAT_SDARS_FACTORY_DEFAULTS_TYPE              unsigned char
        // SDARS factory defaults / SDARS Factory Defaults

#define I3_PID_NBT_FIND_BEST_STATION_DAB                             0xA03F
        // not defined in diagnosis database / not defined in diagnosis database

    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS_DAB             (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS_DAB_UNIT        '0-n'
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS_DAB_TYPE        unsigned char
        // - / -

    // Can't process STAT_ENSEMBLE_NAME_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_ENSEMBLE_ID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_ENSEMBLE_BER_WERT                        (RXBUF_UINT(1))
    #define I3_RES_NBT_STAT_ENSEMBLE_BER_WERT_UNIT                   'HEX'
    #define I3_RES_NBT_STAT_ENSEMBLE_BER_WERT_TYPE                   unsigned short
        // Bit error rate of active ensemble / Bit Error Rate of active ensemble

    // Can't process STAT_SERVICE_NAME_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping ACTIVATION_STATE_VICS_BEACON_DIAGNOSIS on 0xA044 which takes arguments

#define I3_PID_NBT_FIND_BEST_TMC_STATION                             0xA045
        // Call starts the search for the best TMC station / Aufruf startet die Suche nach den besten TMC-Sender

    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS                 (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS_UNIT            '0-n'
    #define I3_RES_NBT_STAT_SEARCHING_PROCESS_STATUS_TYPE            unsigned char
        // TSearchingProcess table / Tabelle TSearchingProcess

    // Can't process STAT_NAME_TEXT_0XA045 - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_PI_WERT_0XA045                           (RXBUF_UINT(1))
    #define I3_RES_NBT_STAT_PI_WERT_0XA045_TYPE                      unsigned short
        // Program identification of the best station / Program Identification of the best station

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XA045                (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XA045_TYPE           unsigned char
        // Field strength of the best station: Range: 0 & 255 / Fieldstrength of the best station: Range: 0&255

    #define I3_RES_NBT_STAT_QUALITY_WERT_0XA045                      (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_QUALITY_WERT_0XA045_TYPE                 unsigned char
        // Quality of the best station: Range: 0 & 255 / Quality of the best station: Range: 0&255

// Skipping BT on 0xA048 which takes arguments

// Skipping BT_ERKENNUNGSMODUS on 0xA049 which takes arguments

#define I3_PID_NBT_STEUERN_BT_DELETE_ALL_PHONE_ID                    0xA04B
        // Deleting connected Bluetooth devices / Löschen angekoppelter Bluetooth Devices

#define I3_PID_NBT_INITIALISATION_COUNTER_REGION_CODE_DVD            0xA04D
        // Value of the change count for the DVD country code / Wert des Änderungszähles für den DVD Ländercode

    #define I3_RES_NBT_STAT_INITIALISATION_COUNTER_REGION_CODE_DVD_WERT (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_INITIALISATION_COUNTER_REGION_CODE_DVD_WERT_TYPE unsigned char
        // Value change counter DVD country code / Wert ÄnderugszählerDVDLändercode

#define I3_PID_NBT_SWUP_REMOVE_CUSTOMER_UPDATES                      0xA05A
        // Removes all updates of the user I-level status restore without KISU / Entfernt alle Updates des Benutzers
        // I-Stufenstand ohne KISU wiederherstellen

    #define I3_RES_NBT_STAT_REMOVE_CUSTOMER_UPDATES                  (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_REMOVE_CUSTOMER_UPDATES_UNIT             '0-n'
    #define I3_RES_NBT_STAT_REMOVE_CUSTOMER_UPDATES_TYPE             unsigned char
        // Remove all user updates / Entfernen aller Benutzer Updates

// Skipping USB_TEST_TEL on 0xA06A which takes arguments

// Skipping VICS_AUTOSTORE on 0xA077 which takes arguments

// Skipping SAFEMODE_HDD on 0xA07C which takes arguments

// Skipping RESET_DATABASES on 0xA082 which takes arguments

// Skipping RESET_PIA_SETTINGS on 0xA083 which takes arguments

#define I3_PID_NBT_STEUERN_CLEAR_FAULT_TRACKING                      0xA085
        // Deletes the extended error evaluation data / Löscht die erweiterten Fehlerauswertungsdaten

// Skipping TOUCH_COMMAND_ID on 0xA09B which takes arguments

// Skipping TOUCH_COMMAND_BATTERY on 0xA09C which takes arguments

// Skipping TOUCH_COMMAND_INFO on 0xA09D which takes arguments

// Skipping TOUCH_COMMAND_MEMORY on 0xA09E which takes arguments

// Skipping WLAN_MAC_ADDRESS on 0xA09F which takes arguments

#define I3_PID_NBT_TDA_AKTIVIERUNG                                   0xA0A8
        // Trigger the activation of the BMW TeleServices / Trigger die Aktivierung des BMW TeleServices

#define I3_PID_NBT_UPDATE_ZERTIFIKATE                                0xA0A9
        // Triggers the update of the certificate list / Löst die Aktualisierung der Zertifikatliste aus

// Skipping SDARS_ACTIVATION on 0xA0AA which takes arguments

#define I3_PID_NBT_TELNET_ZUGANG_AUS                                 0xA0B0
        // The job deactivates the Telnet access in HU or RSE. / Der Job deaktiviert den Telnet Zugang in HU oder RSE.

    #define I3_RES_NBT_STAT_TELNET_ZUGANG                            (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_TELNET_ZUGANG_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_TELNET_ZUGANG_TYPE                       unsigned char
        // Status of the telnet access of the HU or the RSE. / Status des Telnetzugangs der HU oder des RSE.

// Skipping SDARS_GENERATOR_FREQUENCY_SXM on 0xA0B5 which takes arguments

// Skipping WLAN_RESET_TO_BASIC_STATE on 0xA0B9 which takes arguments

#define I3_PID_NBT_WLAN_WPS_PUSH_BUTTON                              0xA0BB
        // Trigger the button push for WPS push button pairing. / Trigger the button push for WPS Push Button pairing.

// Skipping SDARS_PREACTIVATION_MODE on 0xA0C8 which takes arguments

// Skipping SDARS_MPFA on 0xA0D7 which takes arguments

#define I3_PID_NBT_HU_VIN_PROTECTION                                 0xA0F6
        // VIN protection in combination with BDC 2013/2015/2018 / VIN Schutz in Kombination mit BDC 2013/2015/2018 

    #define I3_RES_NBT_STAT_HU_VIN_PROTECTION                        (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_HU_VIN_PROTECTION_UNIT                   '0-n'
    #define I3_RES_NBT_STAT_HU_VIN_PROTECTION_TYPE                   unsigned char
        // reads the status of the VIN reading / liest den Status des Auslesens der VIN

#define I3_PID_NBT_HU_FSC_REFURBISH_UI                               0xA0F7
        // Read out FSC UI / Auslesen FSC UI

    #define I3_RES_NBT_STAT_HU_FSC_REFURBISH_UI_WERT                 (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_HU_FSC_REFURBISH_UI_WERT_TYPE            unsigned short
        // Value of the required index that is stored in the HU / Wert des nötigen Index, der in der HU gespeichert ist

#define I3_PID_NBT_HU_FSC_REFURBISH_VIN                              0xA0FB
        // Protected VIN value / Wert der geschützten VIN

    // Can't yet generate code for STAT_HU_FSC_REFURBISH_VIN_TEXT of type string[7], at offset 0. But we account for the 7 bytes
        // Value of the protected VIN that is stored in the HU / Wert der geschützten VIN, die in der HU gespeichert ist

#define I3_PID_NBT_HU_VIN_PROTECTION_ENFORCE_CYCLIC                  0xA109
        // This diagnosis job starts a cyclic phase inclusive debouncing within the current life cycle for the internal
        // trusted VIN mechanism. There is no debouncing over several life cycles in this case. / This diagnosis job
        // starts a cyclic-phase inclusive debouncing within the current life cycle for the internal trusted VIN
        // mechanism. There is no debouncing over several life cycles in this case.

#define I3_PID_NBT_STATUS_LESEN_SYSTEMAUDIO                          0xD002
        // refers to the speaker system / bezeichnet das Lautsprechersystem

    #define I3_RES_NBT_STAT_AUDIO_SYSTEM                             (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_AUDIO_SYSTEM_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_AUDIO_SYSTEM_TYPE                        unsigned char
        // refers to the speaker system / bezeichnet das Lautsprechersystem

// Skipping AUDIOKANAELE on 0xD003 which takes arguments

#define I3_PID_NBT_INITIALISIERUNG                                   0xD004
        // Initialization status / Initialisierungsstatus

    #define I3_RES_NBT_STAT_INITIALISIERUNG                          (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_INITIALISIERUNG_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_INITIALISIERUNG_TYPE                     unsigned char
        // Initialization status / Initialisierungsstatus

#define I3_PID_NBT_STATUS_DRIVE_HDD                                  0xD007
        // Reads the status of the HDD drive. / Liest Stati des HDD-Laufwerks aus.

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_HDD_PERCENT_WERT          (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_HDD_PERCENT_WERT_UNIT     '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_HDD_PERCENT_WERT_TYPE     unsigned char
        // Free HDD space in% / Freier Speicherplatz HDD in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_HDD_MBYTE_WERT            (RXBUF_UINT32(1))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_HDD_MBYTE_WERT_TYPE       unsigned long
        // Free HDD space in MByte / Freier Speicherplatz HDD in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION1_PERCENT_WERT   (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION1_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION1_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION1_MBYTE_WERT     (RXBUF_UINT32(6))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION1_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION2_PERCENT_WERT   (RXBUF_UCHAR(10))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION2_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION2_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION2_MBYTE_WERT     (RXBUF_UINT32(11))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION2_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION3_PERCENT_WERT   (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION3_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION3_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION3_MBYTE_WERT     (RXBUF_UINT32(16))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION3_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION4_PERCENT_WERT   (RXBUF_UCHAR(20))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION4_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION4_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION4_MBYTE_WERT     (RXBUF_UINT32(21))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION4_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION5_PERCENT_WERT   (RXBUF_UCHAR(25))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION5_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION5_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION5_MBYTE_WERT     (RXBUF_UINT32(26))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION5_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION6_PERCENT_WERT   (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION6_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION6_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION6_MBYTE_WERT     (RXBUF_UINT32(31))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION6_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION7_PERCENT_WERT   (RXBUF_UCHAR(35))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION7_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION7_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION7_MBYTE_WERT     (RXBUF_UINT32(36))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION7_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION8_PERCENT_WERT   (RXBUF_UCHAR(40))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION8_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION8_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION8_MBYTE_WERT     (RXBUF_UINT32(41))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION8_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION9_PERCENT_WERT   (RXBUF_UCHAR(45))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION9_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION9_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION9_MBYTE_WERT     (RXBUF_UINT32(46))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION9_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION10_PERCENT_WERT  (RXBUF_UCHAR(50))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION10_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION10_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION10_MBYTE_WERT    (RXBUF_UINT32(51))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION10_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION11_PERCENT_WERT  (RXBUF_UCHAR(55))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION11_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION11_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION11_MBYTE_WERT    (RXBUF_UINT32(56))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION11_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION12_PERCENT_WERT  (RXBUF_UCHAR(60))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION12_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION12_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION12_MBYTE_WERT    (RXBUF_UINT32(61))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION12_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION13_PERCENT_WERT  (RXBUF_UCHAR(65))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION13_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION13_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION13_MBYTE_WERT    (RXBUF_UINT32(66))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION13_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION14_PERCENT_WERT  (RXBUF_UCHAR(70))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION14_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION14_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION14_MBYTE_WERT    (RXBUF_UINT32(71))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION14_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION15_PERCENT_WERT  (RXBUF_UCHAR(75))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION15_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION15_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION15_MBYTE_WERT    (RXBUF_UINT32(76))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION15_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION16_PERCENT_WERT  (RXBUF_UCHAR(80))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION16_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION16_PERCENT_WERT_TYPE unsigned char
        // Free space on partition X in% / Freier Speicherplatz Partition X in %

    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION16_MBYTE_WERT    (RXBUF_UINT32(81))
    #define I3_RES_NBT_STAT_FREE_DISKSPACE_PARTITION16_MBYTE_WERT_TYPE unsigned long
        // Free space in partition X in Mbytes / Freier Speicherplatz Partition X in MByte

#define I3_PID_NBT_STATUS_MEMORY_USAGE                               0xD00A
        // not defined in diagnosis database / not defined in diagnosis database

    #define I3_RES_NBT_STAT_MEMORYSPACE_FLASH_KBYTE_WERT             (RXBUF_UINT32(0))
    #define I3_RES_NBT_STAT_MEMORYSPACE_FLASH_KBYTE_WERT_TYPE        unsigned long
        // Flash memory in kByte / Flashspeicher in kByte

    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_FLASH_KBYTE_WERT        (RXBUF_UINT32(4))
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_FLASH_KBYTE_WERT_TYPE   unsigned long
        // free flash memory / freier Flashspeicher

    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_FLASH_PERCENT_WERT      (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_FLASH_PERCENT_WERT_UNIT '%'
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_FLASH_PERCENT_WERT_TYPE unsigned char
        // free flash memory in% / freier Flashspeicher in %

    #define I3_RES_NBT_STAT_MEMORYSPACE_RAM_KBYTE_WERT               (RXBUF_UINT32(9))
    #define I3_RES_NBT_STAT_MEMORYSPACE_RAM_KBYTE_WERT_TYPE          unsigned long
        // RAM memory in kByte / RAM Speicher in kByte

    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_RAM_KBYTE_WERT          (RXBUF_UINT32(13))
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_RAM_KBYTE_WERT_TYPE     unsigned long
        // free RAM memory in kByte / freier RAM Speicher in kByte

    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_RAM_PERCENT_WERT        (RXBUF_UCHAR(17))
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_RAM_PERCENT_WERT_UNIT   '%'
    #define I3_RES_NBT_STAT_FREE_MEMORYSPACE_RAM_PERCENT_WERT_TYPE   unsigned char
        // free RAM memory in% / freier RAM Speicher in %

#define I3_PID_NBT_STATUS_VERSION_ID_LESEN                           0xD00B
        // Read out chassis number, hardware delivery ID, software delivery ID and control unit software update version
        // ID. / Auslesen Fahrgestellnummer, Hardware Lieferung ID, Software Lieferung ID und Steuergeräte Softwareupdate
        // Version ID.

    // Can't process STAT_VIN_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HARDWARE_LIEFERUNG_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SOFTWARE_LIEFERUNG_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_ECU_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_LESEN_LAUFWERK                             0xD00C
        // Reads out which drives are installed. / Liest aus, welche Laufwerke verbaut sind.

    #define I3_RES_NBT_STAT_VERBAUTE_LAUFWERKE                       (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_VERBAUTE_LAUFWERKE_UNIT                  '0-n'
    #define I3_RES_NBT_STAT_VERBAUTE_LAUFWERKE_TYPE                  unsigned short
        // Reads out which drives are installed. / Liest aus, welche Laufwerke verbaut sind.

    // Can't process STAT_VENDORID_TAPE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_TAPE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_TAPE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_CD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_CD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_CD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_DVD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_DVD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_DVD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_BLURAY_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_BLURAY_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_BLURAY_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_MD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_MD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_MD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_HDD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_HDD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_HDD_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_USB_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_USB_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_USB_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VENDORID_FLASHSPEICHER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_PRODUCTID_FLASHSPEICHER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_FIRMWARE_FLASHSPEICHER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping FREQUENZ on 0xD00D which takes arguments

// Skipping RDS on 0xD00E which takes arguments

#define I3_PID_NBT_STATUS_ANT_QFS                                    0xD010
        // Measure the field strength currently applied to the tuner. / Messen der Feldstärke, die aktuell am Tuner
        // anliegt.

    #define I3_RES_NBT_STAT_QUALITY_WERT_0XD010                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_QUALITY_WERT_0XD010_TYPE                 unsigned char
        // Values between 0..15 This is the value used for AF tracking, where 15 corresponds to the best quality. / Werte
        // zwischen 0..15 Dies ist der für AF-Tracking verwendete Wert, wobei 15 bester Qualität entspricht.

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XD010                (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XD010_TYPE           unsigned char
        // Values between 0..15 This corresponds to 0..60 dBµV in steps of 4dB. / Werte zwischen 0..15 Dies entspricht
        // 0..60 dBµV in Schritten von 4dB.

    #define I3_RES_NBT_STAT_ANT_PW                                   (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_ANT_PW_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_ANT_PW_TYPE                              unsigned char
        // indicates the status of the antenna power supply. / gibt den Status der Antennenstromversorgung wieder.

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT                 (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT_UNIT            'dBµV'
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT_TYPE            unsigned char
        // Values between 0..60 This corresponds to 0..60 dBµV in steps of 1dB. Return of 255 if no measurement possible.
        // / Werte zwischen 0..60 Dies entspricht 0..60 dBµV in Schritten von 1dB. Rückgabe von 255, wenn keine Messung
        // möglich.

    #define I3_RES_NBT_STAT_FREQUENZ_WERT                            (RXBUF_UINT32(4))
    #define I3_RES_NBT_STAT_FREQUENZ_WERT_UNIT                       'kHz'
    #define I3_RES_NBT_STAT_FREQUENZ_WERT_TYPE                       unsigned long
        // The currently set frequency in the range 150 - 108000 [kHz] / Die derzeit eingestellte Frequenz im Bereich 150
        // - 108000 [kHz]

// Skipping TMC on 0xD011 which takes arguments

#define I3_PID_NBT_STATUS_SGBMID_NAVIMAP                             0xD012
        // String with format: pk.idididid.hv.uv.pv out of the following return stream: Byte0 process class Byte1 ID_ # 0
        // (MSB) * 4 Byte2 ID_ # 1 Byte3 ID_ # 2 Byte4 ID_ # 3 (LSB) Byte5 major version Byte6 minor version Byte7 patch
        // version / String with format: pk.idididid.hv.uv.pv out of the following return stream:  Byte0 Prozessklasse
        // Byte1 ID_#0 (MSB) *4  Byte2 ID_#1 Byte3 ID_#2 Byte4 ID_#3 (LSB) Byte5 Hauptversion Byte6 Unterversion Byte7
        // Patch version

    // Can't yet generate code for STAT_SGBMID_DATA of type data[8] at offset 0. But we account for the 8 bytes
        // String with format: pk.idididid.hv.uv.pv out of the following return stream: Byte0 process class Byte1 ID_ # 0
        // (MSB) * 4 Byte2 ID_ # 1 Byte3 ID_ # 2 Byte4 ID_ # 3 (LSB) Byte5 major version Byte6 minor version Byte7 patch
        // version / String with format: pk.idididid.hv.uv.pv out of the following return stream:  Byte0 Prozessklasse
        // Byte1 ID_#0 (MSB) *4  Byte2 ID_#1 Byte3 ID_#2 Byte4 ID_#3 (LSB) Byte5 Hauptversion Byte6 Unterversion Byte7
        // Patch version

// Skipping DEMUTE on 0xD014 which takes arguments

#define I3_PID_NBT_SER_NR_DOM_LESEN                                  0xD019
        // Leaves the serial number with 14 characters (DIN ISO 10 486) / Ließt die Seriennummer mit 14 Zeichen (DIN ISO
        // 10 486)

    // Can't yet generate code for STAT_SER_NR_DOM_TEXT of type string[14], at offset 0. But we account for the 14 bytes
        // Leaves the serial number with 14 characters (DIN ISO 10 486) / Ließt die Seriennummer mit 14 Zeichen (DIN ISO
        // 10 486)

// Skipping BT_GERAETEADRESSE on 0xD01A which takes arguments

// Skipping BT_GERAETENAME on 0xD01C which takes arguments

#define I3_PID_NBT_STATUS_BT_GEKOPPELTE_GERAETE_LESEN                0xD01D
        // Reads the device address of the last four paired Bluetooth devices / Liest die Geräte-Adresse der letzten vier
        // gekoppelten Bluetooth Geräte

    // Can't yet generate code for STAT_BT_ADR_DEV_1_DATA of type data[6] at offset 0. But we account for the 6 bytes
        // Device address of device 1 / Geräteadresse von Gerät 1

    // Can't yet generate code for STAT_BT_ADR_DEV_2_DATA of type data[6] at offset 6. But we account for the 6 bytes
        // Device address of device 2 / Geräteadresse von Gerät 2

    // Can't yet generate code for STAT_BT_ADR_DEV_3_DATA of type data[6] at offset 12. But we account for the 6 bytes
        // Device address of device 3 / Geräteadresse von Gerät 3

    // Can't yet generate code for STAT_BT_ADR_DEV_4_DATA of type data[6] at offset 18. But we account for the 6 bytes
        // Device address of device 4 / Geräteadresse von Gerät 4

#define I3_PID_NBT_STATUS_SWUP_INSTALLATION_HISTORY                  0xD01E
        // Read out the last software update installations. The time, operation type, SWIP ID, ECU SW VID and operation
        // code are saved for each entry. / Auslesen der letzten Software Update Installationen. Für jeden Eintrag werden
        // Zeit, Operationtype, SWIP ID, ECU SW VID und Operationcode gespeichert.

    #define I3_RES_NBT_STAT_HISTORY_1_KILOMETER_WERT                 (RXBUF_UINT32(0))
    #define I3_RES_NBT_STAT_HISTORY_1_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_1_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 1. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 1.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_1_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_1_TYP                            (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_HISTORY_1_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_1_TYP_TYPE                       unsigned char
        // Type of operation 1. History entry / Typ der Operation 1. Historyeintrag

    // Can't process STAT_HISTORY_1_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_1_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_1_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_1_FLASHSPEICHER_WERT             (RXBUF_UINT32(5))
    #define I3_RES_NBT_STAT_HISTORY_1_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_1_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 1. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 1. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_1_ERROR_CODE                     (RXBUF_UCHAR(9))
    #define I3_RES_NBT_STAT_HISTORY_1_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_1_ERROR_CODE_TYPE                unsigned char
        // Software update error code 1. History entry / Software Update Fehlercode 1. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_2_KILOMETER_WERT                 (RXBUF_UINT32(10))
    #define I3_RES_NBT_STAT_HISTORY_2_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_2_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 2. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 2.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_2_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_2_TYP                            (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_HISTORY_2_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_2_TYP_TYPE                       unsigned char
        // Type of operation 2. History entry / Typ der Operation 2. Historyeintrag

    // Can't process STAT_HISTORY_2_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_2_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_2_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_2_FLASHSPEICHER_WERT             (RXBUF_UINT32(15))
    #define I3_RES_NBT_STAT_HISTORY_2_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_2_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory which is available for updates after the update (0xff ff ff ff if unknown) 2. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 2. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_2_ERROR_CODE                     (RXBUF_UCHAR(19))
    #define I3_RES_NBT_STAT_HISTORY_2_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_2_ERROR_CODE_TYPE                unsigned char
        // Software update error code 2. History entry / Software Update Fehlercode 2. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_3_KILOMETER_WERT                 (RXBUF_UINT32(20))
    #define I3_RES_NBT_STAT_HISTORY_3_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_3_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 3. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 3.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_3_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_3_TYP                            (RXBUF_UCHAR(24))
    #define I3_RES_NBT_STAT_HISTORY_3_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_3_TYP_TYPE                       unsigned char
        // Type of operation 3. History entry / Typ der Operation 3. Historyeintrag

    // Can't process STAT_HISTORY_3_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_3_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_3_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_3_FLASHSPEICHER_WERT             (RXBUF_UINT32(25))
    #define I3_RES_NBT_STAT_HISTORY_3_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_3_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 3. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 3. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_3_ERROR_CODE                     (RXBUF_UCHAR(29))
    #define I3_RES_NBT_STAT_HISTORY_3_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_3_ERROR_CODE_TYPE                unsigned char
        // Software update error code 3. History entry / Software Update Fehlercode 3. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_4_KILOMETER_WERT                 (RXBUF_UINT32(30))
    #define I3_RES_NBT_STAT_HISTORY_4_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_4_KILOMETER_WERT_TYPE            unsigned long
        // Mileage during operation 4. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 4.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_4_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_4_TYP                            (RXBUF_UCHAR(34))
    #define I3_RES_NBT_STAT_HISTORY_4_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_4_TYP_TYPE                       unsigned char
        // Type of operation 4. History entry / Typ der Operation 4. Historyeintrag

    // Can't process STAT_HISTORY_4_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_4_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_4_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_4_FLASHSPEICHER_WERT             (RXBUF_UINT32(35))
    #define I3_RES_NBT_STAT_HISTORY_4_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_4_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 4. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 4. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_4_ERROR_CODE                     (RXBUF_UCHAR(39))
    #define I3_RES_NBT_STAT_HISTORY_4_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_4_ERROR_CODE_TYPE                unsigned char
        // Software update error code 4. History entry / Software Update Fehlercode 4. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_5_KILOMETER_WERT                 (RXBUF_UINT32(40))
    #define I3_RES_NBT_STAT_HISTORY_5_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_5_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 5. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 5.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_5_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_5_TYP                            (RXBUF_UCHAR(44))
    #define I3_RES_NBT_STAT_HISTORY_5_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_5_TYP_TYPE                       unsigned char
        // Type of operation 5. History entry / Typ der Operation 5. Historyeintrag

    // Can't process STAT_HISTORY_5_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_5_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_5_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_5_FLASHSPEICHER_WERT             (RXBUF_UINT32(45))
    #define I3_RES_NBT_STAT_HISTORY_5_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_5_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 5. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 5. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_5_ERROR_CODE                     (RXBUF_UCHAR(49))
    #define I3_RES_NBT_STAT_HISTORY_5_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_5_ERROR_CODE_TYPE                unsigned char
        // Software update error code 5. History entry / Software Update Fehlercode 5. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_6_KILOMETER_WERT                 (RXBUF_UINT32(50))
    #define I3_RES_NBT_STAT_HISTORY_6_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_6_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 6. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 6.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_6_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_6_TYP                            (RXBUF_UCHAR(54))
    #define I3_RES_NBT_STAT_HISTORY_6_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_6_TYP_TYPE                       unsigned char
        // Type of operation 6. History entry / Typ der Operation 6. Historyeintrag

    // Can't process STAT_HISTORY_6_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_6_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_6_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_6_FLASHSPEICHER_WERT             (RXBUF_UINT32(55))
    #define I3_RES_NBT_STAT_HISTORY_6_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_6_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 6. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 6. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_6_ERROR_CODE                     (RXBUF_UCHAR(59))
    #define I3_RES_NBT_STAT_HISTORY_6_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_6_ERROR_CODE_TYPE                unsigned char
        // Software update error code 6. History entry / Software Update Fehlercode 6. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_7_KILOMETER_WERT                 (RXBUF_UINT32(60))
    #define I3_RES_NBT_STAT_HISTORY_7_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_7_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 7. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 7.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_7_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_7_TYP                            (RXBUF_UCHAR(64))
    #define I3_RES_NBT_STAT_HISTORY_7_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_7_TYP_TYPE                       unsigned char
        // Type of operation 7. History entry / Typ der Operation 7. Historyeintrag

    // Can't process STAT_HISTORY_7_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_7_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_7_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_7_FLASHSPEICHER_WERT             (RXBUF_UINT32(65))
    #define I3_RES_NBT_STAT_HISTORY_7_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_7_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory that is available for updates after the update (0xff ff ff ff if unknown) 7. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 7. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_7_ERROR_CODE                     (RXBUF_UCHAR(69))
    #define I3_RES_NBT_STAT_HISTORY_7_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_7_ERROR_CODE_TYPE                unsigned char
        // Software update error code 7. History entry / Software Update Fehlercode 7. Historyeintrag

    #define I3_RES_NBT_STAT_HISTORY_8_KILOMETER_WERT                 (RXBUF_UINT32(70))
    #define I3_RES_NBT_STAT_HISTORY_8_KILOMETER_WERT_UNIT            'km'
    #define I3_RES_NBT_STAT_HISTORY_8_KILOMETER_WERT_TYPE            unsigned long
        // Mileage in operation 8. History entry 0xFFFFFFFF is invalid / Kilometerstand bei der Operation 8.
        // Historyeintrag  0xFFFFFFFF für ungültig

    // Can't process STAT_HISTORY_8_ZEIT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_8_TYP                            (RXBUF_UCHAR(74))
    #define I3_RES_NBT_STAT_HISTORY_8_TYP_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_HISTORY_8_TYP_TYPE                       unsigned char
        // Type of operation 8. History entry / Typ der Operation 8. Historyeintrag

    // Can't process STAT_HISTORY_8_SWIP_SGBM_IDENTIFIER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_8_SWIP_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HISTORY_8_NEW_SW_VID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_HISTORY_8_FLASHSPEICHER_WERT             (RXBUF_UINT32(75))
    #define I3_RES_NBT_STAT_HISTORY_8_FLASHSPEICHER_WERT_UNIT        'kBytes'
    #define I3_RES_NBT_STAT_HISTORY_8_FLASHSPEICHER_WERT_TYPE        unsigned long
        // Free flash memory which is available for updates after the update (0xff ff ff ff if unknown) 8. History entry
        // Unit: kBytes / Freier Flashspeicher, der für Updates nach dem Update zur Verfügung steht (0xff ff ff ff wenn
        // unbekannt) 8. Historyeintrag  Einheit: kBytes

    #define I3_RES_NBT_STAT_HISTORY_8_ERROR_CODE                     (RXBUF_UCHAR(79))
    #define I3_RES_NBT_STAT_HISTORY_8_ERROR_CODE_UNIT                '0-n'
    #define I3_RES_NBT_STAT_HISTORY_8_ERROR_CODE_TYPE                unsigned char
        // Software update error code 8. History entry / Software Update Fehlercode 8. Historyeintrag

#define I3_PID_NBT_LOGISTIC_NR                                       0xD020
        // Reading out the logistics number. ATTENTION: RESULT is converted from _WERT to _TEXT! / Auslesen der
        // Logistik-Nummer. ACHTUNG: RESULT wird von _WERT auf _TEXT gewandelt!

    // Can't yet generate code for STAT_LOGISTIC_NR_TEXT of type string[7], at offset 0. But we account for the 7 bytes
        // Reading out the logistics number. ATTENTION: RESULT is converted from _WERT to _TEXT! / Auslesen der
        // Logistik-Nummer. ACHTUNG: RESULT wird von _WERT auf _TEXT gewandelt!

#define I3_PID_NBT_APPLICATION                                       0xD021
        // Query of the status of all unlockable applications, e.g. Navigation. / Abfrage des Status aller
        // freischaltbaren Applikationen, z.B. Navigation.

    #define I3_RES_NBT_STAT_APPL_1                                   (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_APPL_1_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_1_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_1                           (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_APPL_ENABLED_1_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_1_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_1                             (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_APPL_CODED_1_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_1_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_2                                   (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_APPL_2_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_2_TYPE                              unsigned char
        // Output for each application X: Name from the TApplication table. / Ausgabe für jede Applikation X: Name aus
        // der Tabelle TApplication.

    #define I3_RES_NBT_STAT_APPL_ENABLED_2                           (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_APPL_ENABLED_2_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_2_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_2                             (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_APPL_CODED_2_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_2_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_3                                   (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_APPL_3_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_3_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_3                           (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_APPL_ENABLED_3_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_3_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_3                             (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_APPL_CODED_3_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_3_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_4                                   (RXBUF_UCHAR(9))
    #define I3_RES_NBT_STAT_APPL_4_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_4_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_4                           (RXBUF_UCHAR(10))
    #define I3_RES_NBT_STAT_APPL_ENABLED_4_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_4_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_4                             (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_APPL_CODED_4_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_4_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_5                                   (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_APPL_5_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_5_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_5                           (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_APPL_ENABLED_5_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_5_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_5                             (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_APPL_CODED_5_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_5_TYPE                        unsigned char
        // v indicates for each application X whether it is activated. / vgibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_6                                   (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_APPL_6_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_6_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_6                           (RXBUF_UCHAR(16))
    #define I3_RES_NBT_STAT_APPL_ENABLED_6_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_6_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_6                             (RXBUF_UCHAR(17))
    #define I3_RES_NBT_STAT_APPL_CODED_6_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_6_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_7                                   (RXBUF_UCHAR(18))
    #define I3_RES_NBT_STAT_APPL_7_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_7_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_7                           (RXBUF_UCHAR(19))
    #define I3_RES_NBT_STAT_APPL_ENABLED_7_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_7_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_7                             (RXBUF_UCHAR(20))
    #define I3_RES_NBT_STAT_APPL_CODED_7_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_7_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_8                                   (RXBUF_UCHAR(21))
    #define I3_RES_NBT_STAT_APPL_8_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_8_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_8                           (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_APPL_ENABLED_8_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_8_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_8                             (RXBUF_UCHAR(23))
    #define I3_RES_NBT_STAT_APPL_CODED_8_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_8_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_9                                   (RXBUF_UCHAR(24))
    #define I3_RES_NBT_STAT_APPL_9_UNIT                              '0-n'
    #define I3_RES_NBT_STAT_APPL_9_TYPE                              unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_9                           (RXBUF_UCHAR(25))
    #define I3_RES_NBT_STAT_APPL_ENABLED_9_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_9_TYPE                      unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_9                             (RXBUF_UCHAR(26))
    #define I3_RES_NBT_STAT_APPL_CODED_9_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_9_TYPE                        unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_10                                  (RXBUF_UCHAR(27))
    #define I3_RES_NBT_STAT_APPL_10_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_10_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_10                          (RXBUF_UCHAR(28))
    #define I3_RES_NBT_STAT_APPL_ENABLED_10_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_10_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_10                            (RXBUF_UCHAR(29))
    #define I3_RES_NBT_STAT_APPL_CODED_10_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_10_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_11                                  (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_APPL_11_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_11_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_11                          (RXBUF_UCHAR(31))
    #define I3_RES_NBT_STAT_APPL_ENABLED_11_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_11_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_11                            (RXBUF_UCHAR(32))
    #define I3_RES_NBT_STAT_APPL_CODED_11_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_11_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_12                                  (RXBUF_UCHAR(33))
    #define I3_RES_NBT_STAT_APPL_12_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_12_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_12                          (RXBUF_UCHAR(34))
    #define I3_RES_NBT_STAT_APPL_ENABLED_12_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_12_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_12                            (RXBUF_UCHAR(35))
    #define I3_RES_NBT_STAT_APPL_CODED_12_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_12_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_13                                  (RXBUF_UCHAR(36))
    #define I3_RES_NBT_STAT_APPL_13_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_13_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_13                          (RXBUF_UCHAR(37))
    #define I3_RES_NBT_STAT_APPL_ENABLED_13_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_13_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_13                            (RXBUF_UCHAR(38))
    #define I3_RES_NBT_STAT_APPL_CODED_13_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_13_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_14                                  (RXBUF_UCHAR(39))
    #define I3_RES_NBT_STAT_APPL_14_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_14_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_14                          (RXBUF_UCHAR(40))
    #define I3_RES_NBT_STAT_APPL_ENABLED_14_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_14_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_14                            (RXBUF_UCHAR(41))
    #define I3_RES_NBT_STAT_APPL_CODED_14_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_14_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_15                                  (RXBUF_UCHAR(42))
    #define I3_RES_NBT_STAT_APPL_15_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_15_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_15                          (RXBUF_UCHAR(43))
    #define I3_RES_NBT_STAT_APPL_ENABLED_15_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_15_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_15                            (RXBUF_UCHAR(44))
    #define I3_RES_NBT_STAT_APPL_CODED_15_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_15_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_16                                  (RXBUF_UCHAR(45))
    #define I3_RES_NBT_STAT_APPL_16_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_16_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_16                          (RXBUF_UCHAR(46))
    #define I3_RES_NBT_STAT_APPL_ENABLED_16_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_16_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_16                            (RXBUF_UCHAR(47))
    #define I3_RES_NBT_STAT_APPL_CODED_16_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_16_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_17                                  (RXBUF_UCHAR(48))
    #define I3_RES_NBT_STAT_APPL_17_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_17_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_17                          (RXBUF_UCHAR(49))
    #define I3_RES_NBT_STAT_APPL_ENABLED_17_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_17_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_17                            (RXBUF_UCHAR(50))
    #define I3_RES_NBT_STAT_APPL_CODED_17_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_17_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

    #define I3_RES_NBT_STAT_APPL_18                                  (RXBUF_UCHAR(51))
    #define I3_RES_NBT_STAT_APPL_18_UNIT                             '0-n'
    #define I3_RES_NBT_STAT_APPL_18_TYPE                             unsigned char
        // returns the names of each application X from the TApplication table. / gibt für jede Applikation X deren Namen
        // aus der Tabelle TApplication wieder.

    #define I3_RES_NBT_STAT_APPL_ENABLED_18                          (RXBUF_UCHAR(52))
    #define I3_RES_NBT_STAT_APPL_ENABLED_18_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_APPL_ENABLED_18_TYPE                     unsigned char
        // shows for each application X whether it is currently running. / gibt für jede Applikation X wieder, ob sie
        // gerade läuft.

    #define I3_RES_NBT_STAT_APPL_CODED_18                            (RXBUF_UCHAR(53))
    #define I3_RES_NBT_STAT_APPL_CODED_18_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_APPL_CODED_18_TYPE                       unsigned char
        // indicates for each application X whether it is activated. / gibt für jede Applikation X wieder, ob sie
        // aktiviert ist.

#define I3_PID_NBT_STATUS_ANALOG_TEMPERATUR                          0xD026
        // Query the temperatures of the control unit. / Abfrage der Temperaturen des Steuergerätes.

    #define I3_RES_NBT_STAT_TEMP_FOT_WERT                            (RXBUF_SCHAR(0))
    #define I3_RES_NBT_STAT_TEMP_FOT_WERT_UNIT                       '°C'
    #define I3_RES_NBT_STAT_TEMP_FOT_WERT_TYPE                       char
        // provides the temperature of the Fiber Optical Transceiver (FOT). Range: -127, &, 127 / liefert die Temperatur
        // des Fibre Optical Transceivers (FOT). Bereich: -127,&,127

    #define I3_RES_NBT_STAT_TEMP_ENDSTU_WERT                         (RXBUF_SINT(1))
    #define I3_RES_NBT_STAT_TEMP_ENDSTU_WERT_UNIT                    '°C'
    #define I3_RES_NBT_STAT_TEMP_ENDSTU_WERT_TYPE                    short
        // supplies the temperature of the output stage. Range: -32767, &, 32767 / liefert die Temperatur der Endstufe.
        // Bereich: -32767,&, 32767

    #define I3_RES_NBT_STAT_TEMP_GYRO_WERT                           (RXBUF_SCHAR(3))
    #define I3_RES_NBT_STAT_TEMP_GYRO_WERT_UNIT                      '°C'
    #define I3_RES_NBT_STAT_TEMP_GYRO_WERT_TYPE                      char
        // provides the temperature of the gyro. Range: -127, &, 127 / liefert die Temperatur des Gyro. Bereich:
        // -127,&,127

    #define I3_RES_NBT_STAT_TEMP_MOD_WERT                            (RXBUF_SCHAR(4))
    #define I3_RES_NBT_STAT_TEMP_MOD_WERT_UNIT                       '°C'
    #define I3_RES_NBT_STAT_TEMP_MOD_WERT_TYPE                       char
        // supplies the temperature of the module (usually close to the processor). Range: -127, &, 127 / liefert die
        // Temperatur des Moduls (normalerweise prozessornah). Bereich: -127,&,127

    #define I3_RES_NBT_STAT_TEMP_HDD_WERT                            (RXBUF_SCHAR(5))
    #define I3_RES_NBT_STAT_TEMP_HDD_WERT_UNIT                       '°C'
    #define I3_RES_NBT_STAT_TEMP_HDD_WERT_TYPE                       char
        // provides the temperature of the HDD drive. Range: -127, &, 127 / liefert die Temperatur des HDD-Laufwerks.
        // Bereich: -127,&,127

    #define I3_RES_NBT_STAT_TEMP_DVD_WERT                            (RXBUF_SCHAR(6))
    #define I3_RES_NBT_STAT_TEMP_DVD_WERT_UNIT                       '°C'
    #define I3_RES_NBT_STAT_TEMP_DVD_WERT_TYPE                       char
        // provides the temperature of the DVD drive. Range: -127, &, 127 / liefert die Temperatur des DVD-Laufwerks.
        // Bereich: -127,&,127

// Skipping RADON on 0xD028 which takes arguments

#define I3_PID_NBT_STATUS_CD_MD_CDC                                  0xD02C
        // Reads out the identifier of the medium and the quality level of the digital recording. / Liest den Identifier
        // des Mediums und das Qualitätslevel der digitalen Aufnahme aus.

    // Can't process STAT_DISC_IDENT_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_DIGITAL_PLAYBACK_QUALITY_WERT            (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_DIGITAL_PLAYBACK_QUALITY_WERT_TYPE       unsigned char
        // Quality of the digital recording: Range: 0-15 0-1: Medium not readable (drive not ok) 2-8: Distortion / mute
        // parts audible (drive not ok) 9-14: Medium readable, no distortion audible (drive ok) 15: Medium quality 100%,
        // e.g. BLER 0 (drive ok) / Qualität der digitalen Aufnahme: Bereich: 0-15 0-1: Medium nicht lesbar (drive not
        // ok) 2-8: Verzerrung / Stumm Stellen hörbar (drive not ok) 9-14: Medium lesbar, keine Verzerrung hörbar (drive
        // ok) 15: Medium Qualität 100%, z.B. BLER 0 (drive ok)

// Skipping FREQUENZ_DAB on 0xD02D which takes arguments

// Skipping TELEFONNUMMER_SDARS on 0xD02F which takes arguments

#define I3_PID_NBT_STATUS_SPEED                                      0xD030
        // Reads the speed signals from the bus and from the GPS receiver. / Liest die die Geschwindigkeitssignale vom
        // Bus und vom GPS Empänger.

    #define I3_RES_NBT_STAT_WHEEL1_SENSOR_SPEED_WERT                 (RXBUF_SINT(0))
    #define I3_RES_NBT_STAT_WHEEL1_SENSOR_SPEED_WERT_UNIT            'km/h'
    #define I3_RES_NBT_STAT_WHEEL1_SENSOR_SPEED_WERT_TYPE            short
        // Speed on bike 1 / Geschwindigkeit am Rad 1

    #define I3_RES_NBT_STAT_WHEEL2_SENSOR_SPEED_WERT                 (RXBUF_SINT(2))
    #define I3_RES_NBT_STAT_WHEEL2_SENSOR_SPEED_WERT_UNIT            'km/h'
    #define I3_RES_NBT_STAT_WHEEL2_SENSOR_SPEED_WERT_TYPE            short
        // Speed on bike 2 / Geschwindigkeit am Rad 2

    #define I3_RES_NBT_STAT_WHEEL3_SENSOR_SPEED_WERT                 (RXBUF_SINT(4))
    #define I3_RES_NBT_STAT_WHEEL3_SENSOR_SPEED_WERT_UNIT            'km/h'
    #define I3_RES_NBT_STAT_WHEEL3_SENSOR_SPEED_WERT_TYPE            short
        // Speed on the bike 3 / Geschwindigkeit am Rad 3

    #define I3_RES_NBT_STAT_WHEEL4_SENSOR_SPEED_WERT                 (RXBUF_SINT(6))
    #define I3_RES_NBT_STAT_WHEEL4_SENSOR_SPEED_WERT_UNIT            'km/h'
    #define I3_RES_NBT_STAT_WHEEL4_SENSOR_SPEED_WERT_TYPE            short
        // Speed on the bike 4 / Geschwindigkeit am Rad 4

    #define I3_RES_NBT_STAT_COMBINED_SENSOR_SPEED_WERT               (RXBUF_SINT(8))
    #define I3_RES_NBT_STAT_COMBINED_SENSOR_SPEED_WERT_UNIT          'km/h'
    #define I3_RES_NBT_STAT_COMBINED_SENSOR_SPEED_WERT_TYPE          short
        // Combined speed of the wheel sensors / Kombinierte Geschwindigkeit der Radsensoren

    #define I3_RES_NBT_STAT_GPS_SPEED_WERT                           (RXBUF_SINT(10))
    #define I3_RES_NBT_STAT_GPS_SPEED_WERT_UNIT                      'km/h'
    #define I3_RES_NBT_STAT_GPS_SPEED_WERT_TYPE                      short
        // Speed based on the GPS signal. / Geschwindigkeit basierend auf das GPS-Signal.

    #define I3_RES_NBT_STAT_SPEED_DIFFERENCE_PERCENT_WERT            (RXBUF_UINT(12))
    #define I3_RES_NBT_STAT_SPEED_DIFFERENCE_PERCENT_WERT_UNIT       '%'
    #define I3_RES_NBT_STAT_SPEED_DIFFERENCE_PERCENT_WERT_TYPE       unsigned short
        // Difference in percent between the speeds recorded with the wheel sensors or GPS / Abweichung in Prozent
        // zwischen den Geschwindigkeiten, die mit den Radsensoren bzw. mittels GPS erfasst wurden

#define I3_PID_NBT_STATUS_DIRECTION                                  0xD031
        // Output of the current gear position / Ausgabe der aktuellen Gang-Position

    #define I3_RES_NBT_STAT_DIRECTION                                (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_DIRECTION_UNIT                           '0-n'
    #define I3_RES_NBT_STAT_DIRECTION_TYPE                           unsigned char
        // Current gear position see TGearType / aktuelle Gangstellung siehe TGearType

    #define I3_RES_NBT_STAT_DIRECTION_SOURCE                         (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_DIRECTION_SOURCE_UNIT                    '0-n'
    #define I3_RES_NBT_STAT_DIRECTION_SOURCE_TYPE                    unsigned char
        // see table TDirectionSource / siehe Tabelle TDirectionSource

#define I3_PID_NBT_STATUS_GPS_DILUTION_OF_POSITION                   0xD032
        // Reads the GPS resolution / accuracy / Liest die GPS Auflösung/Genauigkeit aus

    #define I3_RES_NBT_STAT_GPS_PDOP_WERT                            (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_GPS_PDOP_WERT_TYPE                       unsigned char
        // GPS position accuracy / GPS Positionsgeanuigkeit

    #define I3_RES_NBT_STAT_GPS_HDOP_WERT                            (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_GPS_HDOP_WERT_TYPE                       unsigned char
        // GPS horizontal position accuracy / GPS horizontale Positionsgeanuigkeit

    #define I3_RES_NBT_STAT_GPS_VDOP_WERT                            (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_GPS_VDOP_WERT_TYPE                       unsigned char
        // GPS vertical position accuracy / GPS vertikale Positionsgeanuigkeit

#define I3_PID_NBT_STATUS_GPS_SATINFO                                0xD034
        // Reading out the characteristics of all visible satellites. / Auslesen der Charakteristik aller sichtbaren
        // Satelliten.

    #define I3_RES_NBT_STAT_NUMBER_VISIBLE_SATS_WERT                 (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_NUMBER_VISIBLE_SATS_WERT_TYPE            unsigned char
        // Number of theoretically reachable satellites / Anzahl der theoretisch erreichbaren Satelliten

    #define I3_RES_NBT_STAT_NUMBER_TRACKED_SATS_WERT                 (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_NUMBER_TRACKED_SATS_WERT_TYPE            unsigned char
        // Number of satellites tracked / Anzahl der aufgespuerten Satelliten

    #define I3_RES_NBT_STAT_SAT_1_ID_WERT                            (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_SAT_1_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_1_STATUS                             (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_SAT_1_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_1_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_1_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(4))
    #define I3_RES_NBT_STAT_SAT_1_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_1_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_1_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_1_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_2_ID_WERT                            (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_SAT_2_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_2_STATUS                             (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_SAT_2_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_2_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_2_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(8))
    #define I3_RES_NBT_STAT_SAT_2_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_2_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_2_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_2_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_3_ID_WERT                            (RXBUF_UCHAR(10))
    #define I3_RES_NBT_STAT_SAT_3_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_3_STATUS                             (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_SAT_3_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_3_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_3_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(12))
    #define I3_RES_NBT_STAT_SAT_3_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_3_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_3_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_3_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_4_ID_WERT                            (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_SAT_4_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_4_STATUS                             (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_SAT_4_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_4_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_4_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(16))
    #define I3_RES_NBT_STAT_SAT_4_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_4_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_4_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_4_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_5_ID_WERT                            (RXBUF_UCHAR(18))
    #define I3_RES_NBT_STAT_SAT_5_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_5_STATUS                             (RXBUF_UCHAR(19))
    #define I3_RES_NBT_STAT_SAT_5_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_5_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_5_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(20))
    #define I3_RES_NBT_STAT_SAT_5_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_5_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_5_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_5_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_6_ID_WERT                            (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_SAT_6_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_6_STATUS                             (RXBUF_UCHAR(23))
    #define I3_RES_NBT_STAT_SAT_6_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_6_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_6_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(24))
    #define I3_RES_NBT_STAT_SAT_6_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_6_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_6_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_6_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_7_ID_WERT                            (RXBUF_UCHAR(26))
    #define I3_RES_NBT_STAT_SAT_7_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_7_STATUS                             (RXBUF_UCHAR(27))
    #define I3_RES_NBT_STAT_SAT_7_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_7_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_7_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(28))
    #define I3_RES_NBT_STAT_SAT_7_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_7_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_7_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_7_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_8_ID_WERT                            (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_SAT_8_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_8_STATUS                             (RXBUF_UCHAR(31))
    #define I3_RES_NBT_STAT_SAT_8_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_8_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_8_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(32))
    #define I3_RES_NBT_STAT_SAT_8_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_8_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_8_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_8_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_9_ID_WERT                            (RXBUF_UCHAR(34))
    #define I3_RES_NBT_STAT_SAT_9_ID_WERT_TYPE                       unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_9_STATUS                             (RXBUF_UCHAR(35))
    #define I3_RES_NBT_STAT_SAT_9_STATUS_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_SAT_9_STATUS_TYPE                        unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_9_SIGNAL_TO_NOISE_WERT               (RXBUF_SINT(36))
    #define I3_RES_NBT_STAT_SAT_9_SIGNAL_TO_NOISE_WERT_TYPE          short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_9_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_9_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_9_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_10_ID_WERT                           (RXBUF_UCHAR(38))
    #define I3_RES_NBT_STAT_SAT_10_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_10_STATUS                            (RXBUF_UCHAR(39))
    #define I3_RES_NBT_STAT_SAT_10_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_10_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_10_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(40))
    #define I3_RES_NBT_STAT_SAT_10_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_10_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_10_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_10_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_11_ID_WERT                           (RXBUF_UCHAR(42))
    #define I3_RES_NBT_STAT_SAT_11_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_11_STATUS                            (RXBUF_UCHAR(43))
    #define I3_RES_NBT_STAT_SAT_11_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_11_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_11_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(44))
    #define I3_RES_NBT_STAT_SAT_11_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_11_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_11_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_11_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_12_ID_WERT                           (RXBUF_UCHAR(46))
    #define I3_RES_NBT_STAT_SAT_12_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_12_STATUS                            (RXBUF_UCHAR(47))
    #define I3_RES_NBT_STAT_SAT_12_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_12_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_12_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(48))
    #define I3_RES_NBT_STAT_SAT_12_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_12_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_12_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_12_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_13_ID_WERT                           (RXBUF_UCHAR(50))
    #define I3_RES_NBT_STAT_SAT_13_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_13_STATUS                            (RXBUF_UCHAR(51))
    #define I3_RES_NBT_STAT_SAT_13_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_13_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_13_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(52))
    #define I3_RES_NBT_STAT_SAT_13_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_13_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_13_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_13_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_14_ID_WERT                           (RXBUF_UCHAR(54))
    #define I3_RES_NBT_STAT_SAT_14_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_14_STATUS                            (RXBUF_UCHAR(55))
    #define I3_RES_NBT_STAT_SAT_14_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_14_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_14_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(56))
    #define I3_RES_NBT_STAT_SAT_14_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_14_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_14_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_14_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_15_ID_WERT                           (RXBUF_UCHAR(58))
    #define I3_RES_NBT_STAT_SAT_15_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_15_STATUS                            (RXBUF_UCHAR(59))
    #define I3_RES_NBT_STAT_SAT_15_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_15_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_15_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(60))
    #define I3_RES_NBT_STAT_SAT_15_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_15_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_15_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_15_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_SAT_16_ID_WERT                           (RXBUF_UCHAR(62))
    #define I3_RES_NBT_STAT_SAT_16_ID_WERT_TYPE                      unsigned char
        // ID of the satellite / ID des Satelliten

    #define I3_RES_NBT_STAT_SAT_16_STATUS                            (RXBUF_UCHAR(63))
    #define I3_RES_NBT_STAT_SAT_16_STATUS_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_SAT_16_STATUS_TYPE                       unsigned char
        // Status of the satellite / Status des Satelliten

    #define I3_RES_NBT_STAT_SAT_16_SIGNAL_TO_NOISE_WERT              (RXBUF_SINT(64))
    #define I3_RES_NBT_STAT_SAT_16_SIGNAL_TO_NOISE_WERT_TYPE         short
        // Signal-to-noise ratio / Signal- Rauschabstand

    // Can't process STAT_SAT_16_AZIMUTH_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_16_ELEVATION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SAT_16_EPHEMERIS_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_GPS                                        0xD038
        // Reads the GPS status. See table TGpsStatus. / Liest den GPS Status. Siehe Tabelle TGpsStatus.

    #define I3_RES_NBT_STAT_GPS                                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_GPS_UNIT                                 '0-n'
    #define I3_RES_NBT_STAT_GPS_TYPE                                 unsigned char
        // Reads the GPS status. See table TGpsStatus. / Liest den GPS Status. Siehe Tabelle TGpsStatus.

#define I3_PID_NBT_STATUS_GPS_RECEIVER_SW_VERSION                    0xD03B
        // Reading out the software version number of the GPS receiver. / Auslesen der Software Versionsnummer des GPS
        // Receivers.

    // Can't process STAT_GPS_RECEIVER_SW_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_MAPMATERIAL_VERSION                        0xD03C
        // returns the navigation DB / gibt die Navigations DB zurück

    // Can't process STAT_MAPMATERIAL_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_NAVI_CALIBRATION                           0xD03D
        // Asks whether the navigation system is calibrated. See table TNaviCalibration / Fragt ob das Navi kalibriert
        // ist. Siehe Tabelle TNaviCalibration

    #define I3_RES_NBT_STAT_NAVI_CALIBRATION                         (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_NAVI_CALIBRATION_UNIT                    '0-n'
    #define I3_RES_NBT_STAT_NAVI_CALIBRATION_TYPE                    unsigned char
        // Asks whether the navigation system is calibrated. See table TNaviCalibration / Fragt ob das Navi kalibriert
        // ist. Siehe Tabelle TNaviCalibration

#define I3_PID_NBT_STATUS_EXT_GYROSIGNAL                             0xD03E
        // Asks whether the gyro signal is received See table TExtGyroSignal / Fragt ob das Gyrosignal empfangen wird
        // Siehe Tabelle TExtGyroSignal

    #define I3_RES_NBT_STAT_EXT_GYRO_SIGNAL                          (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_EXT_GYRO_SIGNAL_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_EXT_GYRO_SIGNAL_TYPE                     unsigned char
        // Asks whether the gyro signal is received See table TExtGyroSignal / Fragt ob das Gyrosignal empfangen wird
        // Siehe Tabelle TExtGyroSignal

#define I3_PID_NBT_STATUS_HMI_VERSION                                0xD03F
        // HMI software version / HMI Software Version

    // Can't process STAT_HMI_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SVS_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_TEXT_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_SGBMID_GRACENOTES                          0xD042
        // String with format: pk.idididid.hv.uv.pv out of the following return stream: Byte0 process class Byte1 ID_ # 0
        // (MSB) * 4 Byte2 ID_ # 1 Byte3 ID_ # 2 Byte4 ID_ # 3 (LSB) Byte5 major version Byte6 minor version Byte7 patch
        // version / String with format: pk.idididid.hv.uv.pv out of the following return stream:  Byte0 Prozessklasse
        // Byte1 ID_#0 (MSB) *4  Byte2 ID_#1 Byte3 ID_#2 Byte4 ID_#3 (LSB) Byte5 Hauptversion Byte6 Unterversion Byte7
        // Patch version

    // Can't yet generate code for STAT_SGBMID_DATA_0XD042 of type data[8] at offset 0. But we account for the 8 bytes
        // String with format: pk.idididid.hv.uv.pv out of the following return stream: Byte0 process class Byte1 ID_ # 0
        // (MSB) * 4 Byte2 ID_ # 1 Byte3 ID_ # 2 Byte4 ID_ # 3 (LSB) Byte5 major version Byte6 minor version Byte7 patch
        // version / String with format: pk.idididid.hv.uv.pv out of the following return stream:  Byte0 Prozessklasse
        // Byte1 ID_#0 (MSB) *4  Byte2 ID_#1 Byte3 ID_#2 Byte4 ID_#3 (LSB) Byte5 Hauptversion Byte6 Unterversion Byte7
        // Patch version

// Skipping AF_TP_DAB on 0xD043 which takes arguments

// Skipping AKTIVE_ANTENNE_DAB on 0xD044 which takes arguments

#define I3_PID_NBT_STATUS_ANT_QFS_FM2                                0xD045
        // Measure the field strength currently applied to the tuner. / Messen der Feldstärke, die aktuell am Tuner
        // anliegt.

    #define I3_RES_NBT_STAT_QUALITY_WERT_0XD045                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_QUALITY_WERT_0XD045_TYPE                 unsigned char
        // Values between 0..15 This is the value used for AF tracking, where 15 corresponds to the best quality. / Werte
        // zwischen 0..15 Dies ist der für AF-Tracking verwendete Wert, wobei 15 bester Qualität entspricht.

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XD045                (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_WERT_0XD045_TYPE           unsigned char
        // Values between 0..15 This corresponds to 0..60 dBµV in steps of 4dB. / Werte zwischen 0..15 Dies entspricht
        // 0..60 dBµV in Schritten von 4dB.

    #define I3_RES_NBT_STAT_ANT_PW_0XD045                            (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_ANT_PW_0XD045_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_ANT_PW_0XD045_TYPE                       unsigned char
        // indicates the status of the antenna power supply. / gibt den Status der Antennenstromversorgung wieder.

    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT_0XD045          (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT_0XD045_UNIT     'dBµV'
    #define I3_RES_NBT_STAT_FIELDSTRENGTH_EXACT_WERT_0XD045_TYPE     unsigned char
        // Values between 0..60 This corresponds to 0..60 dBµV in steps of 1dB. Return of 255 if no measurement possible.
        // / Werte zwischen 0..60 Dies entspricht 0..60 dBµV in Schritten von 1dB. Rückgabe von 255, wenn keine Messung
        // möglich.

    #define I3_RES_NBT_STAT_FREQUENZ_WERT_0XD045                     (RXBUF_UINT32(4))
    #define I3_RES_NBT_STAT_FREQUENZ_WERT_0XD045_UNIT                'kHz'
    #define I3_RES_NBT_STAT_FREQUENZ_WERT_0XD045_TYPE                unsigned long
        // The currently set frequency in the range 150 - 108000 [kHz] / Die derzeit eingestellte Frequenz im Bereich 150
        // - 108000 [kHz]

#define I3_PID_NBT_STATUS_SIGNAL_DAB                                 0xD053
        // DAB signal / DAB Signal

    #define I3_RES_NBT_STAT_SIGNAL_DAB                               (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SIGNAL_DAB_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_SIGNAL_DAB_TYPE                          unsigned char
        // DAB signal / DAB Signal

#define I3_PID_NBT_STATUS_USB_HUB_TEST                               0xD057
        // Status USB HUB installed / Status USB HUB eingebaut

    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_1                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_1_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_1_TYPE                 unsigned char
        // Status HUB connection port 1 / Status HUB Verbindung Port 1

    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_2                      (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_2_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_USB_HUB_TEST_PORT_2_TYPE                 unsigned char
        // Status HUB connection port 2 / Status HUB Verbindung Port 2

#define I3_PID_NBT_STATUS_ROUTE_DOWNLOAD                             0xD065
        // not defined in diagnosis database / not defined in diagnosis database

    #define I3_RES_NBT_STAT_ROUTE_DOWNLOAD                           (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_ROUTE_DOWNLOAD_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_ROUTE_DOWNLOAD_TYPE                      unsigned char
        // Status route download / Status Route download

    #define I3_RES_NBT_STAT_PERCENT_COMPLETE_WERT                    (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_PERCENT_COMPLETE_WERT_UNIT               '%'
    #define I3_RES_NBT_STAT_PERCENT_COMPLETE_WERT_TYPE               unsigned char
        // Completion of route download in percent / Fertigstellung Route Download in Prozent

    #define I3_RES_NBT_STAT_AVAILABLE_DATASETS_WERT                  (RXBUF_UINT(2))
    #define I3_RES_NBT_STAT_AVAILABLE_DATASETS_WERT_TYPE             unsigned short
        // Number of available records / Anzahl verfügbarer Datensätze

#define I3_PID_NBT_STATUS_ADAS                                       0xD067
        // Reads out from the navigation system how many resyncs from which client the navigation system has received and
        // how many messages the navigation system has sent since the beginning of the current lifecycle / Reads out from
        // the navigation system how many Resyncs from which client the navigation system has received and how many
        // messages the navigation system has sent since the beginning of the current lifecycle

    #define I3_RES_NBT_STAT_LIFECYCLE_DURATION_WERT                  (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_LIFECYCLE_DURATION_WERT_TYPE             unsigned short
        // Duration of the lifecycle in minutes / Dauer des Lifecycles in Minuten

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_ACC_WERT                (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_ACC_WERT_TYPE           unsigned char
        // Number of resyncs that have been received from the ACC ECU / Number of resyncs that have been received from
        // the ACC ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_NIVI_WERT               (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_NIVI_WERT_TYPE          unsigned char
        // Number of resyncs that have been received from the Night Vision ECU / Number of resyncs that have been
        // received from the Night Vision ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_LDM_WERT                (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_LDM_WERT_TYPE           unsigned char
        // Number of resyncs that have been received from the LDM ECU / Number of resyncs that have been received from
        // the LDM ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_ICM_QL_WERT             (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_ICM_QL_WERT_TYPE        unsigned char
        // Number of resyncs that have been received from the ICM Q / L ECU / Number of resyncs that have been received
        // from the ICM Q/L ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_KAFAS_WERT              (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_KAFAS_WERT_TYPE         unsigned char
        // Number of resyncs that have been received from the KAFAS ECU / Number of resyncs that have been received from
        // the KAFAS ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_FLA_WERT                (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_FLA_WERT_TYPE           unsigned char
        // Number of resyncs that have been received from the FLA ECU / Number of resyncs that have been received from
        // the FLA ECU

    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_FRMFA_WERT              (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_RECEIVED_RESYNCS_FRMFA_WERT_TYPE         unsigned char
        // Number of resyncs that have been received from the FRMFA ECU / Number of resyncs that have been received from
        // the FRMFA ECU

    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_WERT                       (RXBUF_UCHAR(9))
    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_WERT_TYPE                  unsigned char
        // Number of NavGraph messages that have been sent / Number of NavGraph messages that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_V_WERT                     (RXBUF_UCHAR(10))
    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_V_WERT_TYPE                unsigned char
        // Number of NavGraph extended speed messages that have been sent / Number of NavGraph extended speed messages
        // that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_LNE_WERT                   (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_SENT_NAVGRAPH_LNE_WERT_TYPE              unsigned char
        // Number of NavGraph extended lane messages that have been sent / Number of NavGraph extended lane messages that
        // have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGRAPHSYNC_WERT                   (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_SENT_NAVGRAPHSYNC_WERT_TYPE              unsigned char
        // Number of NavGraphSync messages that have been sent / Number of NavGraphSync messages that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGPS1_WERT                        (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_SENT_NAVGPS1_WERT_TYPE                   unsigned char
        // Number of NavGPS1 messages that have been sent / Number of NavGPS1 messages that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGPS2_WERT                        (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_SENT_NAVGPS2_WERT_TYPE                   unsigned char
        // Number of NavGPS2 messages that have been sent / Number of NavGPS2 messages that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVSYSINFO_WERT                     (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_SENT_NAVSYSINFO_WERT_TYPE                unsigned char
        // Number of NavSysInfo messages that have been sent / Number of NavSysInfo messages that have been sent

    #define I3_RES_NBT_STAT_SENT_NAVGRAPHMATCH_WERT                  (RXBUF_UCHAR(16))
    #define I3_RES_NBT_STAT_SENT_NAVGRAPHMATCH_WERT_TYPE             unsigned char
        // Number of NavGraphMatch messages that have been sent / Number of NavGraphMatch messages that have been sent

#define I3_PID_NBT_STATUS_TDA_AKTIVIERUNG                            0xD091
        // Status of TDA BMW services / Status TDA BMW Dienste

    #define I3_RES_NBT_STAT_DIENSTE_AKTIVIERUNG                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_DIENSTE_AKTIVIERUNG_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_DIENSTE_AKTIVIERUNG_TYPE                 unsigned char
        // Status of TDA BMW services / Status TDA BMW Dienste

#define I3_PID_NBT_STATUS_TIME_AFTER_STARTUP                         0xD092
        // Indicates the times that have passed after various system start-up points / Gibt die Zeiten an, die nach
        // verschiedenen System-Aufstart-punkten vergangen sind

    #define I3_RES_NBT_STAT_TIME_AFTER_START_UP_WERT                 (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_TIME_AFTER_START_UP_WERT_UNIT            's'
    #define I3_RES_NBT_STAT_TIME_AFTER_START_UP_WERT_TYPE            unsigned char
        // Values from 0-255 [s], which indicate how much time has passed since booting (waking up) / Werte von 0-255
        // [s], die angeben, wie viel Zeit seit dem Hochstarten (Aufwecken) vergangen ist

    #define I3_RES_NBT_STAT_TIME_AFTER_POWER_DOWN_AVAILABLE_WERT     (RXBUF_SCHAR(1))
    #define I3_RES_NBT_STAT_TIME_AFTER_POWER_DOWN_AVAILABLE_WERT_UNIT 's'
    #define I3_RES_NBT_STAT_TIME_AFTER_POWER_DOWN_AVAILABLE_WERT_TYPE char
        // Values from 0-127 [s], which indicate how much time has passed since the internal traffic jam was reached, to
        // execute a powerdown immediately. -1 means 'not yet reached' / Werte von 0-127 [s], die angeben, wie viel Zeit
        // vergangen ist, seit dem intern der Staus erreicht wurde, sofort einen Powerdown auszuführen. -1 bedeutet 'noch
        // nicht erreicht'

    #define I3_RES_NBT_STAT_TIME_AFTER_FULLY_OPERATIONAL_WERT        (RXBUF_SCHAR(2))
    #define I3_RES_NBT_STAT_TIME_AFTER_FULLY_OPERATIONAL_WERT_UNIT   's'
    #define I3_RES_NBT_STAT_TIME_AFTER_FULLY_OPERATIONAL_WERT_TYPE   char
        // Values from 0-127 [s], which indicate how much time has passed since the internal traffic jam 'fully started'
        // was reached. -1 means 'not yet reached' / Werte von 0-127 [s], die angeben, wie viel Zeit vergangen ist, seit
        // dem intern der Staus 'vollständig aufgestartet' erreicht wurde. -1 bedeutet 'noch nicht erreicht'

#define I3_PID_NBT_STATUS_FM_PHASDIV_ANTENNA                         0xD093
        // Performs an impedance measurement of the FM antennas from the phase diversity. / Führt eine Impedanzmessung
        // der FM Antennen von der Phasen diversity aus.

    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA1                     (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA1_UNIT                '0-n'
    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA1_TYPE                unsigned char
        // Status FM 1 phase diversity antenna. For the result, see table TAB_stateFMPhasAntenna / Status FM 1
        // Phasendiversity Antenne. Ergebnis siehe Tabelle TAB_stateFMPhasAntenna

    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA2                     (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA2_UNIT                '0-n'
    #define I3_RES_NBT_STAT_FM_PHASEDIV_ANTENNA2_TYPE                unsigned char
        // Status FM 2 phase diversity antenna. For the result, see table TAB_stateFMPhasAntenna / Status FM 2
        // Phasendiversity Antenne. Ergebnis siehe Tabelle TAB_stateFMPhasAntenna

#define I3_PID_NBT_STATUS_BT_FIRMWARE                                0xD095
        // Returns the BT firmware / Gibt die BT Firmware zurück

    // Can't process STAT_BT_FIRMWARE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping WLAN_ACTIVATION on 0xD0A3 which takes arguments

// Skipping WLAN_MODE on 0xD0A4 which takes arguments

// Skipping WLAN_LABEL_PIN on 0xD0A5 which takes arguments

#define I3_PID_NBT_HD_DECODER_FIRMWARE                               0xD0B8
        // Returns the different firmware versions of the HD module / Gibt die verschiedenen Firmware-Versionen des
        // HD-Moduls zurück

    // Can't process STAT_HD_DECODER_FIRMWARE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_ABLAUF_ZERTIFIKAT                                 0xD0B9
        // Send the certificate that will expire next and the date on which it will expire / Senden das Zertifikat das
        // als nächstes abläuft und das Datum an dem es abläuft

    // Can't process STAT_ISSUER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_DATE_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_COOKIES                                           0xD0BA
        // COOKIES in XML format / COOKIES in XML-Format

    // Can't process STAT_COOKIES_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping ZIN_SHOWCOLOR on 0xD0BD which takes arguments

// Skipping ZIN_TESTBILD on 0xD0BE which takes arguments

// Skipping ZIN_WIDGET_ID on 0xD0BF which takes arguments

#define I3_PID_NBT_COUNTER_FILES_MUSICDB                             0xD0C1
        // Number of files stored in the music DB / Anzahl der Dateien die in der Musik DB gespeichert sind

    #define I3_RES_NBT_STAT_MUSICDB_STORED_FILES_WERT                (RXBUF_UINT32(0))
    #define I3_RES_NBT_STAT_MUSICDB_STORED_FILES_WERT_TYPE           unsigned long
        // Number of files stored in the music DB / Anzahl der Dateien die in der Musik DB gespeichert sind

// Skipping ZIN_HELLIGKEITSWERT on 0xD0C6 which takes arguments

// Skipping ZIN_RESET on 0xD0C7 which takes arguments

// Skipping ZIN_ENDE on 0xD0C8 which takes arguments

#define I3_PID_NBT_ZIN_CENTRAL_INSTRUMENT                            0xD0C9
        // Returns the status information of the central instrument. / Gibt die Statusinformationen des
        // Zentralinstruments zurück.

    #define I3_RES_NBT_STAT_HW_INDEX_WERT                            (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_HW_INDEX_WERT_TYPE                       unsigned char
        // Hardware version value / Wert der Hardware-Version

    #define I3_RES_NBT_STAT_SW_INDEX_WERT                            (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_SW_INDEX_WERT_TYPE                       unsigned char
        // Software version value / Wert der Software-Version

    #define I3_RES_NBT_STAT_CRC_COUNTER_WERT                         (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_CRC_COUNTER_WERT_TYPE                    unsigned char
        // Number of CRC errors detected / Anzahl der erkannten CRC-Fehler

    #define I3_RES_NBT_STAT_SERIAL_NUMBER_WERT                       (RXBUF_UINT32(3))
    #define I3_RES_NBT_STAT_SERIAL_NUMBER_WERT_TYPE                  unsigned long
        // Serial number of the central instrument / Seriennummer des Zentralinstruments

    #define I3_RES_NBT_STAT_DIAGNOSTIC_FLAGS                         (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_DIAGNOSTIC_FLAGS_UNIT                    '0-n'
    #define I3_RES_NBT_STAT_DIAGNOSTIC_FLAGS_TYPE                    unsigned char
        // Returns the status of the central instrument. Values from the table TAB_ZIN_DIAGNOSTIC_FLAG / Gibt den Status
        // des Zentralinstruments zurück Werte aus der Tabelle TAB_ZIN_DIAGNOSTIC_FLAG

    #define I3_RES_NBT_STAT_ZIN_VARIANT                              (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_ZIN_VARIANT_UNIT                         '0-n'
    #define I3_RES_NBT_STAT_ZIN_VARIANT_TYPE                         unsigned char
        // Reports the variant of the central instrument used / Reports the variant of the used central instrument

#define I3_PID_NBT_ZIN_EVENT_QUEUE                                   0xD0CA
        // Returns the status information of the central instrument. / Gibt die Statusinformationen des
        // Zentralinstruments zurück.

    #define I3_RES_NBT_STAT_EVENT_ID_0_WERT                          (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_EVENT_ID_0_WERT_TYPE                     unsigned char
        // first event ID / erste Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_1_WERT                          (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_EVENT_ID_1_WERT_TYPE                     unsigned char
        // second event ID / zweite Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_2_WERT                          (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_EVENT_ID_2_WERT_TYPE                     unsigned char
        // third event ID / dritte Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_3_WERT                          (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_EVENT_ID_3_WERT_TYPE                     unsigned char
        // fourth event ID / vierte Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_4_WERT                          (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_EVENT_ID_4_WERT_TYPE                     unsigned char
        // fifth event ID / fünfte Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_5_WERT                          (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_EVENT_ID_5_WERT_TYPE                     unsigned char
        // sixth event ID / sechste Event ID

    #define I3_RES_NBT_STAT_EVENT_ID_6_WERT                          (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_EVENT_ID_6_WERT_TYPE                     unsigned char
        // seventh event ID / siebte Event ID

#define I3_PID_NBT_ZIN_INTERNAL_STATES                               0xD0CB
        // Returns the status information of the central instrument. / Gibt die Statusinformationen des
        // Zentralinstruments zurück.

    #define I3_RES_NBT_STAT_CURRENT_WIDGET_ID_WERT                   (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_CURRENT_WIDGET_ID_WERT_TYPE              unsigned char
        // - / -

    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_1_WERT               (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_1_WERT_TYPE          unsigned char
        // - / -

    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_2_WERT               (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_2_WERT_TYPE          unsigned char
        // - / -

    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_3_WERT               (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_NEXT_WIDGET_ID_PRIO_3_WERT_TYPE          unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SW_MAJOR_VERSION_WERT                    (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_SW_MAJOR_VERSION_WERT_TYPE               unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SW_MINOR_VERSION_WERT                    (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_SW_MINOR_VERSION_WERT_TYPE               unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SW_PATCH_VERSION_WERT                    (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_SW_PATCH_VERSION_WERT_TYPE               unsigned char
        // - / -

    #define I3_RES_NBT_STAT_TARGET_BRIGHTNESS_WERT                   (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_TARGET_BRIGHTNESS_WERT_TYPE              unsigned char
        // - / -

    #define I3_RES_NBT_STAT_LED_RING_OFFSET_BRIGHTNESS_WERT          (RXBUF_SCHAR(8))
    #define I3_RES_NBT_STAT_LED_RING_OFFSET_BRIGHTNESS_WERT_TYPE     char
        // - / -

    #define I3_RES_NBT_STAT_CURRENT_PWM_OUTPUT_VALUE_WERT            (RXBUF_UINT(9))
    #define I3_RES_NBT_STAT_CURRENT_PWM_OUTPUT_VALUE_WERT_TYPE       unsigned short
        // - / -

    #define I3_RES_NBT_STAT_LED_RING_SWITCH_WERT                     (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_LED_RING_SWITCH_WERT_TYPE                unsigned char
        // - / -

    #define I3_RES_NBT_STAT_PERMANENT_SWITCH_WERT                    (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_PERMANENT_SWITCH_WERT_TYPE               unsigned char
        // - / -

    #define I3_RES_NBT_STAT_PERMANENT_DISPLAYS_WERT                  (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_PERMANENT_DISPLAYS_WERT_TYPE             unsigned char
        // - / -

    #define I3_RES_NBT_STAT_ANIMATION_SWITCH_WERT                    (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_ANIMATION_SWITCH_WERT_TYPE               unsigned char
        // - / -

    #define I3_RES_NBT_STAT_ANIMATION_DISPLAYS_WERT                  (RXBUF_UINT32(15))
    #define I3_RES_NBT_STAT_ANIMATION_DISPLAYS_WERT_TYPE             unsigned long
        // - / -

    #define I3_RES_NBT_STAT_ANAIMATION_TRIGGER_EVENT_WERT            (RXBUF_UCHAR(19))
    #define I3_RES_NBT_STAT_ANAIMATION_TRIGGER_EVENT_WERT_TYPE       unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_ID_WERT                   (RXBUF_UCHAR(20))
    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_ID_WERT_TYPE              unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_PRIO_WERT                 (RXBUF_UCHAR(21))
    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_PRIO_WERT_TYPE            unsigned char
        // - / -

    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_TRIGGER_WERT              (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_SEMI_PER_EVENT_TRIGGER_WERT_TYPE         unsigned char
        // - / -

#define I3_PID_NBT_PROVISIONING_PARAMETER                            0xD0CE
        // Reads the parameters of the provisioning / Liest die Parameter der Provisionierung aus

    // Can't process STAT_SHORT_VIN_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_VERSION_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't yet generate code for STAT_SMCC_TEXT of type string[3], at offset 0. But we account for the 3 bytes
        // SIM Mobile country code / SIM Mobile Länderkode

    // Can't yet generate code for STAT_SMNC_TEXT of type string[3], at offset 3. But we account for the 3 bytes
        // SIM mobile network code / SIM Mobile Netzwerkkode

    // Can't process STAT_ICC_ID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_IMEI_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SERIAL_NUMBER_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_CAUSE_WERT                               (RXBUF_UINT(6))
    #define I3_RES_NBT_STAT_CAUSE_WERT_TYPE                          unsigned short
        // Cause value The value indicates the trigger for the provisioning. 0: Required access data is missing in the
        // DASAS data 1: A required OTAAS is expired 2: Update request by user via the HMI 3: Application trigger 4: The
        // PINGUIN triggered the provisioning 5: ACM triggered provisioning on DPAS Mode 6: Provisioning via Diagnosis /
        // Cause Wert Der Wert gibt den Auslöser der Provisionierung an. 0: Required access data is missing in the DASAS
        // data 1: A required OTAAS is expired 2: Update request by user via the HMI  3: Application trigger 4: The
        // PINGUIN triggered the provisioning  5: ACM triggered provisioning on DPAS Mode 6: Provisioning via Diagnosis

#define I3_PID_NBT_MEDIA_STATISTIK                                   0xD0D1
        // Returns the CD / DVD media statistic / Returns the CD/ DVD media statistic

    #define I3_RES_NBT_STAT_COUNTER_MEDIA_WERT                       (RXBUF_UINT32(0))
    #define I3_RES_NBT_STAT_COUNTER_MEDIA_WERT_TYPE                  unsigned long
        // Number of media inserted in the internal CD / DVD drive / Anzahl der eingelegten Medien des internen CD /
        // DVD-Laufwerks

    #define I3_RES_NBT_STAT_COUNTER_AUDIO_CDS_WERT                   (RXBUF_UINT32(4))
    #define I3_RES_NBT_STAT_COUNTER_AUDIO_CDS_WERT_TYPE              unsigned long
        // Number of audio CDs (CDDA) inserted in the internal CD / DVD drive / Anzahl der eingelegten Audio-CDs (CDDA)
        // des internen CD / DVD-Laufwerks

    #define I3_RES_NBT_STAT_COUNTER_CD_ROM_WERT                      (RXBUF_UINT32(8))
    #define I3_RES_NBT_STAT_COUNTER_CD_ROM_WERT_TYPE                 unsigned long
        // Number of inserted audio CD-ROMs (CD-R / -RW, DVD-R / -RW / + R / + RW ...) of the internal CD / DVD drive /
        // Anzahl der eingelegten Audio-CD-ROMs (CD-R/-RW, DVD-R/-RW / + R / + RW ...) des internen CD / DVD-Laufwerks

    #define I3_RES_NBT_STAT_COUNTER_DVD_VIDEO_WERT                   (RXBUF_UINT32(12))
    #define I3_RES_NBT_STAT_COUNTER_DVD_VIDEO_WERT_TYPE              unsigned long
        // Number of video DVDs inserted in the internal CD / DVD drive / Anzahl der eingelegten Video-DVDs des internen
        // CD / DVD-Laufwerks

    #define I3_RES_NBT_STAT_COUNTER_BLURAY_WERT                      (RXBUF_UINT32(16))
    #define I3_RES_NBT_STAT_COUNTER_BLURAY_WERT_TYPE                 unsigned long
        // Number of inserted Blu-ray disks of the internal Blu-ray drive / Number of inserted Blu-ray-disks of the
        // internal Blu-ray drive

    #define I3_RES_NBT_STAT_RECOGNIZED_AUDIO_CDS_WERT                (RXBUF_UINT32(20))
    #define I3_RES_NBT_STAT_RECOGNIZED_AUDIO_CDS_WERT_TYPE           unsigned long
        // Number of audio CDs recognized by the Gracenote DB / Anzahl der Audio-CDs die von der Gracenote DB erkannt
        // wurden

    #define I3_RES_NBT_STAT_ERROR_DURING_PLAYBACK_WERT               (RXBUF_UINT32(24))
    #define I3_RES_NBT_STAT_ERROR_DURING_PLAYBACK_WERT_TYPE          unsigned long
        // Number of files that caused playback problems / Anzahl der Dateien, die Probleme bei der Wiedergabe
        // verursachten

    #define I3_RES_NBT_STAT_PLAYBACK_TIME_CD_WERT                    (RXBUF_UINT(28))
    #define I3_RES_NBT_STAT_PLAYBACK_TIME_CD_WERT_TYPE               unsigned short
        // playback time for using the CD drive / playback time for using the CD drive

    #define I3_RES_NBT_STAT_PLAYBACK_TIME_DVD_WERT                   (RXBUF_UINT(30))
    #define I3_RES_NBT_STAT_PLAYBACK_TIME_DVD_WERT_TYPE              unsigned short
        // playback time for using the DVD drive / playback time for using the DVD drive

    #define I3_RES_NBT_STAT_PLAYBACK_TIME_BLURAY_WERT                (RXBUF_UINT(32))
    #define I3_RES_NBT_STAT_PLAYBACK_TIME_BLURAY_WERT_TYPE           unsigned short
        // Playback time while using the Blu-ray drive in hours / Playback time while using the Blu-ray drive in hours

    #define I3_RES_NBT_STAT_INSERT_EJECT_COUNT_WERT                  (RXBUF_UINT(34))
    #define I3_RES_NBT_STAT_INSERT_EJECT_COUNT_WERT_TYPE             unsigned short
        // counter for insert or eject a medium into a CD / DVD drive / counter for insert or eject a medium into a CD/
        // DVD drive

#define I3_PID_NBT_PROVISIONING_DATA                                 0xD0D3
        // Reads the status of the writing of the provisioning file. / Liest Status des Schreibens der
        // Provisionierungsdatei.

    // Can't process STAT_SHORT_VIN_TEXT_0XD0D3 - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_DOWNLOAD_ID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_PROVISIONING_0XD0D3                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_PROVISIONING_0XD0D3_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_PROVISIONING_0XD0D3_TYPE                 unsigned char
        // Status of the writing process of the provisioning data. / Status vom Schreibvorgang der Provisionierungsdaten.

// Skipping SERVICE_PARTNER_DATEN on 0xD0D5 which takes arguments

#define I3_PID_NBT_STATUS_LAST_DESTINATIONS_FIRST_DATA_SET           0xD0D6
        // Returns the last 16 destinations for which route guidance was activated in the navigation system. / Gibt die
        // letzten 16 Ziele zurück, für die im Navigationssystem die Zielführung aktiviert wurden.

    // Can't yet generate code for STAT_DESTINATION_TYPE_1_DATA of type data[1] at offset 0. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_1_DATA of type data[5] at offset 1. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_1_DATA of type data[5] at offset 6. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_2_DATA of type data[1] at offset 11. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_2_DATA of type data[5] at offset 12. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_2_DATA of type data[5] at offset 17. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_3_DATA of type data[1] at offset 22. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_3_DATA of type data[5] at offset 23. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_3_DATA of type data[5] at offset 28. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_4_DATA of type data[1] at offset 33. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_4_DATA of type data[5] at offset 34. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_4_DATA of type data[5] at offset 39. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_5_DATA of type data[1] at offset 44. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_5_DATA of type data[5] at offset 45. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM   Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_5_DATA of type data[5] at offset 50. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_6_DATA of type data[1] at offset 55. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_6_DATA of type data[5] at offset 56. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_6_DATA of type data[5] at offset 61. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_7_DATA of type data[1] at offset 66. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_7_DATA of type data[5] at offset 67. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_7_DATA of type data[5] at offset 72. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_8_DATA of type data[1] at offset 77. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_8_DATA of type data[5] at offset 78. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_8_DATA of type data[5] at offset 83. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg Gra [0-90] mm minute [0-59] ss second
        // [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg    Gra
        // [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_9_DATA of type data[1] at offset 88. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_9_DATA of type data[5] at offset 89. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_9_DATA of type data[5] at offset 94. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_10_DATA of type data[1] at offset 99. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_10_DATA of type data[5] at offset 100. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_10_DATA of type data[5] at offset 105. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_11_DATA of type data[1] at offset 110. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_11_DATA of type data[5] at offset 111. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_11_DATA of type data[5] at offset 116. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_12_DATA of type data[1] at offset 121. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_12_DATA of type data[5] at offset 122. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_12_DATA of type data[5] at offset 127. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_13_DATA of type data[1] at offset 132. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_13_DATA of type data[5] at offset 133. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit  0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM   Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_13_DATA of type data[5] at offset 138. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute [0-59] ss second
        // [0-59] hh 100th of a second [0-99] / gibt die longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg    Grad
        // [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_14_DATA of type data[1] at offset 143. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_14_DATA of type data[5] at offset 144. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM   Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_14_DATA of type data[5] at offset 149. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm   Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_15_DATA of type data[1] at offset 154. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_15_DATA of type data[5] at offset 155. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_15_DATA of type data[5] at offset 160. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_DESTINATION_TYPE_16_DATA of type data[1] at offset 165. But we account for the 1 bytes
        // Returns the type of destination Bit-0, Bit-1: 00 = no destination (remaining data can be skipped) 01 = user
        // destination 10 = optional destination (not activated, for BMW Routes) 11 = activated optional destination (BMW
        // Routes) Bit-2: 0 = not current destination 1 = current destination Bit-3: Future use Bit-4: Future use Bit-5:
        // Future use Bit-6 to Bit-7: Future use / gibt den Typ des Ziels zurück  Bit-0,Bit-1: 00 = no destination
        // (remaining data can be skipped) 01 = user destination 10 = optional destination (not activated, for BMW
        // Routes) 11 = activated optional destination (BMW Routes)  Bit-2: 0 = not current destination 1 = current
        // destination  Bit-3: Future use  Bit-4: Future use  Bit-5: Future use  Bit-6 to Bit-7: Future use

    // Can't yet generate code for STAT_GPS_POSITION_LATITUDE_16_DATA of type data[5] at offset 166. But we account for the 5 bytes
        // returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute [0-59] SS second
        // [0-59] HH 100th second [0-99] / gibt die Latitude zurück  LL    Ost/ West mit 0x00 Ost, 0x01 West GG   Grad
        // [0-180] MM  Minute  [0-59]  SS    Sekunde [0-59] HH   100stel Sekunde [0-99]

    // Can't yet generate code for STAT_GPS_POSITION_LONGITUDE_16_DATA of type data[5] at offset 171. But we account for the 5 bytes
        // returns the longitude bb north / south with 0x00 north, 0x01 south gg degrees [0-90] mm minute [0-59] ss
        // second [0-59] hh 100th of a second [0-99] / gibt die Longitude zurück  bb nord/süd mit 0x00 Nord, 0x01 Süd gg 
        // Grad [0-90]   mm  Minute  [0-59]  ss    Sekunde [0-59]  hh   100stel Sekunde [0-99]

#define I3_PID_NBT_STATUS_SDARS_RADIO_ID                             0xD0DA
        // Returns the 12 digits Radio ID of the SDARS tuner (SXM) / Returns the 12 digits Radio ID of the SDARS tuner
        // (SXM)

    // Can't yet generate code for STAT_SDARS_RADIO_ID_TEXT of type string[12], at offset 0. But we account for the 12 bytes
        // Returns the 12 digits Radio ID of the SDARS tuner (SXM) / Returns the 12 digits Radio ID of the SDARS tuner
        // (SXM)

#define I3_PID_NBT_SDARS_VERSIONS                                    0xD0DD
        // Returns the various versions from HW and SW of the SDARS module / Returns the various versions from HW and SW
        // of the SDARS module

    // Can't process STAT_MODUL_TYPE_ID_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_MODUL_HW_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_MODUL_SW_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SXI_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_BB_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HDEC_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_RF_REV_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping SDARS_SXM_CHANNEL on 0xD0DE which takes arguments

#define I3_PID_NBT_STATUS_SDARS_SIGNAL_QUALITY_SXM                   0xD0DF
        // Returns the quality of the SDARS signal / Returns the quality of the SDARS signal

    #define I3_RES_NBT_STAT_SDARS_COMP_RECEPTION_SXM                 (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_SDARS_COMP_RECEPTION_SXM_UNIT            '0-n'
    #define I3_RES_NBT_STAT_SDARS_COMP_RECEPTION_SXM_TYPE            unsigned char
        // Composite reception quality as integer / Composite reception quality as integer

    #define I3_RES_NBT_STAT_SDARS_GLOBAL_STATUS                      (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_SDARS_GLOBAL_STATUS_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_SDARS_GLOBAL_STATUS_TYPE                 unsigned char
        // Global status as integer / Global status as integer

#define I3_PID_NBT_STATUS_LAST_DESTINATIONS_SECOND_DATA_SET          0xD0E0
        // Returns the last 16 destinations for which route guidance was activated in the navigation system. / Gibt die
        // letzten 16 Ziele zurück, für die im Navigationssystem die Zielführung aktiviert wurden.

    // Can't yet generate code for STAT__PREFERRED_CHARGING_STATION_POSITION_LATITUDE_DATA of type data[5] at offset 0. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_PREFERRED_CHARGING_STATION_POSITION_LONGITUDE_DATA of type data[5] at offset 5. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_1_DATA of type data[5] at offset 10. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_1_DATA of type data[5] at offset 15. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_2_DATA of type data[5] at offset 20. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_2_DATA of type data[5] at offset 25. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_3_DATA of type data[5] at offset 30. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_3_DATA of type data[5] at offset 35. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_4_DATA of type data[5] at offset 40. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_4_DATA of type data[5] at offset 45. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_5_DATA of type data[5] at offset 50. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_5_DATA of type data[5] at offset 55. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_6_DATA of type data[5] at offset 60. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_6_DATA of type data[5] at offset 65. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_7_DATA of type data[5] at offset 70. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_7_DATA of type data[5] at offset 75. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_8_DATA of type data[5] at offset 80. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_8_DATA of type data[5] at offset 85. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_9_DATA of type data[5] at offset 90. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_9_DATA of type data[5] at offset 95. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT__INTERMODAL_CONNECTION_POINT_LATITUDE_10_DATA of type data[5] at offset 100. But we account for the 5 bytes
        // Returns the latitude LL east / west with 0x00 east, 0x01 west GG degree [0-180] MM minute (s) [0-59] SS second
        // [0-59] HH 100th second [0-99] / Returns the latitude  LL     east/ west with 0x00 east, 0x01 west GG    degree
        // [0-180] MM   minute(s) [0-59]  SS    second [0-59] HH   100stel second [0-99]

    // Can't yet generate code for STAT_INTERMODAL_CONNECTION_POINT_LONGITUDE_10_DATA of type data[5] at offset 105. But we account for the 5 bytes
        // Returns the longitude bb north / south with 0x00 north, 0x01 south gg degree [0-90] mm minute (s) [0-59] ss
        // second [0-59] hh 100th second [0-99] / Returns the longitude  bb    north/ south with 0x00 north, 0x01 south
        // gg    degree [0-90]   mm  minute(s) [0-59]  ss     second [0-59]  hh    100stel second [0-99]

    // Can't yet generate code for STAT_CURRENT_ISO_COUNTRY_CODE_TEXT of type string[3], at offset 110. But we account for the 3 bytes
        // Returns the ISO 3166 country code of the car position as three characters; e.g. Germany (DEU / Returns the ISO
        // 3166 country code of the car position as three characters; e.g. Deutschland DEU

#define I3_PID_NBT_STATUS_DRIVE                                      0xD0E2
        // Information if and what type of medium is inserted into drive as integer / Information if and what type of
        // medium is inserted into drive as integer

    #define I3_RES_NBT_STAT_MEDIUM_INSERTED                          (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_MEDIUM_INSERTED_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_MEDIUM_INSERTED_TYPE                     unsigned char
        // Information if and what type of medium is inserted into drive as integer / Information if and what type of
        // medium is inserted into drive as integer

// Skipping STEUERN_BORDERLINE_SETTING on 0xD0E4 which takes arguments

#define I3_PID_NBT_STATUS_BORDERLINE_SETTING                         0xD0E5
        // returns the ISO 3166 country code of the car position as three characters (e.g. Deutschland; DEU) 0x0 default
        // (Initialization value) - ¿default¿ means standard view from first Navigation Database compilation / returns
        // the ISO 3166 country code of the car position as three characters (e.g. Deutschland; DEU)  0x0 default
        // (Initialization value) - ¿default¿ means standard view from first Navigation Database compilation

    // Can't yet generate code for STAT_BORDERLINE_SETTING_DATA of type data[3] at offset 0. But we account for the 3 bytes
        // returns the ISO 3166 country code of the car position as three characters (e.g. Deutschland; DEU) 0x0 default
        // (Initialization value) - ¿default¿ means standard view from first Navigation Database compilation / returns
        // the ISO 3166 country code of the car position as three characters (e.g. Deutschland; DEU)  0x0 default
        // (Initialization value) - ¿default¿ means standard view from first Navigation Database compilation

// Skipping STEUERN_BORDERLINE_CHANGE_MODE on 0xD0E7 which takes arguments

#define I3_PID_NBT_STATUS_BORDERLINE_CHANGE_MODE                     0xD0E8
        // returns if a borderline is set to mode<automatic> or<manual> / returns if a borderline is set to mode
        // <automatic> or <manual>

    #define I3_RES_NBT_STAT_BORDERLINE_CHANGE_MODE                   (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_BORDERLINE_CHANGE_MODE_UNIT              '0-n'
    #define I3_RES_NBT_STAT_BORDERLINE_CHANGE_MODE_TYPE              unsigned char
        // returns if a borderline is set to mode<automatic> or<manual> / returns if a borderline is set to mode
        // <automatic> or <manual>

#define I3_PID_NBT_STATUS_SDARS_PELLET_LESEN                         0xD0E9
        // Value of the pellet / Wert des Pellets

    // Can't yet generate code for STAT_SDARS_PELLET_TEXT of type string[100], at offset 0. But we account for the 100 bytes
        // Value of the pellet / Wert des Pellets

#define I3_PID_NBT_PROVISIONING_FORMAT                               0xD0EB
        // is used to understand a signed provisioning file / dient dazu, eine signierte Bereitstellungsdatei zu
        // verstehen 

    #define I3_RES_NBT_STAT_STAT_SIGNATURE                           (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_STAT_SIGNATURE_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_STAT_SIGNATURE_TYPE                      unsigned char
        // is used to understand a signed provisioning file / dient dazu, eine signierte Bereitstellungsdatei zu
        // verstehen 

// Skipping WLAN_PAIRABLE on 0xD1F8 which takes arguments

#define I3_PID_NBT_WLAN_AUSSTATTUNG                                  0xD1FA
        // Presence of the different WiFi modes / Präsenz der verschiedenen WLAN-Modi

    #define I3_RES_NBT_STAT_WLAN_CODED                               (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_WLAN_CODED_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_WLAN_CODED_TYPE                          unsigned char
        // WLAN encoded if at least 1 of the following values STAT_WLAN_AP_SA, STAT_WLAN_WIFI_DIRECT_SA or
        // STAT_WLAN_STATION_SA is active / WLAN codiert, wenn mindestens 1 der folgenden Wert STAT_WLAN_AP_SA,
        // STAT_WLAN_WIFI_DIRECT_SA oder STAT_WLAN_STATION_SA aktiv ist

    #define I3_RES_NBT_STAT_WLAN_AP_SA                               (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_WLAN_AP_SA_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_WLAN_AP_SA_TYPE                          unsigned char
        // WLAN AP / WLAN AP

    #define I3_RES_NBT_STAT_WLAN_WIFI_DIRECT_SA                      (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_WLAN_WIFI_DIRECT_SA_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_WLAN_WIFI_DIRECT_SA_TYPE                 unsigned char
        // WLAN Wifi Direct / WLAN Wifi Direct 

    #define I3_RES_NBT_STAT_WLAN_STATION_SA                          (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_WLAN_STATION_SA_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_WLAN_STATION_SA_TYPE                     unsigned char
        // WLAN station / WLAN Station 

// Skipping WLAN_DEVICELIST_AP on 0xD1FB which takes arguments

#define I3_PID_NBT_WLAN_DEVICELIST_WIFI_DIRECT                       0xD1FC
        // Device list in Wifi Direct mode / Geräteliste im Wifi Direct Modus

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_1_DATA of type data[6] at offset 0. But we account for the 6 bytes
        // MAC address of the device 1 / MAC Adresse des Gerät 1

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_2_DATA of type data[6] at offset 6. But we account for the 6 bytes
        // MAC address of the device 2 / MAC Adresse des Gerät 2

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_3_DATA of type data[6] at offset 12. But we account for the 6 bytes
        // MAC address of the device 3 / MAC Adresse des Gerät 3

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_4_DATA of type data[6] at offset 18. But we account for the 6 bytes
        // MAC address of the device 4 / MAC Adresse des Gerät 4

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_5_DATA of type data[6] at offset 24. But we account for the 6 bytes
        // MAC address of the device 5 / MAC Adresse des Gerät 5

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_6_DATA of type data[6] at offset 30. But we account for the 6 bytes
        // MAC address of the device 6 / MAC Adresse des Gerät 6

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_7_DATA of type data[6] at offset 36. But we account for the 6 bytes
        // MAC address of the device 7 / MAC Adresse des Gerät 7

    // Can't yet generate code for STAT_WLAN_DEVICELIST_DIRECT_8_DATA of type data[6] at offset 42. But we account for the 6 bytes
        // MAC address of the device 8 / MAC Adresse des Gerät 8

#define I3_PID_NBT_USB_TEST                                          0xD207
        // connected USB devices at the HU / verbundene USB Geräte an der HU

    #define I3_RES_NBT_STAT_USB_HUB_KDZ_CODING                       (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_USB_HUB_KDZ_CODING_UNIT                  '0-n'
    #define I3_RES_NBT_STAT_USB_HUB_KDZ_CODING_TYPE                  unsigned char
        // Status of whether a USB HUB is installed between HU and KDZ; depends on the coding test / Status, ob ein
        // USB-HUB zwischen HU und KDZ installiert ist; hängt von der Codierprüfung ab

    #define I3_RES_NBT_STAT_USB_TEST_HUB                             (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_USB_TEST_HUB_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_USB_TEST_HUB_TYPE                        unsigned char
        // Status of the USB interface test / Status des USB-Interface-Tests

    #define I3_RES_NBT_STAT_VENDORID_HUB_WERT                        (RXBUF_UINT(2))
    #define I3_RES_NBT_STAT_VENDORID_HUB_WERT_UNIT                   'HEX'
    #define I3_RES_NBT_STAT_VENDORID_HUB_WERT_TYPE                   unsigned short
        // VendorID that is issued by the USB interface / VendorID, dass von der USB Schnittstelle ausgegeben wird

    #define I3_RES_NBT_STAT_PRODUCTID_HUB_WERT                       (RXBUF_UINT(4))
    #define I3_RES_NBT_STAT_PRODUCTID_HUB_WERT_UNIT                  'HEX'
    #define I3_RES_NBT_STAT_PRODUCTID_HUB_WERT_TYPE                  unsigned short
        // Predefined ProductID that is output for the device from the USB interface / vorgegebene ProductID, die für das
        // Gerät von der USB Schnittstelle ausgegeben wird

    // Can't process STAT_VENDORSTRING_HUB_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_USB_TEST_KDZ1                            (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_USB_TEST_KDZ1_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_USB_TEST_KDZ1_TYPE                       unsigned char
        // Status of the USB interface test / Status des USB-Interface-Tests

    #define I3_RES_NBT_STAT_VENDORID_KDZ1_WERT                       (RXBUF_UINT(7))
    #define I3_RES_NBT_STAT_VENDORID_KDZ1_WERT_UNIT                  'HEX'
    #define I3_RES_NBT_STAT_VENDORID_KDZ1_WERT_TYPE                  unsigned short
        // VendorID that is issued by the USB interface / VendorID, die von der USB Schnittstelle ausgegeben wird

    #define I3_RES_NBT_STAT_PRODUCTID_KDZ1_WERT                      (RXBUF_UINT(9))
    #define I3_RES_NBT_STAT_PRODUCTID_KDZ1_WERT_UNIT                 'HEX'
    #define I3_RES_NBT_STAT_PRODUCTID_KDZ1_WERT_TYPE                 unsigned short
        // Predefined ProductID that is output for the device from the USB interface / vorgegebene ProductID, die für das
        // Gerät von der USB Schnittstelle ausgegeben wird

    // Can't process STAT_VENDORSTRING_KDZ1_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_USB_TEST_KDZ2                            (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_USB_TEST_KDZ2_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_USB_TEST_KDZ2_TYPE                       unsigned char
        // Status of the USB interface test / Status des USB-Interface-Tests

    #define I3_RES_NBT_STAT_VENDORID_KDZ2_WERT                       (RXBUF_UINT(12))
    #define I3_RES_NBT_STAT_VENDORID_KDZ2_WERT_UNIT                  'HEX'
    #define I3_RES_NBT_STAT_VENDORID_KDZ2_WERT_TYPE                  unsigned short
        // VendorID that is issued by the USB interface / VendorID, die von der USB Schnittstelle ausgegeben wird

    #define I3_RES_NBT_STAT_PRODUCTID_KDZ2_WERT                      (RXBUF_UINT(14))
    #define I3_RES_NBT_STAT_PRODUCTID_KDZ2_WERT_UNIT                 'HEX'
    #define I3_RES_NBT_STAT_PRODUCTID_KDZ2_WERT_TYPE                 unsigned short
        // Predefined ProductID that is output for the device from the USB interface / vorgegebene ProductID, die für das
        // Gerät von der USB Schnittstelle ausgegeben wird

    // Can't process STAT_VENDORSTRING_KDZ2_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_NBT_STAT_USB_TEST_SIA                             (RXBUF_UCHAR(16))
    #define I3_RES_NBT_STAT_USB_TEST_SIA_UNIT                        '0-n'
    #define I3_RES_NBT_STAT_USB_TEST_SIA_TYPE                        unsigned char
        // Result of the Snap In Adpater test / Ergebnis des Snap In Adpater Tests

    #define I3_RES_NBT_STAT_VENDORID_SIA_WERT                        (RXBUF_UINT(17))
    #define I3_RES_NBT_STAT_VENDORID_SIA_WERT_UNIT                   'HEX'
    #define I3_RES_NBT_STAT_VENDORID_SIA_WERT_TYPE                   unsigned short
        // recognized VendorID of the device from the USB interface is output / erkannte VendorID des Gerätes von der USB
        // Schnittstelle wird ausgegeben

    #define I3_RES_NBT_STAT_PRODUCTID_SIA_WERT                       (RXBUF_UINT(19))
    #define I3_RES_NBT_STAT_PRODUCTID_SIA_WERT_UNIT                  'HEX'
    #define I3_RES_NBT_STAT_PRODUCTID_SIA_WERT_TYPE                  unsigned short
        //  recognized ProductID of the device from the USB interface is output /  erkannte ProductID des Gerätes von der
        // USB Schnittstelle wird ausgegeben

    // Can't process STAT_VENDORSTRING_SIA_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_WLAN_AP_NETWORK                                   0xD20E
        // current AP network parameters / aktuelle AP Netzwerkparameter

    // Can't yet generate code for STAT_WLAN_AP_SSID_TEXT of type string[32], at offset 0. But we account for the 32 bytes
        // SSID from the AP network / SSID vom AP Netzwerk

    #define I3_RES_NBT_STAT_WLAN_AP_ENCRYPTION                       (RXBUF_UCHAR(32))
    #define I3_RES_NBT_STAT_WLAN_AP_ENCRYPTION_UNIT                  '0-n'
    #define I3_RES_NBT_STAT_WLAN_AP_ENCRYPTION_TYPE                  unsigned char
        // Type of encryption from the AP network / Typ der Verschlüsselung vom AP Netzwerk

    // Can't yet generate code for STAT_WLAN_AP_NETWORK_KEY_TEXT of type string[64], at offset 33. But we account for the 64 bytes
        // Key of the AP network / Schlüssel des AP Netzwerk

// Skipping CID_TOUCHINDICATOR on 0xD25B which takes arguments

#define I3_PID_NBT_TOUCH_COMMAND_NUMBER                              0xD26A
        // Returns the number of connected Touch Command devices / Gibt die Anzahl der verbundenen Touch Command Geräten
        // zurück

    // Can't yet generate code for STAT_CONNECTED_TOUCH_COMMAND_TEXT of type string[2], at offset 0. But we account for the 2 bytes
        // Returns the number of connected Touch Command devices / Gibt die Anzahl der verbundenen Touch Command Geräten
        // zurück

// Skipping HU_VIN_PROTECTION_PARAMETER on 0xD3E2 which takes arguments

// Skipping CID_TESTBILD on 0xD5C1 which takes arguments

// Skipping CID_STEUERN on 0xD5C2 which takes arguments

// Skipping CID_BACKLIGHT on 0xD5C4 which takes arguments

// Skipping CID_STEUERN_ENDE on 0xD5C9 which takes arguments

#define I3_PID_NBT_CID_PHOTOSENSOR                                   0xD5CB
        // Analog value phototransistor in the CID / Analogwert Fototransistor im CID

    #define I3_RES_NBT_STAT_PHOTOSENSOR_CID_WERT                     (RXBUF_SINT(0))
    #define I3_RES_NBT_STAT_PHOTOSENSOR_CID_WERT_UNIT                'lx'
    #define I3_RES_NBT_STAT_PHOTOSENSOR_CID_WERT_TYPE                short
        // Analog value phototransistor in the CID / Analogwert Fototransistor im CID

#define I3_PID_NBT_CID_TEMP_BACKLIGHT                                0xD5CC
        // Temperature backlight / Temperatur Hintergrundbeleuchtung

    #define I3_RES_NBT_STAT_TEMP_BACKLIGHT_WERT                      (RXBUF_SCHAR(0))
    #define I3_RES_NBT_STAT_TEMP_BACKLIGHT_WERT_UNIT                 '°C'
    #define I3_RES_NBT_STAT_TEMP_BACKLIGHT_WERT_TYPE                 char
        // Temperature backlight / Temperatur Hintergrundbeleuchtung

#define I3_PID_NBT_CID_HELLIGKEIT_SOLLWERT                           0xD5CD
        // Setpoint brightness value from the dimming module / Soll-Helligkeitswert vom Dimm-Modul

    #define I3_RES_NBT_STAT_HELLIGKEIT_SOLL_WERT                     (RXBUF_SCHAR(0))
    #define I3_RES_NBT_STAT_HELLIGKEIT_SOLL_WERT_UNIT                '%'
    #define I3_RES_NBT_STAT_HELLIGKEIT_SOLL_WERT_TYPE                char
        // Setpoint brightness value from the dimming module / Soll-Helligkeitswert vom Dimm-Modul

#define I3_PID_NBT_CID_HELLIGKEIT_ISTWERT                            0xD5CE
        // Actual brightness value / Ist-Helligkeitswert

    #define I3_RES_NBT_STAT_HELLIGKEIT_IST_WERT                      (RXBUF_SCHAR(0))
    #define I3_RES_NBT_STAT_HELLIGKEIT_IST_WERT_UNIT                 '%'
    #define I3_RES_NBT_STAT_HELLIGKEIT_IST_WERT_TYPE                 char
        // Actual brightness value / Ist-Helligkeitswert

#define I3_PID_NBT_CID_EINGANGSWERTE_LESEN                           0xD5CF
        // Output of the current input values of the CID. / Ausgabe der aktuellen Eingangswerte des CID.

    #define I3_RES_NBT_STAT_DISPLAY_AKTIVIERUNG                      (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_DISPLAY_AKTIVIERUNG_UNIT                 '0-n'
    #define I3_RES_NBT_STAT_DISPLAY_AKTIVIERUNG_TYPE                 unsigned char
        // Display activation [uint8, 0x0..0xF] (signal ENB_DISP from head unit) / Display-Aktivierung [uint8, 0x0..0xF] 
        // (Signal ENB_DISP von Head Unit)

    #define I3_RES_NBT_STAT_OFFSET_HELLIGKEIT_WERT                   (RXBUF_SCHAR(1))
    #define I3_RES_NBT_STAT_OFFSET_HELLIGKEIT_WERT_TYPE              char
        // Offset brightness [sint8, -127 .. + 127 = -100 .. + 100%, 128 = invalid, error value] (signal OFFS_BRIG_FRT
        // from head unit) / Offset Helligkeit [sint8, -127..+127 = -100..+100%, 128 = Ungültig, Fehlerwert]  (Signal
        // OFFS_BRIG_FRT von Head Unit)

    #define I3_RES_NBT_STAT_DIMMRAD_WERT                             (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_DIMMRAD_WERT_TYPE                        unsigned char
        // Dimming wheel position [uint8, 0..254 = 0-100%, 255 = FF = invalid, error value] (signal CTR_ILUM_SW) /
        // Dimmrad-Stellung [uint8, 0..254 = 0-100%, 255 = FF = Ungültig, Fehlerwert]  (Signal CTR_ILUM_SW)

    #define I3_RES_NBT_STAT_HELLIGKEIT_KOMBI_WERT                    (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_HELLIGKEIT_KOMBI_WERT_TYPE               unsigned char
        // Brightness value I-combination brightness sensor [uint8, 0..254 = 0-100%, 255 = FF = invalid, error value]
        // (signal DSTN_LCD_LUM) / Helligkeitswert I-Kombi-Helligkeits-Sensor [uint8, 0..254  = 0-100%, 255 = FF =
        // Ungültig, Fehlerwert]  (Signal DSTN_LCD_LUM)

    #define I3_RES_NBT_STAT_DAEMPFUNG_LCD_WERT                       (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_DAEMPFUNG_LCD_WERT_TYPE                  unsigned char
        // Attenuation of LCD luminance [uint8, 0..240 = fast..slow, 241..254 = erratic, 255 = FF = invalid, error
        // value], speed of the brightness control. (Signal DMPNG_LCD_LUM) / Dämpfung LCD Leuchtdichte [uint8, 0..240 =
        // schnell..langsam, 241..254 = sprunghaft, 255 = FF = Ungültig, Fehlerwert], Geschwindigkeit der
        // Helligkeitsregelung. (Signal DMPNG_LCD_LUM)

#define I3_PID_NBT_CID_VERBINDUNG                                    0xD5D0
        // Status of the CID connection: 0 = CID connection OK, image is displayed 1 = No activation of image output 2 =
        // Display device not ready for display 3 = No communication with display device 4 = Invalid image data 255 =
        // Invalid value (default after RESET) / Status der CID-Verbindung: 0 = CID-Verbindung in Ordnung, Bild wird
        // angezeigt 1 = Keine Aktivierung der Bildausgabe 2 = Anzeigegerät nicht anzeigebereit 3 = Keine Kommunikation
        // mit Anzeigegerät 4 = Bilddaten ungültig 255 = Ungültigkeitswert (Default nach RESET)

    #define I3_RES_NBT_STAT_CID_VERBINDUNG                           (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_CID_VERBINDUNG_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_CID_VERBINDUNG_TYPE                      unsigned char
        // Status of the CID connection: 0 = CID connection OK, image is displayed 1 = No activation of image output 2 =
        // Display device not ready for display 3 = No communication with display device 4 = Invalid image data 255 =
        // Invalid value (default after RESET) / Status der CID-Verbindung: 0 = CID-Verbindung in Ordnung, Bild wird
        // angezeigt 1 = Keine Aktivierung der Bildausgabe 2 = Anzeigegerät nicht anzeigebereit 3 = Keine Kommunikation
        // mit Anzeigegerät 4 = Bilddaten ungültig 255 = Ungültigkeitswert (Default nach RESET)

#define I3_PID_NBT_CID_DETAIL_INFORMATIONEN                          0xD5D4
        // Logistics information CID / Logistikinformationen CID

    #define I3_RES_NBT_STAT_CID_LOCATION_WERT                        (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_CID_LOCATION_WERT_TYPE                   unsigned short
        // CID location / CID Location

    // Can't yet generate code for STAT_PART_NR_DATA of type data[6] at offset 2. But we account for the 6 bytes
        // BMW part number / BMW Teilenummer

#define I3_PID_NBT_EQDATA_FILENAME                                   0x4008
        // Name of the EQ file; File name as a dynamic string / Name des  EQ-File; Datei name als dynamischer string

    // Can't process STAT_EQ_FILENAME_TEXT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_NBT_STATUS_SENSOR_WERTE                               0x400A
        // Returns all filtered internal sensor values / Returns all filtered internal sensor values

    #define I3_RES_NBT_STAT_AMB_SENSOR_WERT                          (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_AMB_SENSOR_WERT_UNIT                     'lx'
    #define I3_RES_NBT_STAT_AMB_SENSOR_WERT_TYPE                     unsigned short
        // Ambient brightness of the local CID sensor (Lux). Range: [0x0000¿0x03E8] 0¿1000 Lux 0xFFFF invalid or sensor
        // not implemented / Ambient brightness of the local CID sensor (Lux). Range: [0x0000¿0x03E8] 0¿1000 Lux 0xFFFF
        // invalid or sensor not implemented

    #define I3_RES_NBT_STAT_BL_TEMP_WERT                             (RXBUF_SCHAR(2))
    #define I3_RES_NBT_STAT_BL_TEMP_WERT_UNIT                        '°C'
    #define I3_RES_NBT_STAT_BL_TEMP_WERT_TYPE                        char
        // Currently measured temperature of the backlight temperature sensor. Range: [0xD8¿0x78] -40 ° C to 120 ° C 0x80
        // -128 ° C Sensor Failure / Currently measured temperature of the backlight temperature sensor. Range:
        // [0xD8¿0x78] -40°C bis  120°C 0x80 -128°C  Sensor Failure

    #define I3_RES_NBT_STAT_VCC_VOLTAGE_WERT                         (RXBUF_UINT(3))
    #define I3_RES_NBT_STAT_VCC_VOLTAGE_WERT_TYPE                    unsigned short
        // Vcc voltage of the CID in steps of 1/10 V Range: [0x0000¿0xFFFE] 0xFFFF invalid / Vcc voltage of the CID in
        // steps of 1/10 V Range: [0x0000¿0xFFFE]  0xFFFF invalid

    #define I3_RES_NBT_STAT_BACKLIGT_DRIVER_WERT                     (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_BACKLIGT_DRIVER_WERT_TYPE                unsigned char
        // Error status output pins of the backlight LED. Range: [0x00¿0x03] 0xFF invalid / Error status output pins of
        // the backlight LED. Range: [0x00¿0x03] 0xFF invalid

    #define I3_RES_NBT_STAT_INT_STATUS_WERT                          (RXBUF_UINT(6))
    #define I3_RES_NBT_STAT_INT_STATUS_WERT_TYPE                     unsigned short
        // Contents of the Indigo register ¿IntStatus' Range: [0x0000¿0xFFFF] / Contents of the Indigo register
        // ¿IntStatus' Range: [0x0000¿0xFFFF]

// Skipping STEUERN_TESTBILD_ERWEITERT on 0x400B which takes arguments

// Skipping STEUERN_RGB_SCREEN on 0x400C which takes arguments

// Skipping TEMPERATUPROFIL on 0x400D which takes arguments

#define I3_PID_NBT_STATUS_CID_SW_VERSION                             0x400E
        // Returns the current CID-SW version. / Returns the current CID-SW version.

    #define I3_RES_NBT_STAT_MAJOR_VERSION_WERT                       (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_MAJOR_VERSION_WERT_TYPE                  unsigned char
        // Major SW version of the CID / Major SW version of the CID

    #define I3_RES_NBT_STAT_MINOR_VERSION_WERT                       (RXBUF_UCHAR(1))
    #define I3_RES_NBT_STAT_MINOR_VERSION_WERT_TYPE                  unsigned char
        // Minor SW version of the CID / Minor SW version of the CID

    #define I3_RES_NBT_STAT_PATCH_VERSION_WERT                       (RXBUF_UCHAR(2))
    #define I3_RES_NBT_STAT_PATCH_VERSION_WERT_TYPE                  unsigned char
        // Patch version of the CID / Patch version of the CID

#define I3_PID_NBT_STATUS_INTERNAL_STATES                            0x400F
        // Returns important internal state variables of the CID software bus / Returns important internal state
        // variables of the CID software bus

    #define I3_RES_NBT_STAT_CID_POWER_MODE                           (RXBUF_UCHAR(0))
    #define I3_RES_NBT_STAT_CID_POWER_MODE_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_CID_POWER_MODE_TYPE                      unsigned char
        // Indicates if the CID is enabled by the head unit power mode / Indicates if the CID is enabled by the head unit
        // power mode

    #define I3_RES_NBT_STAT_ERROR_FLAGS_WERT                         (RXBUF_UINT(1))
    #define I3_RES_NBT_STAT_ERROR_FLAGS_WERT_TYPE                    unsigned short
        // Indicates which internal error are active.Range: [0x0000¿0xFFFF] / Indicates which internal error are
        // active.Range: [0x0000¿0xFFFF]

    #define I3_RES_NBT_STAT_MAIN_STATE                               (RXBUF_UCHAR(3))
    #define I3_RES_NBT_STAT_MAIN_STATE_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_MAIN_STATE_TYPE                          unsigned char
        // Main state of the CID state machine / Main state of the CID state machine

    #define I3_RES_NBT_STAT_OPERATION_STATE                          (RXBUF_UCHAR(4))
    #define I3_RES_NBT_STAT_OPERATION_STATE_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_OPERATION_STATE_TYPE                     unsigned char
        // Operation state of the CID state machine / Operation state of the CID state machine

    #define I3_RES_NBT_STAT_INIT_STATE                               (RXBUF_UCHAR(5))
    #define I3_RES_NBT_STAT_INIT_STATE_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_INIT_STATE_TYPE                          unsigned char
        // Initialization (startup) state of the CID state machine / Initialization (startup) state of the CID state
        // machine

    #define I3_RES_NBT_STAT_COM_STATE                                (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_COM_STATE_UNIT                           '0-n'
    #define I3_RES_NBT_STAT_COM_STATE_TYPE                           unsigned char
        // State of the communication stack / State of the communication stack

    #define I3_RES_NBT_STAT_SCHEDULE_ID                              (RXBUF_UCHAR(7))
    #define I3_RES_NBT_STAT_SCHEDULE_ID_UNIT                         '0-n'
    #define I3_RES_NBT_STAT_SCHEDULE_ID_TYPE                         unsigned char
        // Schedule ID of communication stack. Range: [0x00¿0x04] 0xFF invalid / Schedule ID of communication stack.
        // Range: [0x00¿0x04] 0xFF invalid

    #define I3_RES_NBT_STAT_FADE_STATE                               (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_FADE_STATE_UNIT                          '0-n'
    #define I3_RES_NBT_STAT_FADE_STATE_TYPE                          unsigned char
        // Fading state of the dimming module / Fading state of the dimming module

    #define I3_RES_NBT_STAT_FLASH_STATE                              (RXBUF_UCHAR(9))
    #define I3_RES_NBT_STAT_FLASH_STATE_UNIT                         '0-n'
    #define I3_RES_NBT_STAT_FLASH_STATE_TYPE                         unsigned char
        // Flash reading state of the GDC module / Flash reading state of the GDC module

    #define I3_RES_NBT_STAT_FLASH_DATA_CHANGED                       (RXBUF_UCHAR(10))
    #define I3_RES_NBT_STAT_FLASH_DATA_CHANGED_UNIT                  '0-n'
    #define I3_RES_NBT_STAT_FLASH_DATA_CHANGED_TYPE                  unsigned char
        // Indicates if the flash data of the connected CID has been changed and must be saved by the head unit /
        // Indicates if the flash data of the connected CID has been changed and must be saved by the head unit

    #define I3_RES_NBT_STAT_DISPLAY_VOLTAGE                          (RXBUF_UCHAR(11))
    #define I3_RES_NBT_STAT_DISPLAY_VOLTAGE_UNIT                     '0-n'
    #define I3_RES_NBT_STAT_DISPLAY_VOLTAGE_TYPE                     unsigned char
        // Activation state of the display power supply / Activation state of the display power supply

    #define I3_RES_NBT_STAT_DISPLAY_ENABLE                           (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_DISPLAY_ENABLE_UNIT                      '0-n'
    #define I3_RES_NBT_STAT_DISPLAY_ENABLE_TYPE                      unsigned char
        // Activation state of the complete CID (also contained in Status Monitor) / Activation state of the complete CID
        // (also contained in Status Monitor)

    #define I3_RES_NBT_STAT_DISPLAY_READY                            (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_DISPLAY_READY_UNIT                       '0-n'
    #define I3_RES_NBT_STAT_DISPLAY_READY_TYPE                       unsigned char
        // Indicated if CID is ready to display or not (also contained in Status Monitor) / Indicated if CID is ready to
        // display or not (also contained in Status Monitor)

#define I3_PID_NBT_CID_CODIERDATEN                                   0x4010
        // Overwrites / Reads CID coding data in RAM temporarily / Overwrites / Reads CID coding data in RAM temporarily

    #define I3_RES_NBT_STAT_DIM_CURVE_X1_WERT                        (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_DIM_CURVE_X1_WERT_TYPE                   unsigned short
        // Curve point X1 of the dimming curve. / Curve point X1 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_CURVE_X2_WERT                        (RXBUF_UINT(2))
    #define I3_RES_NBT_STAT_DIM_CURVE_X2_WERT_TYPE                   unsigned short
        // Curve point X2 of the dimming curve. / Curve point X2 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_CURVE_X3_WERT                        (RXBUF_UINT(4))
    #define I3_RES_NBT_STAT_DIM_CURVE_X3_WERT_TYPE                   unsigned short
        // Curve point X3 of the dimming curve. / Curve point X3 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_CURVE_Y1_WERT                        (RXBUF_UINT(6))
    #define I3_RES_NBT_STAT_DIM_CURVE_Y1_WERT_TYPE                   unsigned short
        // Curve point Y1 of the dimming curve. / Curve point Y1 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_CURVE_Y2_WERT                        (RXBUF_UINT(8))
    #define I3_RES_NBT_STAT_DIM_CURVE_Y2_WERT_TYPE                   unsigned short
        // Curve point Y2 of the dimming curve. / Curve point Y2 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_CURVE_Y3_WERT                        (RXBUF_UINT(10))
    #define I3_RES_NBT_STAT_DIM_CURVE_Y3_WERT_TYPE                   unsigned short
        // Curve point Y3 of the dimming curve. / Curve point Y3 of the dimming curve.

    #define I3_RES_NBT_STAT_DIM_TOLERANCE_ALPHA_WERT                 (RXBUF_UCHAR(12))
    #define I3_RES_NBT_STAT_DIM_TOLERANCE_ALPHA_WERT_TYPE            unsigned char
        // Width of dimming module tolerance band (dynamic part) / Width of dimming module tolerance band (dynamic part)

    #define I3_RES_NBT_STAT_DIM_TOLERANCE_ABS_WERT                   (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_DIM_TOLERANCE_ABS_WERT_TYPE              unsigned char
        // Width of dimming module tolerance band (static part) / Width of dimming module tolerance band (static part)

    #define I3_RES_NBT_STAT_DIM_DIFF_GAIN_WERT                       (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_DIM_DIFF_GAIN_WERT_TYPE                  unsigned char
        // Amplification factor for brightness deviation / Amplification factor for brightness deviation

    #define I3_RES_NBT_STAT_DIM_DIFF_THRESHOLD_WERT                  (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_DIM_DIFF_THRESHOLD_WERT_TYPE             unsigned char
        // Threshold for luminous density deviation / Threshold for luminous density deviation

    #define I3_RES_NBT_STAT_DIM_DIFF_BIAS_WERT                       (RXBUF_UCHAR(16))
    #define I3_RES_NBT_STAT_DIM_DIFF_BIAS_WERT_TYPE                  unsigned char
        // Decay constant for dynamic damping / Decay constant for dynamic damping

    #define I3_RES_NBT_STAT_DIM_DIFF_MAX_WERT                        (RXBUF_UCHAR(17))
    #define I3_RES_NBT_STAT_DIM_DIFF_MAX_WERT_TYPE                   unsigned char
        // Maximum time constant for local photo sensor filtering / Maximum time constant for local photo sensor
        // filtering

    #define I3_RES_NBT_STAT_DIM_DIFF_MIN_WERT                        (RXBUF_UCHAR(18))
    #define I3_RES_NBT_STAT_DIM_DIFF_MIN_WERT_TYPE                   unsigned char
        // Minimum time constant for local photo sensor filtering / Minimum time constant for local photo sensor
        // filtering

    #define I3_RES_NBT_STAT_DIM_UP_MIN_WERT                          (RXBUF_UCHAR(19))
    #define I3_RES_NBT_STAT_DIM_UP_MIN_WERT_TYPE                     unsigned char
        // Minimum time constant of dark to bright regulation / Minimum time constant of dark to bright regulation

    #define I3_RES_NBT_STAT_DIM_DOWN_MIN_WERT                        (RXBUF_UCHAR(20))
    #define I3_RES_NBT_STAT_DIM_DOWN_MIN_WERT_TYPE                   unsigned char
        // Minimum time constant from bright to dark regulation / Minimum time constant of bright to dark regulation

    #define I3_RES_NBT_STAT_DIM_MAX_OFFSET_BRIG_WERT                 (RXBUF_UCHAR(21))
    #define I3_RES_NBT_STAT_DIM_MAX_OFFSET_BRIG_WERT_TYPE            unsigned char
        // Upper border of the brightness offset regulation range / Upper border of the brightness offset regulation
        // range

    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T0_WERT                    (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T0_WERT_TYPE               unsigned char
        // Death time before fading starts (resolution 100ms). Range: [0x00¿0xFF] / Death time before fading starts
        // (resolution 100ms). Range: [0x00¿0xFF]

    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T1_WERT                    (RXBUF_UCHAR(23))
    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T1_WERT_TYPE               unsigned char
        // Time to fade to current luminous density (resolution 100ms). Range: [0x00¿0x3F] / Time to fade to current
        // luminous density (resolution 100ms). Range: [0x00¿0x3F]

    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T2_WERT                    (RXBUF_UCHAR(24))
    #define I3_RES_NBT_STAT_DIM_FADE_TIME_T2_WERT_TYPE               unsigned char
        // Time to fade out (resolution 100ms). Range: [0x00¿0x3F] / Time to fade out (resolution 100ms). Range:
        // [0x00¿0x3F]

    #define I3_RES_NBT_STAT_DIM_FADE_EXPO_T1_WERT                    (RXBUF_UCHAR(25))
    #define I3_RES_NBT_STAT_DIM_FADE_EXPO_T1_WERT_TYPE               unsigned char
        //  Fade in ramp curve exponent. 0 = linear, 1 = square, ... Range: [0x00¿0x04] /  Fade in ramp curve exponent.
        // 0=linear, 1=square, ... Range: [0x00¿0x04] 

    #define I3_RES_NBT_STAT_DIM_FADE_EXPO_T2_WERT                    (RXBUF_UCHAR(26))
    #define I3_RES_NBT_STAT_DIM_FADE_EXPO_T2_WERT_TYPE               unsigned char
        //  Fade out ramp curve exponent. 0 = linear, 1 = square, ... Range: [0x00¿0x04] /  Fade out ramp curve exponent.
        // 0=linear, 1=square, ... Range: [0x00¿0x04] 

    #define I3_RES_NBT_STAT_DIM_FILT_CHANGE_SENSITIVITY_WERT         (RXBUF_UINT(27))
    #define I3_RES_NBT_STAT_DIM_FILT_CHANGE_SENSITIVITY_WERT_TYPE    unsigned short
        // Adjusts the reaction on strong signal changes depending on the time the input value is stable. 0 = no
        // adjustment (old filter algorithm) 1-65535 = number of dim cycles the input value has to be stable Range:
        // [0x0000¿0xFFFF] / Adjusts the reaction on  strong signal changes depending on the time the input value is
        // stable. 0 = no adjustment (old filter algorithm) 1-65535 = number of dim cycles the input value has to be
        // stable Range: [0x0000¿0xFFFF]

    #define I3_RES_NBT_STAT_DIM_MIN_OFFSET_BRIG_WERT                 (RXBUF_UCHAR(29))
    #define I3_RES_NBT_STAT_DIM_MIN_OFFSET_BRIG_WERT_TYPE            unsigned char
        // Lower border of the brightness offset regulation range / Lower border of the brightness offset regulation
        // range

    #define I3_RES_NBT_STAT_ENDIANESS_ADAPTED_WERT                   (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_ENDIANESS_ADAPTED_WERT_TYPE              unsigned char
        // Indicates if the endianess of the coding data block has been adapted or not / Indicates if the endianess of
        // the coding data block has been adapted or not

    #define I3_RES_NBT_STAT_PADDING_WERT                             (RXBUF_UCHAR(31))
    #define I3_RES_NBT_STAT_PADDING_WERT_TYPE                        unsigned char
        // Padding for further use / Padding for further use

#define I3_PID_NBT_STATUS_CID_DETAIL_INFORMATION_EXTENDED            0x4011
        // Returns the extended logistic information of the currently connected CID / Returns the extended logistic
        // information of the currently connected CID

    #define I3_RES_NBT_STAT_CID_LOCATION_WERT_0X4011                 (RXBUF_UINT(0))
    #define I3_RES_NBT_STAT_CID_LOCATION_WERT_0X4011_TYPE            unsigned short
        // Value of the location in the car / Value of the location in the car

    // Can't yet generate code for STAT_PART_NR_DATA_0X4011 of type data[6] at offset 2. But we account for the 6 bytes
        // Value of the BMW part number. Byte 0¿1 = 0 Byte 2¿5 = BMW part number / Value of the BMW part number. Byte
        // 0¿1=0 Byte 2¿5=BMW Teilenummer

    #define I3_RES_NBT_STAT_SUPPLIER_NR_WERT                         (RXBUF_UCHAR(8))
    #define I3_RES_NBT_STAT_SUPPLIER_NR_WERT_TYPE                    unsigned char
        // Value of the supplier part number / Value of the supplier part number

    #define I3_RES_NBT_STAT_SERIAL_NUMBER_WERT_0X4011                (RXBUF_UINT32(9))
    #define I3_RES_NBT_STAT_SERIAL_NUMBER_WERT_0X4011_TYPE           unsigned long
        // Value of the serial number. / Value of the serial number.

    #define I3_RES_NBT_STAT_PRODUCTION_YEAR_WERT                     (RXBUF_UCHAR(13))
    #define I3_RES_NBT_STAT_PRODUCTION_YEAR_WERT_UNIT                'HEX'
    #define I3_RES_NBT_STAT_PRODUCTION_YEAR_WERT_TYPE                unsigned char
        // Year of production of the CID / Year of production of the CID

    #define I3_RES_NBT_STAT_PRODUCTION_MONTH_WERT                    (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_PRODUCTION_MONTH_WERT_UNIT               'HEX'
    #define I3_RES_NBT_STAT_PRODUCTION_MONTH_WERT_TYPE               unsigned char
        // Month of production of the CID / Month of production of the CID

    #define I3_RES_NBT_STAT_PRODUCTION_DAY_WERT                      (RXBUF_UCHAR(15))
    #define I3_RES_NBT_STAT_PRODUCTION_DAY_WERT_UNIT                 'HEX'
    #define I3_RES_NBT_STAT_PRODUCTION_DAY_WERT_TYPE                 unsigned char
        // Day of production of the CID / Day of production of the CID

    #define I3_RES_NBT_STAT_HARDWARE_VERSION_WERT                    (RXBUF_UINT(16))
    #define I3_RES_NBT_STAT_HARDWARE_VERSION_WERT_TYPE               unsigned short
        // Hardware version of the CID / Hardware version of the CID

    #define I3_RES_NBT_STAT_DISPLAY_VERSION_WERT                     (RXBUF_UINT(18))
    #define I3_RES_NBT_STAT_DISPLAY_VERSION_WERT_TYPE                unsigned short
        // Display version of the CID / Display version of the CID

    #define I3_RES_NBT_STAT_MECHANICAL_VERSION_WERT                  (RXBUF_UINT(20))
    #define I3_RES_NBT_STAT_MECHANICAL_VERSION_WERT_TYPE             unsigned short
        // Mechanical version of the CID / Mechanical version of the CID

    #define I3_RES_NBT_STAT_FLASH_DATA_VERSION_WERT                  (RXBUF_UINT(22))
    #define I3_RES_NBT_STAT_FLASH_DATA_VERSION_WERT_TYPE             unsigned short
        // Flash data version of the CID / Flash data version of the CID

// Skipping STEUERN_WLAN_AP_NETWORK on 0x4043 which takes arguments

#define I3_PID_NBT_WLAN_SIGNAL_TEST_AP                               0x4044
        // Statistics about WLAN connections in AP mode / Statistiken über WLAN Verbindungen im AP Modus

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_1_TEXT of type string[6], at offset 0. But we account for the 6 bytes
        // MAC address of the connected device 1 / MAC Adresse des verbundenen Gerät 1

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_1_WERT                 (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_1_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_1_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 1 / Fehlerrate (0-100%) des verbundenen Gerät 1

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_1_WERT             (RXBUF_UCHAR(7)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_1_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_1_WERT_TYPE        unsigned char
        // Power of the connected device 1 / Power des verbundenen Gerät 1

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_2_TEXT of type string[6], at offset 8. But we account for the 6 bytes
        // MAC address of the connected device 2 / MAC Adresse des verbundenen Gerät 2

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_2_WERT                 (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_2_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_2_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 2 / Fehlerrate (0-100%) des verbundenen Gerät 2

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_2_WERT             (RXBUF_UCHAR(15)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_2_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_2_WERT_TYPE        unsigned char
        // Power of the connected device 2 / Power des verbundenen Gerät 2

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_3_TEXT of type string[6], at offset 16. But we account for the 6 bytes
        // MAC address of the connected device 3 / MAC Adresse des verbundenen Gerät 3

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_3_WERT                 (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_3_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_3_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 3 / Fehlerrate (0-100%) des verbundenen Gerät 3

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_3_WERT             (RXBUF_UCHAR(23)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_3_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_3_WERT_TYPE        unsigned char
        // Power of the connected device 3 / Power des verbundenen Gerät 3

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_4_TEXT of type string[6], at offset 24. But we account for the 6 bytes
        // MAC address of the connected device 4 / MAC Adresse des verbundenen Gerät 4

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_4_WERT                 (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_4_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_4_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 4 / Fehlerrate (0-100%) des verbundenen Gerät 4

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_4_WERT             (RXBUF_UCHAR(31)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_4_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_4_WERT_TYPE        unsigned char
        // Power of the connected device 4 / Power des verbundenen Gerät 4

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_5_TEXT of type string[6], at offset 32. But we account for the 6 bytes
        // MAC address of the connected device 5 / MAC Adresse des verbundenen Gerät 5

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_5_WERT                 (RXBUF_UCHAR(38))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_5_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_5_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 5 / Fehlerrate (0-100%) des verbundenen Gerät 5

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_5_WERT             (RXBUF_UCHAR(39)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_5_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_5_WERT_TYPE        unsigned char
        // Power of the connected device 5 / Power des verbundenen Gerät 5

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_6_TEXT of type string[6], at offset 40. But we account for the 6 bytes
        // MAC address of the connected device 6 / MAC Adresse des verbundenen Gerät 6

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_6_WERT                 (RXBUF_UCHAR(46))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_6_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_6_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 6 / Fehlerrate (0-100%) des verbundenen Gerät 6

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_6_WERT             (RXBUF_UCHAR(47)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_6_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_6_WERT_TYPE        unsigned char
        // Power of the connected device 6 / Power des verbundenen Gerät 6

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_7_TEXT of type string[6], at offset 48. But we account for the 6 bytes
        // MAC address of the connected device 7 / MAC Adresse des verbundenen Gerät 7

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_7_WERT                 (RXBUF_UCHAR(54))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_7_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_7_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 7 / Fehlerrate (0-100%) des verbundenen Gerät 7

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_7_WERT             (RXBUF_UCHAR(55)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_7_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_7_WERT_TYPE        unsigned char
        // Power of the connected device 7 / Power des verbundenen Gerät 7

    // Can't yet generate code for STAT_WLAN_ADDRESS_AP_8_TEXT of type string[6], at offset 56. But we account for the 6 bytes
        // MAC address of the connected device 8 / MAC Adresse des verbundenen Gerät 8

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_8_WERT                 (RXBUF_UCHAR(62))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_8_WERT_UNIT            '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_AP_8_WERT_TYPE            unsigned char
        // Error rate (0-100%) of the connected device 8 / Fehlerrate (0-100%) des verbundenen Gerät 8

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_8_WERT             (RXBUF_UCHAR(63)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_8_WERT_UNIT        'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_AP_8_WERT_TYPE        unsigned char
        // Power of the connected device 8 / Power des verbundenen Gerät 8

#define I3_PID_NBT_WLAN_SIGNAL_TEST_WIFI_DIRECT                      0x4045
        // Statistics about WLAN connections in Wifi Direct mode / Statistiken über WLAN Verbindungen im Wifi Direct
        // Modus

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_1_TEXT of type string[6], at offset 0. But we account for the 6 bytes
        // MAC address of the connected device 1 / MAC Adresse des verbundenen Gerät 1

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_1_WERT             (RXBUF_UCHAR(6))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_1_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_1_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 1 / Fehlerrate (0-100%) des verbundenen Gerät 1

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_1_WERT         (RXBUF_UCHAR(7)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_1_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_1_WERT_TYPE    unsigned char
        // Power of the connected device 1 / Power des verbundenen Gerät 1

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_2_TEXT of type string[6], at offset 8. But we account for the 6 bytes
        // MAC address of the connected device 2 / MAC Adresse des verbundenen Gerät 2

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_2_WERT             (RXBUF_UCHAR(14))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_2_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_2_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 2 / Fehlerrate (0-100%) des verbundenen Gerät 2

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_2_WERT         (RXBUF_UCHAR(15)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_2_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_2_WERT_TYPE    unsigned char
        // Power of the connected device 2 / Power des verbundenen Gerät 2

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_3_TEXT of type string[6], at offset 16. But we account for the 6 bytes
        // MAC address of the connected device 3 / MAC Adresse des verbundenen Gerät 3

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_3_WERT             (RXBUF_UCHAR(22))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_3_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_3_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 3 / Fehlerrate (0-100%) des verbundenen Gerät 3

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_3_WERT         (RXBUF_UCHAR(23)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_3_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_3_WERT_TYPE    unsigned char
        // Power of the connected device 3 / Power des verbundenen Gerät 3

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_4_TEXT of type string[6], at offset 24. But we account for the 6 bytes
        // MAC address of the connected device 4 / MAC Adresse des verbundenen Gerät 4

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_4_WERT             (RXBUF_UCHAR(30))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_4_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_4_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 4 / Fehlerrate (0-100%) des verbundenen Gerät 4

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_4_WERT         (RXBUF_UCHAR(31)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_4_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_4_WERT_TYPE    unsigned char
        // Power of the connected device 4 / Power des verbundenen Gerät 4

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_5_TEXT of type string[6], at offset 32. But we account for the 6 bytes
        // MAC address of the connected device 5 / MAC Adresse des verbundenen Gerät 5

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_5_WERT             (RXBUF_UCHAR(38))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_5_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_5_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 5 / Fehlerrate (0-100%) des verbundenen Gerät 5

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_5_WERT         (RXBUF_UCHAR(39)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_5_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_5_WERT_TYPE    unsigned char
        // Power of the connected device 5 / Power des verbundenen Gerät 5

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_6_TEXT of type string[6], at offset 40. But we account for the 6 bytes
        // MAC address of the connected device 6 / MAC Adresse des verbundenen Gerät 6

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_6_WERT             (RXBUF_UCHAR(46))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_6_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_6_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 6 / Fehlerrate (0-100%) des verbundenen Gerät 6

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_6_WERT         (RXBUF_UCHAR(47)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_6_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_6_WERT_TYPE    unsigned char
        // Power of the connected device 6 / Power des verbundenen Gerät 6

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_7_TEXT of type string[6], at offset 48. But we account for the 6 bytes
        // MAC address of the connected device 7 / MAC Adresse des verbundenen Gerät 7

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_7_WERT             (RXBUF_UCHAR(54))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_7_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_7_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 7 / Fehlerrate (0-100%) des verbundenen Gerät 7

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_7_WERT         (RXBUF_UCHAR(55)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_7_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_7_WERT_TYPE    unsigned char
        // Power of the connected device 7 / Power des verbundenen Gerät 7

    // Can't yet generate code for STAT_WLAN_ADDRESS_DIRECT_8_TEXT of type string[6], at offset 56. But we account for the 6 bytes
        // MAC address of the connected device 8 / MAC Adresse des verbundenen Gerät 8

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_8_WERT             (RXBUF_UCHAR(62))
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_8_WERT_UNIT        '%'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DIRECT_8_WERT_TYPE        unsigned char
        // Error rate (0-100%) of the connected device 8 / Fehlerrate (0-100%) des verbundenen Gerät 8

    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_8_WERT         (RXBUF_UCHAR(63)-255.0)
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_8_WERT_UNIT    'dBm'
    #define I3_RES_NBT_STAT_WLAN_ERRORRATE_DBM_DIRECT_8_WERT_TYPE    unsigned char
        // Power of the connected device 8 / Power des verbundenen Gerät 8

// Skipping STEUERN_PERSISTENZ on 0xF003 which takes arguments

// Skipping TRACE on 0xF023 which takes arguments

#define I3_PID_NBT__STEUERN_DELETE_PERSISTENCY_JACINTO               0xFDE1
        // Erases the persistency on the Jacinto processor / Erases the persistency on the  Jacinto processor

#define I3_PID_NBT__STEUERN_DELETE_PERSISTENCY_INTEL_PLUS_SWT        0xFDE2
        // Erases the persistency including SWT on the Intel processor / Erases the persistency inclusive SWT on the 
        // Intel processor

#define I3_PID_NBT__STEUERN_DELETE_PERSISTENCY_INTEL                 0xFDE3
        // Erases the persistency on the Intel processor / Erases the persistency on the  Intel processor

#define I3_PID_NBT__STEUERN_BACKUP_PERSISTENCY                       0xFDE5
        // Create a backup of the persistence data from the HU / Backup der Persistenzdaten aus der HU erstellen

#define I3_PID_NBT__STEUERN_RESTORE_PERSISTENCY                      0xFDE6
        // Import persistence data from backup into the HU / Persistenzdaten aus Backup in die HU einspielen
