
//
// Warning: don't edit - generated by generate_ecu_code.pl processing ../dev/bdc.json: BDC 40: Body domain controller
// This generated code  makes it easier to process CANBUS messages from the BDC ecu in a BMW i3
//

#define I3_ECU_BDC_TX                                                0x06F140
#define I3_ECU_BDC_RX                                                0x0640F1

#define I3_PID_BDC_PIA_NR_AKTUELL                                    0x0F27
        // The PIA number currently sent by the CAS on the bus. Notes: - Assignment according to table
        // TAB_CAS_PIA_NUMMER. / Das Result aktuell vom CAS auf dem Bus gesendeten PIA Nummer. Hinweise: - Zuordnung
        // gemäß Tabelle TAB_CAS_PIA_NUMMER.

    #define I3_RES_BDC_STAT_PIA_NR_AKTUELL                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PIA_NR_AKTUELL_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_PIA_NR_AKTUELL_TYPE                      unsigned char
        // The PIA number currently sent by the CAS on the bus. Notes: - Assignment according to table
        // TAB_CAS_PIA_NUMMER. / Das Result aktuell vom CAS auf dem Bus gesendeten PIA Nummer. Hinweise: - Zuordnung
        // gemäß Tabelle TAB_CAS_PIA_NUMMER.

// Skipping SCHLUESSELDATEN_SERVICE on 0x1006 which takes arguments

// Skipping STEUERN_LIN_CODIERUNG on 0x100A which takes arguments

// Skipping SERVICE_SCHLUESSELDATEN_UPDATE on 0x4005 which takes arguments

// Skipping KLEMMENSTEUERUNG_KURZSCHLUSSABSCHALTUNG_RESET on 0xA084 which takes arguments

#define I3_PID_BDC_HOD_KALIBRIERUNG                                  0xA093
        // Calibration of hands off detection / Kalibrierung Hands Off Detection

#define I3_PID_BDC_BATTERIEVORSCHAEDIGUNGSHISTORIE                   0xA099
        // The job is used to delete the non-persistent data record and the frequency counter of the history memory for
        // the battery pre-damage history. / Der Job dient zum Löschen des nicht-persistenten Datensatzes und des
        // Häufigkeitszähler des Historienspeichers für die Batterievorschädigunshistorie.

#define I3_PID_BDC_WISCHER_LIN_EINLERNVORGANG                        0xA118
        // Controls the butterfly wiper teach-in process / Steuert den Einlernvorgang Schmetterlingswischer

    #define I3_RES_BDC_STAT_ROUTINE                                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ROUTINE_UNIT                             '0-n'
    #define I3_RES_BDC_STAT_ROUTINE_TYPE                             unsigned char
        // Execution status of the routine / Ausführungsstatus der Routine

    #define I3_RES_BDC_STAT_WISCHER_LIN_EINLERNVORGANG               (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_WISCHER_LIN_EINLERNVORGANG_UNIT          '0-n'
    #define I3_RES_BDC_STAT_WISCHER_LIN_EINLERNVORGANG_TYPE          unsigned char
        // Indicates the status of the teach-in process / Gibt den Status des Einlernvorgangs an

// Skipping FH_EINLERNEN on 0xA17B which takes arguments

// Skipping FH_VERFAHREN_HALL on 0xA17E which takes arguments

// Skipping FH_VERFAHREN_PROZENT on 0xA17F which takes arguments

// Skipping FH_VERFAHREN_SONDERFUNKTION on 0xA180 which takes arguments

// Skipping FH_TASTER_STEUERN on 0xA181 which takes arguments

// Skipping FH_VERFAHREN_SERVICE_POSITION on 0xA182 which takes arguments

// Skipping SCHLUESSELSUCHEN_HISTORIE on 0xA2DD which takes arguments

#define I3_PID_BDC_AUSSENSPIEGEL_SELBSTTEST                          0xA322
        // Automatic mirror check is triggered. If an error occurs during the self-test, an FS entry is made. /
        // Automatische Spiegelprüfung wird angestoßen. Wenn ein Fehler beim Selbsttest auftritt, dann erfolgt ein
        // FS-Eintrag.

    #define I3_RES_BDC_STAT_SELBSTTEST_NR                            (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_SELBSTTEST_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_SELBSTTEST_NR_TYPE                       char
        // Status mirror test / Status Spiegeltest

    #define I3_RES_BDC_STAT_SELBSTTEST_FC_NR                         (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_SELBSTTEST_FC_NR_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_SELBSTTEST_FC_NR_TYPE                    char
        // Internal error output / Ausgabe interner Fehler

#define I3_PID_BDC_REGENSENSOR_INITIALISIERUNG                       0xA3B7
        // Starts new adaptation of the RLS on the windshield. / Startet Neuadaption des RLS an der Windschutzscheibe.

    #define I3_RES_BDC_STAT_REGENSENSOR_INIT_VORGANG_NR              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_REGENSENSOR_INIT_VORGANG_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_REGENSENSOR_INIT_VORGANG_NR_TYPE         unsigned char
        // Status of rain sensor initialization process / Status Initialisierungsvorgang Regensensor

#define I3_PID_BDC_LEUCHTEN_KALTUEBERWACHUNG                         0xA530
        // Cold light monitoring by diagnosis. Errors found are entered in the error memory / Kaltlichtüberwachung per
        // Diagnose. Gefundene Fehler werden im Fehlerspeicher eingetragen

    #define I3_RES_BDC_STAT_KALTUEBERWACHUNG_NR                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KALTUEBERWACHUNG_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_KALTUEBERWACHUNG_NR_TYPE                 unsigned char
        // Result of the routine / Ergebnis der Routine

#define I3_PID_BDC_LEUCHTEN_WARMUEBERWACHUNG                         0xA531
        // Warm light monitoring by diagnosis. Errors found are entered in the error memory / Warmlichüberwachung per
        // Diagnose. Gefundene Fehler werden im Fehlerspeicher eingetragen

    #define I3_RES_BDC_STAT_WARMUEBERWACHUNG_NR                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_WARMUEBERWACHUNG_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_WARMUEBERWACHUNG_NR_TYPE                 unsigned char
        // Result of the routine / Ergebnis der Routine

#define I3_PID_BDC_HOEHENSTAENDE_OFFSET_RESET                        0xA532
        // Start reset altitude offset / Starten Reset Höhenstand Offset

    // Can't process STAT_GRADIENT_C0_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C0_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C1_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C1_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S0_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S0_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S1_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S1_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_BDC_GURTZUBRINGER_INIT                                0xA71A
        // Initlauf belt feeder / Initlauf Gurtzubringer

    #define I3_RES_BDC_STAT_ROUTINE_FA_NR                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ROUTINE_FA_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_ROUTINE_FA_NR_TYPE                       unsigned char
        // Current state of the routine driver / Aktueller Zustand der Routine Fahrer

    #define I3_RES_BDC_STAT_ROUTINE_BF_NR                            (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ROUTINE_BF_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_ROUTINE_BF_NR_TYPE                       unsigned char
        // Current state of the passenger routine / Aktueller Zustand der Routine Beifahrer

#define I3_PID_BDC_LIN_AUTOADRESSIERUNG                              0xA838
        // The LIN layering slaves are automatically addressed. / Es wird die Autoadressierung der LIN-Layering-Slaves
        // durchgeführt.

#define I3_PID_BDC_ELV_ANLIEFERZUSTAND                               0xAA73
        // resets the ELV to the delivery condition. (implemented from FEM) / setzt die ELV zurück auf den
        // Anlieferzustand. (ab FEM umgesetzt)

    #define I3_RES_BDC_STAT_ELV_ANLIEFERZUSTAND                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ELV_ANLIEFERZUSTAND_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_ELV_ANLIEFERZUSTAND_TYPE                 unsigned char
        // The result indicates whether resetting the ELV to the delivery state was successful or not 0: successful 1:
        // not successful / Das Result gibt an ob das Rücksetzen der ELV in den Anlieferzustand erfolgreich war oder
        // nicht 0: erfolgreich 1: nicht erfolgreich

// Skipping ELV_AKTION on 0xAA7C which takes arguments

#define I3_PID_BDC_SMO_SIMULATION_BEDIENUNG                          0xAA80
        // This job is used to simulate an operating request (opening the tailgate) by the SmartOpener control unit. The
        // entire chain of effects should be triggered from the receipt of the operating request at the ZSG to the
        // physical opening of the tailgate. In this simulation there is no communication between ZSG and SMO-SG, i.e.
        // the job can also be carried out if the SMO-SG is not installed / Dieser Job dient zur Simulation einer
        // Bedienungsanforderung (Öffnen der Heckklappe) durch das SmartOpener-Steuergerät. Hierbei soll die gesamte
        // Wirkkette vom Eingang der Bedienungsanforderung beim ZSG bis zum physikalischen Öffnen der Heckklappe
        // ausgelöst werden. Bei dieser Simulation erfolgt keine Kommunikation zwischen ZSG und SMO-SG, d.h. der Job kann
        // auch bei nicht verbautem SMO-SG durchgeführt werden

    #define I3_RES_BDC_STAT_AUSFUEHRUNGSSTATUS                       (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_AUSFUEHRUNGSSTATUS_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_AUSFUEHRUNGSSTATUS_TYPE                  unsigned char
        // The result indicates whether the requested action was carried out successfully or an error occurred / Das
        // Result gibt an, ob die angeforderte Aktion erfolgreich durchgeführt wurde oder ein Fehler aufgetreten ist

// Skipping ZV_KURZSCHLUSSABSCHALTUNG_RESET on 0xAA95 which takes arguments

// Skipping STEUERN_KL15_ABSCHALTUNG on 0xAC51 which takes arguments

// Skipping STEUERN_CA_KOMM_TEST on 0xAC53 which takes arguments

#define I3_PID_BDC_STEUERN_CA_BROADCAST                              0xAC54
        // Control of the key search via broadcast interior (antenna interior front + rear). All known keys in the
        // interior are determined (max. 8). Note: The results STAT_CA_SCHL _... x are filled up starting with x = 1 to x
        // = n (if n keys are found). The results STAT_CA_SCHL _... x for x> n are assigned 15 (no key found). / Steuern
        // der Schlüsselsuche per Broadcast Innenraum (Antennen Innenraum Vorne + Hinten). Alle im Innenraum befindlichen
        // bereits bekannten Schlüssel werden ermittelt (max. 8). Hinweis: Die Results STAT_CA_SCHL_...x werden beginnend
        // mit x=1 bis x=n (bei n gefunden Schlüsseln) aufgefüllt. Die Results STAT_CA_SCHL_...x für x > n werden mit 15
        // belegt (kein Schlüssel gefunden).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM1                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM1_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM1_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 1 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 1. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM2                             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM2_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM2_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 2 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 2. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM3                             (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM3_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM3_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 3 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 3. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM4                             (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM4_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM4_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 4 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 4. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM5                             (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM5_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM5_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 5 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 5. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM6                             (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM6_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM6_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 6 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 6. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM7                             (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM7_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM7_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 7. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 7. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

    #define I3_RES_BDC_STAT_CA_SCHL_NUM8                             (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_CA_SCHL_NUM8_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_CA_SCHL_NUM8_TYPE                        unsigned char
        // The result contains the key number (0-19) of the key no. 8 found. Notes: - 0-19 = number of the key in the
        // transponder table. - 255 = no further key found. - ATTENTION: not to be confused with CA number (0-7). / Das
        // Result enthält die Schlüssel-Nummer (0-19) des gefundenen Schlüssels Nr. 8. Hinweise: - 0-19= Nummer des
        // Schlüssels in der Transpondertabelle. - 255= kein weiterer Schlüssel gefunden. - ACHTUNG: nicht zu verwechseln
        // mit CA-Nummer (0-7).

#define I3_PID_BDC_STEUERN_CA_ANTENNEN_TEST                          0xAC55
        // Activate the CA antenna test. The internal antenna diagnosis is triggered and errors detected are entered in
        // the error memory accordingly. Notes: - Despite errors detected in the internal diagnosis, it may There is no
        // fault memory entry due to non-fulfilled boundary conditions (e.g. undervoltage). - Only antennas that are
        // coded are tested. / Ansteuern des CA-Antennen-Test. Dabei wird die interne Antennendiagnose angestossen und
        // erkannte Fehler werden entsprechend in Fehlerspeicher eintragen. Hinweise:  - Trotz erkannter Fehler in der
        // internen Diagnose kann u.U. kein Fehlerspeichereintrag aufgrund nichterfüllter Randbedingungen (z.B.
        // Unterspannung) vorhanden sein. - Es werden nur Antennen getestet die codiert sind.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_TEST_OKAY                    (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_TEST_OKAY_UNIT               '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_TEST_OKAY_TYPE               unsigned char
        // The result contains the result of the antenna test. Notes: - Allocation takes place according to table
        // TAB_CAS_CA_ANTENNEN_TEST. / Das Result enthält das Ergebnis des Antennentests. Hinweise: - Zuordnung erfolgt
        // gemäß Tabelle TAB_CAS_CA_ANTENNEN_TEST.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_1                  (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_1_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_1_TYPE             unsigned char
        // The result contains the installation location of the 1st antenna in the table. / Das Result enthält das
        // Verbauort der 1. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_2                  (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_2_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_2_TYPE             unsigned char
        // The result contains the installation location of the 2nd antenna in the table. / Das Result enthält das
        // Verbauort der 2. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_3                  (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_3_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_3_TYPE             unsigned char
        // The result contains the installation location of the 3rd antenna in the table. / Das Result enthält das
        // Verbauort der 3. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_4                  (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_4_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_4_TYPE             unsigned char
        // The result contains the location of the 4th antenna in the table. / Das Result enthält das Verbauort der 4.
        // Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_5                  (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_5_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_5_TYPE             unsigned char
        // The result contains the installation location of the 5th antenna in the table. / Das Result enthält das
        // Verbauort der 5. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_6                  (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_6_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_6_TYPE             unsigned char
        // The result contains the installation location of the 6th antenna in the table. / Das Result enthält das
        // Verbauort der 6. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_7                  (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_7_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_7_TYPE             unsigned char
        // The result contains the location of the 7th antenna in the table. / Das Result enthält das Verbauort der 7.
        // Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_8                  (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_8_UNIT             '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_VERBAUORT_8_TYPE             unsigned char
        // The result contains the installation location of the 8th antenna in the table. / Das Result enthält das
        // Verbauort der 8. Antenne der Tabelle.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_1                     (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_1_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_1_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_2                     (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_2_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_2_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_3                     (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_3_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_3_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_4                     (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_4_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_4_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_5                     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_5_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_5_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_6                     (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_6_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_6_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_7                     (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_7_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_7_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_8                     (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_8_UNIT                '0-n'
    #define I3_RES_BDC_STAT_CA_ANTENNEN_STATUS_8_TYPE                unsigned char
        // The result contains the result of the antenna test. / Das Result enthält das Ergebnis des Antennentests.

// Skipping STEUERN_ZV_MASTER on 0xAC57 which takes arguments

#define I3_PID_BDC_STEUERN_FBD_EMPFAENGER_INIT                       0xAC58
        // This job is used to control the FBD initialization. The following activities are controlled by the FEM: 1)
        // Check LIN message catalog and SW version 2) Check WUP in the FBD receiver and write if necessary Notes: - The
        // job is called via the standard job STEUERN_ROUTINE with argument 'ARG; STEUERN_FBD_EMPFAENGER_INIT; STR;
        // [arguments] '-Check the LIN message catalog as follows: Version of the FBD receiver> = Coding parameter
        // RC_LIN_NK_VERSION / Dieser Job dient zum Ansteuern der FBD-Initialisierung. Dabei werden folgende Aktivitäten
        // durch das FEM angesteuert: 1) Prüfen LIN-Nachrichtenkatalog und SW-Version 2) WUP im FBD-Empfänger prüfen und
        // ggf. schreiben  Hinweise:  -Aufruf des Jobs erfolgt über Standardjob STEUERN_ROUTINE mit Argument 'ARG;
        // STEUERN_FBD_EMPFAENGER_INIT;STR;[Argumente]' -Prüfung der LIN-Nachrichtenkatalog wie folgt:  Version vom
        // FBD-Empfänger  >= Codierparameter RC_LIN_NK_VERSION

    #define I3_RES_BDC_STAT_FBD_EMPFAENGER_INIT                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FBD_EMPFAENGER_INIT_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FBD_EMPFAENGER_INIT_TYPE                 unsigned char
        // Initialization status of the FBD receiver. Notes: - The assignment is made according to table
        // TAB_CAS_FBD_EMPFAENGER_INIT_STATUS. / Initialiserungsstatus des FBD Empfängers. Hinweise: - Die Zuordnung
        // erfolgt gemäß Tabelle TAB_CAS_FBD_EMPFAENGER_INIT_STATUS.

// Skipping STEUERN_TRANSPONDERSPULE on 0xAC5B which takes arguments

#define I3_PID_BDC_FBD_REICHWEITENMESSUNG                            0xAC5D
        // This job is used to activate and deactivate the FBD range measurement for (maximum) 30 minutes. After the
        // range measurement has started, a timer is started and the range measurement mode of the FBD is automatically
        // exited after 30 minutes. Alternatively, the range measurement can also be stopped using a diagnostic job. When
        // the range measurement is activated, each press of any IDG button is confirmed by two acknowledgment flashes of
        // all the vehicle's indicator lights - regardless of the terminal status. Notes: - Start of the range
        // measurement: The job is called via the standard job STEUERN_ROUTINE with the argument 'ARG;
        // STEUERN_FBD_REICHWEITENMESSUNG; STR '- Stop the range measurement: The job is called via the standard job
        // STEUERN_ROUTINE with the argument' ARG; STEUERN_FBD_REICHWEITENMESSUNG; STPR ' / Dieser Job dient zum
        // Aktiveren und Deaktivieren der FBD-Reichweitenmessung für (maximal) 30 Minuten.  Nach dem Start der
        // Reichweitenmessung wird ein Timer gestartet und nach 30 Minuten automatisch der Reichweitenmess-Modus des FBD
        // wieder verlassen. Alternativ lässt sich die Reichweitenmessung auch per Diagnosejob stoppen.  Bei aktivierter
        // Reichweitenmessung wird jede Betätigung einer beliebigen IDG-Taste durch 2-maliges Quittierungblinken aller
        // Blinkerleuchten des Fahrzeugs - unabhängig vom Klemmenzustand - bestätigt.  Hinweise:  - Start der
        // Reichweitenmessung: Aufruf des Jobs erfolgt über Standardjob STEUERN_ROUTINE mit Argument 'ARG;
        // STEUERN_FBD_REICHWEITENMESSUNG;STR' - Stoppen der Reichweitenmessung: Aufruf des Jobs erfolgt über Standardjob
        // STEUERN_ROUTINE mit Argument 'ARG; STEUERN_FBD_REICHWEITENMESSUNG;STPR'

    #define I3_RES_BDC_STAT_REICHWEITENMESSUNG_AKTIV                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_REICHWEITENMESSUNG_AKTIV_UNIT            '0/1'
    #define I3_RES_BDC_STAT_REICHWEITENMESSUNG_AKTIV_TYPE            unsigned char
        // The result contains the status of whether the FBD receiver is in range measurement mode: 0 = range measurement
        // activated 1 = range measurement deactivated / Das Result enthält den Status, ob der FBD-Empfänger im
        // Reichweitenmessmodus ist: 0 = Reichweitenmessung aktiviert 1 = Reichweitenmessung deaktiviert

#define I3_PID_BDC_FBD_FEHLER                                        0xAC5E
        // This job is used to read out the diagnosed errors, resets and the disturbance profile of the FBD receiver
        // (which channel was disturbed for how long). / Dieser Job dient zum Auslesen der diagnostizierten Fehler,
        // Resets und des Störprofils des FBD-Empfängers (Welcher Kanal wurde wie lange gestört).

    #define I3_RES_BDC_STAT_FEHLER_X                                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FEHLER_X_UNIT                            '0-n'
    #define I3_RES_BDC_STAT_FEHLER_X_TYPE                            unsigned char
        // The result contains the currently recognized errors in the FBD receiver. Note: For each error, a result is
        // generated dynamically from the bit-coded signal of the FBD receiver. / Das Result enthält die aktuell
        // erkannten Fehler  im FBD-Empfänger.  Hinweis: Pro Fehler wird ein Result dynamisch aus dem bitcodiertem Signal
        // des FBD-Empfängers generiert. 

    #define I3_RES_BDC_STAT_ANZAHL_RESETS_WERT                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ANZAHL_RESETS_WERT_TYPE                  unsigned char
        // The result contains the number of FBD receiver resets. 0-254 = number of resets 255 = invalid / unknown / Das
        // Result enthält die Anzahl an FBD-Empfänger Resets. 0-254 = Anzahl Resets 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE1_WERT     (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE1_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 1 in the corresponding period. Phase 1 = 1 sec
        // to 10 sec 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 1 im entsprechenden Zeitraum.  Phase 1 = 1 sek bis 10 sek 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE2_WERT     (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE2_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 1 in the corresponding period. Phase 2 = 10
        // sec to 1 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die
        // Anzahl der Funkstörung auf Kanal 1 im entsprechenden Zeitraum.  Phase 2 = 10 sek bis 1 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE3_WERT     (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE3_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 1 in the corresponding period. Phase 3 = 1 min
        // to 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 1 im entsprechenden Zeitraum.  Phase 3 = 1 min bis 10 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE4_WERT     (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL1_PHASE4_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 1 in the corresponding period. Phase 4 =
        // greater than 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält
        // die Anzahl der Funkstörung auf Kanal 1 im entsprechenden Zeitraum.  Phase 4 = grösser 10 min 0 - 6 = Anzahl
        // der Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE1_WERT     (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE1_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 2 in the corresponding period. Phase 1 = 1 sec
        // to 10 sec 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 2 im entsprechenden Zeitraum.  Phase 1 = 1 sek bis 10 sek 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE2_WERT     (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE2_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 2 in the corresponding period. Phase 2 = 10
        // sec to 1 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die
        // Anzahl der Funkstörung auf Kanal 2 im entsprechenden Zeitraum.  Phase 2 = 10 sek bis 1 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE3_WERT     (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE3_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 2 in the corresponding period. Phase 3 = 1 min
        // to 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 2 im entsprechenden Zeitraum.  Phase 3 = 1 min bis 10 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE4_WERT     (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL2_PHASE4_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 2 in the corresponding period. Phase 4 =
        // greater than 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält
        // die Anzahl der Funkstörung auf Kanal 2 im entsprechenden Zeitraum.  Phase 4 = grösser 10 min 0 - 6 = Anzahl
        // der Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE1_WERT     (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE1_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 3 in the corresponding period. Phase 1 = 1 sec
        // to 10 sec 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 3 im entsprechenden Zeitraum.  Phase 1 = 1 sek bis 10 sek 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE2_WERT     (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE2_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 3 in the corresponding period. Phase 2 = 10
        // sec to 1 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die
        // Anzahl der Funkstörung auf Kanal 3 im entsprechenden Zeitraum.  Phase 2 = 10 sek bis 1 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE3_WERT     (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE3_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 3 in the corresponding period. Phase 3 = 1 min
        // to 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält die Anzahl
        // der Funkstörung auf Kanal 3 im entsprechenden Zeitraum.  Phase 3 = 1 min bis 10 min 0 - 6 = Anzahl der
        // Funkstörungen 7 ... 255 = Ungültig/Unbekannt

    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE4_WERT     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_ANZAHL_STOERUNGEN_KANAL3_PHASE4_WERT_TYPE unsigned char
        // The result contains the number of radio interference on channel 3 in the corresponding period. Phase 4 =
        // greater than 10 min 0 - 6 = number of radio interference 7 ... 255 = invalid / unknown / Das Result enthält
        // die Anzahl der Funkstörung auf Kanal 3 im entsprechenden Zeitraum.  Phase 4 = grösser 10 min 0 - 6 = Anzahl
        // der Funkstörungen 7 ... 255 = Ungültig/Unbekannt

// Skipping FBD_KANALEINSTELLUNG on 0xAC5F which takes arguments

#define I3_PID_BDC_ELSV_TASTER                                       0xD070
        // Status button for electric steering column adjustment / Status Taster elektrische Lenksäulenverstellung

    #define I3_RES_BDC_STAT_TASTER_ELSV_HINTEN_EIN                   (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_ELSV_HINTEN_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_TASTER_ELSV_HINTEN_EIN_TYPE              char
        // 0: Push button eLSV backwards not actuated 1: Push button eLSV backwards actuated / 0: Taster eLSV nach hinten
        // nicht betätigt 1: Taster eLSV nach hinten betätigt

    #define I3_RES_BDC_STAT_TASTER_ELSV_OBEN_EIN                     (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_TASTER_ELSV_OBEN_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_TASTER_ELSV_OBEN_EIN_TYPE                char
        // 0: Push button eLSV upwards not actuated 1: Push button eLSV upwards actuated / 0: Taster eLSV nach oben nicht
        // betätigt 1: Taster eLSV nach oben betätigt

    #define I3_RES_BDC_STAT_TASTER_ELSV_UNTEN_EIN                    (RXBUF_SCHAR(2))
    #define I3_RES_BDC_STAT_TASTER_ELSV_UNTEN_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_TASTER_ELSV_UNTEN_EIN_TYPE               char
        // 0: Down button eLSV not pressed 1: eLSV button down pressed / 0: Taster eLSV nach unten nicht betätigt 1:
        // Taster eLSV nach unten betätigt

    #define I3_RES_BDC_STAT_TASTER_ELSV_VORNE_EIN                    (RXBUF_SCHAR(3))
    #define I3_RES_BDC_STAT_TASTER_ELSV_VORNE_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_TASTER_ELSV_VORNE_EIN_TYPE               char
        // 0: Push button eLSV forward not actuated 1: Push button eLSV forward actuated / 0: Taster eLSV nach vorne
        // nicht betätigt 1: Taster eLSV nach vorne betätigt

    #define I3_RES_BDC_STAT_TASTER_ELSV_NR                           (RXBUF_SCHAR(4))
    #define I3_RES_BDC_STAT_TASTER_ELSV_NR_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_TASTER_ELSV_NR_TYPE                      char
        // 0: eLSV button not pressed 1: eLSV button pressed backwards 2: eLSV button pressed upwards 3: eLSV button
        // pressed forward 4: eLSV button pressed downwards 5: signal invalid / 0: Taster eLSV nicht betätigt 1: Taster
        // eLSV nach hinten betätigt 2: Taster eLSV nach oben betätigt 3: Taster eLSV nach vorne betätigt 4: Taster eLSV
        // nach unten betätigt 5: Signal ungültig

// Skipping LENKRADHEIZUNG_LED on 0xD071 which takes arguments

// Skipping ELSV on 0xD072 which takes arguments

#define I3_PID_BDC_LENKRADHEIZUNG_TASTER                             0xD073
        // 0: steering wheel heating button not pressed; 1: Steering wheel heating button pressed / 0: Lenkradheizung
        // Taster nicht betätigt; 1: Lenkradheizung Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRADHEIZUNG_EIN                (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_LENKRADHEIZUNG_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_TASTER_LENKRADHEIZUNG_EIN_TYPE           char
        // 0: steering wheel heating button not pressed; 1: Steering wheel heating button pressed / 0: Lenkradheizung
        // Taster nicht betätigt; 1: Lenkradheizung Taster betätigt

// Skipping LENKRADHEIZUNG on 0xD074 which takes arguments

#define I3_PID_BDC_ELSV_STATEMACHINE                                 0xD07B
        // &lt;&lt;&lt; to be filled by the delivery person !!! &gt;&gt;&gt; / <<< vom Lieferanren zu befüllen !!! >>>

    #define I3_RES_BDC_STAT_STATEMACHINE                             (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_STATEMACHINE_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_STATEMACHINE_TYPE                        short
        // &lt;&lt;&lt; to be filled by the delivery person !!! &gt;&gt;&gt; / <<< vom Lieferanren zu befüllen !!! >>>

#define I3_PID_BDC_ELSV_VORHANDEN                                    0xD07F
        // Electric steering column adjustment 0: not available 1: available / Elektrische Lenksäulenverstellung 0: nicht
        // vorhanden 1: vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_ELSV_EIN                       (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_ELSV_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_ELSV_EIN_TYPE                  short
        // Electric steering column adjustment 0: not available 1: available / Elektrische Lenksäulenverstellung 0: nicht
        // vorhanden 1: vorhanden

#define I3_PID_BDC_LENKRAD_MFL                                       0xD081
        // Status of the MFL buttons / Status der MFL-Tasten

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_SET_EIN           (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_SET_EIN_UNIT      '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_SET_EIN_TYPE      char
        // 0: FGR button SET not pressed 1: FGR button SET pressed / 0: FGR-Taste SET nicht betätigt 1: FGR-Taste SET
        // betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_TIPPRAENDEL_NR    (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_TIPPRAENDEL_NR_UNIT '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_TIPPRAENDEL_NR_TYPE char
        // 0: No operation 1: Knurl on level 2 below 2: Knurl on level 1 below 3: Knurl on level 1 above 4: Knurl on
        // level 2 above 5: Invalid position / 0: Keine Betätigung  1: Rändel auf Stufe 2 unten 2: Rändel auf Stufe 1
        // unten 3: Rändel auf Stufe 1 oben 4: Rändel auf Stufe 2 oben 5: ungültige Position

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_RES_EIN           (RXBUF_SCHAR(2))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_RES_EIN_UNIT      '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_RES_EIN_TYPE      char
        // 0: FGR button RES (resume) not pressed 1: FGR button RES (resume) pressed / 0: FGR-Taste RES (Wiederaufnahme)
        // nicht betätigt  1: FGR-Taste RES (Wiederaufnahme) betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_UMSCHALT_TASTE_EIN    (RXBUF_SCHAR(3))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_UMSCHALT_TASTE_EIN_UNIT '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_UMSCHALT_TASTE_EIN_TYPE char
        // 0: ACC / DCC toggle key not pressed 1: ACC / DCC toggle key pressed / 0: Umschalttaste ACC/ DCC nicht betätigt
        // 1: Umschalttaste ACC/ DCC betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_ACC_ABSTAND_EIN       (RXBUF_SCHAR(4))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_ACC_ABSTAND_EIN_UNIT  '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_ACC_ABSTAND_EIN_TYPE  char
        // 0: FGR button ACC distance not pressed 1: FGR button ACC distance pressed / 0: FGR-Taste ACC-Abstand nicht
        // betätigt  1: FGR-Taste ACC-Abstand betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_OFF_EIN           (RXBUF_SCHAR(5))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_OFF_EIN_UNIT      '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_FGR_OFF_EIN_TYPE      char
        // 0: FGR button OFF not pressed 1: FGR button OFF pressed / 0: FGR-Taste OFF nicht betätigt 1: FGR-Taste OFF
        // betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_PUSH_TO_TALK_EIN      (RXBUF_SCHAR(6))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_PUSH_TO_TALK_EIN_UNIT '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_PUSH_TO_TALK_EIN_TYPE char
        // 0: Push to talk not activated 1: Push to talk activated / 0: Push to talk nicht betätigt  1: Push to talk
        // betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_MODE_TASTE            (RXBUF_SCHAR(7))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_MODE_TASTE_UNIT       '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_MODE_TASTE_TYPE       char
        // 0: Source / Mode button not pressed 1: Source / Mode button pressed / 0: Taste Source / Mode nicht betätigt 1:
        // Taste Source / Mode betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TIPPRAENDEL_BC_NR     (RXBUF_SCHAR(8))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TIPPRAENDEL_BC_NR_UNIT '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TIPPRAENDEL_BC_NR_TYPE char
        // 0: On-board computer (BC) tapping knurl not activated 1: On-board computer tapping knurl pressed 2: Tipping
        // knurl down 3: Typing knurl up 4: Invalid position / 0: Tipprändel Bordcomputer (BC) nicht betätigt 1:
        // Tipprändel Bordcomputer gedrückt  2: Tipprändel nach unten 3: Tipprändel nach oben 4: ungültige Position

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TEL_EIN               (RXBUF_SCHAR(9))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TEL_EIN_UNIT          '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_TEL_EIN_TYPE          char
        // 0: Telephone key not pressed 1: Telephone key pressed / 0: Telefontaste nicht betätigt  1: Telefontaste
        // betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_MINUS_EIN         (RXBUF_SCHAR(10))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_MINUS_EIN_UNIT    '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_MINUS_EIN_TYPE    char
        // 0: Volume / volume minus button not pressed 1: Volume / volume minus button pressed / 0: Taste
        // Volume/Lautstärke minus nicht betätigt 1: Taste Volume/Lautstärke minus betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_PLUS_EIN          (RXBUF_SCHAR(11))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_PLUS_EIN_UNIT     '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL_VOL_PLUS_EIN_TYPE     char
        // 0: Volume / volume plus button not pressed 1: Volume / volume plus button pressed / 0: Taste Volume/Lautstärke
        // plus nicht betätigt 1: Taste Volume/Lautstärke plus betätigt

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL1_NR                   (RXBUF_SCHAR(12))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL1_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL1_NR_TYPE              char
        // VS result 0: no action 1-n: see sub-table TAB_MFL_TASTEN1 Numbering is retained, even if one or more functions
        // are omitted. / VS-Result 0: keine Aktion 1-n: siehe Sub-Tabelle TAB_MFL_TASTEN1 Numerierung bleibt erhalten,
        // auch bei Entfall einer oder mehrerer Funktionen.

    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL2_NR                   (RXBUF_SCHAR(13))
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL2_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_TASTER_LENKRAD_MFL2_NR_TYPE              char
        // VS result 0: no action 1-n: see sub-table TAB_MFL_TASTEN2 Numbering is retained, even if one or more functions
        // are omitted. / VS-Result 0: keine Aktion 1-n: siehe Sub-Tabelle TAB_MFL_TASTEN2 Numerierung bleibt erhalten,
        // auch bei Entfall einer oder mehrerer Funktionen.

// Skipping ELSV_POS on 0xD084 which takes arguments

#define I3_PID_BDC_ELSV_POS_STATUS                                   0xD089
        // Current position and movement of the ELSV / Aktuelle Position und Bewegung der ELSV

    #define I3_RES_BDC_STAT_ELSV_POS_HOEHE_WERT                      (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_ELSV_POS_HOEHE_WERT_UNIT                 'Digit'
    #define I3_RES_BDC_STAT_ELSV_POS_HOEHE_WERT_TYPE                 unsigned short
        // Current real value vertical axis / Aktueller Realtivwert vertikale Achse

    #define I3_RES_BDC_STAT_ELSV_POS_LAENGE_WERT                     (RXBUF_UINT(2))
    #define I3_RES_BDC_STAT_ELSV_POS_LAENGE_WERT_UNIT                'Digit'
    #define I3_RES_BDC_STAT_ELSV_POS_LAENGE_WERT_TYPE                unsigned short
        // Current real value horizontal axis / Aktueller Realtivwert horizontale Achse

    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_OBEN_EIN                   (RXBUF_SCHAR(4))
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_OBEN_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_OBEN_EIN_TYPE              char
        // 0: ELSV does not move upwards 1: ELSV moves upwards / 0: ELSV fährt nicht nach oben  1: ELSV fährt nach oben

    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_UNTEN_EIN                  (RXBUF_SCHAR(5))
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_UNTEN_EIN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_UNTEN_EIN_TYPE             char
        // 0: ELSV does not move down 1: ELSV moves down / 0: ELSV fährt nicht nach unten  1: ELSV fährt nach unten

    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_EINGEFAHREN_EIN            (RXBUF_SCHAR(6))
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_EINGEFAHREN_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_EINGEFAHREN_EIN_TYPE       char
        // 0: ELSV does not retract (front) 1: ELSV retracts (front) / 0: ELSV fährt nicht ein (vorne)  1: ELSV fährt ein
        // (vorne)

    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_AUSGEFAHREN_EIN            (RXBUF_SCHAR(7))
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_AUSGEFAHREN_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_ELSV_BEWEGUNG_AUSGEFAHREN_EIN_TYPE       char
        // 0: ELSV does not extend (rear) 1: ELSV extends (rear) / 0: ELSV fährt nicht aus (hinten)  1: ELSV fährt nach
        // aus (hinten)

    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_OBEN_EIN                   (RXBUF_SCHAR(8))
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_OBEN_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_OBEN_EIN_TYPE              char
        // 0: ELSV in the travel range window 1: Upper soft stop reached / 0: ELSV im Verfahrbereichsfenster  1: Softstop
        // oben erreicht

    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_UNTEN_EIN                  (RXBUF_SCHAR(9))
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_UNTEN_EIN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_UNTEN_EIN_TYPE             char
        // 0: ELSV in the travel range window 1: Lower soft stop reached / 0: ELSV im Verfahrbereichsfenster  1: Softstop
        // unten erreicht

    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_EINGEFAHREN_EIN            (RXBUF_SCHAR(10))
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_EINGEFAHREN_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_EINGEFAHREN_EIN_TYPE       char
        // 0: ELSV in the travel range window 1: Soft stop retracted reached / 0: ELSV im Verfahrbereichsfenster  1:
        // Softstop eingefahren erreicht

    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_AUSGEFAHREN_EIN            (RXBUF_SCHAR(11))
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_AUSGEFAHREN_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_ELSV_SOFTSTOP_AUSGEFAHREN_EIN_TYPE       char
        // 0: ELSV in the travel range window 1: Soft stop extended reached / 0: ELSV im Verfahrbereichsfenster  1:
        // Softstop ausgefahren erreicht

    #define I3_RES_BDC_STAT_ELSV_NORMIERUNG                          (RXBUF_SCHAR(12))
    #define I3_RES_BDC_STAT_ELSV_NORMIERUNG_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_ELSV_NORMIERUNG_TYPE                     char
        // Status ELSV normalization see TAB_ELSV_NORMIERUNG_STATUS / Status ELSV Normierung siehe
        // TAB_ELSV_NORMIERUNG_STATUS

// Skipping TLC_ABGLEICH_MITTEN_FREQUENZ on 0xD08B which takes arguments

#define I3_PID_BDC_SMO_SPIELSCHUTZZAEHLER                            0xD096
        // The result indicates how often the SMO sensor has detected a trip without a valid key being detected in the
        // rear exterior / Das Result gibt an, wie oft der SMO-Sensor eine Auslösung erkannt hat, ohne das ein gültiger
        // Schlüssel im Heck-Aussenraum erkannt wurde

    #define I3_RES_BDC_STAT_SPIELSCHUTZZAEHLER_WERT                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SPIELSCHUTZZAEHLER_WERT_TYPE             unsigned char
        // The result indicates how often the SMO sensor has detected a trip without a valid key being detected in the
        // rear exterior / Das Result gibt an, wie oft der SMO-Sensor eine Auslösung erkannt hat, ohne das ein gültiger
        // Schlüssel im Heck-Aussenraum erkannt wurde

#define I3_PID_BDC_SMO_VARIANTE                                      0xD098
        // The result indicates which vehicle type the SMO has just set / Das Result gibt an, welchen Fahrzeugtyp das SMO
        // gerade eingestellt hat

    #define I3_RES_BDC_STAT_FAHRZEUGTYP                              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FAHRZEUGTYP_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_FAHRZEUGTYP_TYPE                         unsigned char
        // The result indicates which vehicle type the SMO has just set / Das Result gibt an, welchen Fahrzeugtyp das SMO
        // gerade eingestellt hat

#define I3_PID_BDC_PLOCK                                             0xD09D
        // The result contains the current status of the HW input PLOCK / Das Result enthält den aktuellen Zustand des
        // HW-Eingangs PLOCK

    #define I3_RES_BDC_STAT_PLOCK_AKTIV                              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PLOCK_AKTIV_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_PLOCK_AKTIV_TYPE                         unsigned char
        // The result contains the current status of the HW input PLOCK / Das Result enthält den aktuellen Zustand des
        // HW-Eingangs PLOCK

#define I3_PID_BDC_ZUSATZINFO_LICHT                                  0xD0F1
        // Detailed information on the energy requirement for light / Detailinformation zum Energiebedarf für Licht

    #define I3_RES_BDC_STAT_KM_STAND_1_WERT                          (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_KM_STAND_1_WERT_UNIT                     'km'
    #define I3_RES_BDC_STAT_KM_STAND_1_WERT_TYPE                     unsigned long
        // Mileage / Kilometerstand

    #define I3_RES_BDC_STAT_ENBN_AEP_STATUS_1_WERT                   (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_ENBN_AEP_STATUS_1_WERT_TYPE              unsigned char
        // Status energy power management / Status Energie Powermanagement

    #define I3_RES_BDC_STAT_U_BATT_ANFANG_1_WERT                     (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_U_BATT_ANFANG_1_WERT_UNIT                'V'
    #define I3_RES_BDC_STAT_U_BATT_ANFANG_1_WERT_TYPE                unsigned char
        // Supply voltage off 3 minutes after terminal 15 / Versorgungsspannung 3 Minuten nach Klemme 15 aus

    #define I3_RES_BDC_STAT_DAUER_1_WERT                             (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_DAUER_1_WERT_UNIT                        'min'
    #define I3_RES_BDC_STAT_DAUER_1_WERT_TYPE                        unsigned short
        // Duration of light activity while standing / Dauer der Lichtaktivität im Stand

    #define I3_RES_BDC_STAT_LICHT_1_NR                               (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_LICHT_1_NR_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_LICHT_1_NR_TYPE                          unsigned char
        // Involved lighting / Beteiligte Beleuchtung

    #define I3_RES_BDC_STAT_ABSCHALTUNG_LICHT_1_WERT                 (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_ABSCHALTUNG_LICHT_1_WERT_TYPE            unsigned char
        // Switch off light at SFG (it was switched off after 12 hours and the start capability limit was reached). /
        // Abschaltung Licht bei SFG (fand eine Abschaltung nach Ablauf 12h und Erreichen der Startfähigkeitsgrenze
        // statt).

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_1_WERT               (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_1_WERT_TYPE          unsigned char
        // Shutdown prevention reason light (reaching upper start capability limit and 12h timer not expired, driver's
        // door not opened, further tbd). / Abschaltverhinderergrund Licht (Erreichen obere Startfähigkeitsgrenze und 12h
        // Timer nicht abgelaufen, kein Öffnen der Fahrertür, weitere tbd).

    #define I3_RES_BDC_STAT_KLEMMENSTATUS_1_WERT                     (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_KLEMMENSTATUS_1_WERT_TYPE                unsigned char
        // Terminal status (at the time of entry / snapshot). / Klemmenstatus (zum Zeitpunkt des Eintrags/Snapshots).

    #define I3_RES_BDC_STAT_KM_STAND_2_WERT                          (RXBUF_UINT32(12))
    #define I3_RES_BDC_STAT_KM_STAND_2_WERT_UNIT                     'km'
    #define I3_RES_BDC_STAT_KM_STAND_2_WERT_TYPE                     unsigned long
        // Mileage / Kilometerstand

    #define I3_RES_BDC_STAT_ENBN_AEP_STATUS_2_WERT                   (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_ENBN_AEP_STATUS_2_WERT_TYPE              unsigned char
        // Status energy power management / Status Energie Powermanagement

    #define I3_RES_BDC_STAT_U_BATT_ANFANG_2_WERT                     (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_U_BATT_ANFANG_2_WERT_UNIT                'V'
    #define I3_RES_BDC_STAT_U_BATT_ANFANG_2_WERT_TYPE                unsigned char
        // Supply voltage off 3 minutes after terminal 15 / Versorgungsspannung 3 Minuten nach Klemme 15 aus

    #define I3_RES_BDC_STAT_DAUER_2_WERT                             (RXBUF_UINT(18))
    #define I3_RES_BDC_STAT_DAUER_2_WERT_UNIT                        'min'
    #define I3_RES_BDC_STAT_DAUER_2_WERT_TYPE                        unsigned short
        // Duration of light activity while standing / Dauer der Lichtaktivität im Stand

    #define I3_RES_BDC_STAT_LICHT_2_NR                               (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_LICHT_2_NR_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_LICHT_2_NR_TYPE                          unsigned char
        // Involved lighting / Beteiligte Beleuchtung

    #define I3_RES_BDC_STAT_ABSCHALTUNG_LICHT_2_WERT                 (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_ABSCHALTUNG_LICHT_2_WERT_TYPE            unsigned char
        // Switch off light at SFG (it was switched off after 12 hours and the start capability limit was reached). /
        // Abschaltung Licht bei SFG (fand eine Abschaltung nach Ablauf 12h und Erreichen der Startfähigkeitsgrenze
        // statt).

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_2_WERT               (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_2_WERT_TYPE          unsigned char
        // Shutdown prevention reason light (reaching upper start capability limit and 12h timer not expired, driver's
        // door not opened, further tbd). / Abschaltverhinderergrund Licht (Erreichen obere Startfähigkeitsgrenze und 12h
        // Timer nicht abgelaufen, kein Öffnen der Fahrertür, weitere tbd).

    #define I3_RES_BDC_STAT_KLEMMENSTATUS_2_WERT                     (RXBUF_UCHAR(23))
    #define I3_RES_BDC_STAT_KLEMMENSTATUS_2_WERT_TYPE                unsigned char
        // Terminal status (at the time of entry / snapshot). / Klemmenstatus (zum Zeitpunkt des Eintrags/Snapshots).

#define I3_PID_BDC_HANDBREMSE_KONTAKT                                0xD130
        // 0: handbrake released; 1: handbrake applied / 0: Handbremse gelöst; 1: Handbremse angezogen

    #define I3_RES_BDC_STAT_HANDBREMSE_KONTAKT_EIN                   (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HANDBREMSE_KONTAKT_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_HANDBREMSE_KONTAKT_EIN_TYPE              unsigned char
        // 0: handbrake released; 1: handbrake applied / 0: Handbremse gelöst; 1: Handbremse angezogen

#define I3_PID_BDC_SITZHEIZUNG_HINTEN_TASTER_LINKS                   0xD161
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_LINKS_EIN      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_LINKS_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_LINKS_EIN_TYPE unsigned char
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

#define I3_PID_BDC_SITZHEIZUNG_HINTEN_TASTER_RECHTS                  0xD162
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_RECHTS_EIN     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_RECHTS_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_TASTER_SITZHEIZUNG_HINTEN_RECHTS_EIN_TYPE unsigned char
        // 0 = button not pressed, 1 = button pressed / 0 = Taste nicht betätigt, 1 = Taste betätigt

#define I3_PID_BDC_FH_FA_TASTER                                      0xD188
        // Status FH button driver / Status FH-Taster Fahrer

    #define I3_RES_BDC_STAT_TASTER_FA_FA_NR                          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_FA_FA_NR_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_TASTER_FA_FA_NR_TYPE                     unsigned char
        // Driver's side (keypad): Driver button, see table / Fahrerseite (Tastenblock): Taster Fahrer siehe Tabelle

    #define I3_RES_BDC_STAT_TASTER_FA_BF_NR                          (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_TASTER_FA_BF_NR_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_TASTER_FA_BF_NR_TYPE                     unsigned char
        // Driver's side (keypad): See table for co-driver button / Fahrerseite (Tastenblock): Taster Beifahrer siehe
        // Tabelle

    #define I3_RES_BDC_STAT_TASTER_FA_FAH_NR                         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_TASTER_FA_FAH_NR_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_TASTER_FA_FAH_NR_TYPE                    unsigned char
        // Driver's side (keypad): Rear driver button, see table / Fahrerseite (Tastenblock): Taster Fahrer hinten siehe
        // Tabelle

    #define I3_RES_BDC_STAT_TASTER_FA_BFH_NR                         (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_TASTER_FA_BFH_NR_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_TASTER_FA_BFH_NR_TYPE                    unsigned char
        // Driver's side (keypad): Rear passenger button see table / Fahrerseite (Tastenblock): Taster Beifahrer hinten
        // siehe Tabelle

    #define I3_RES_BDC_STAT_TASTER_FA_HS_NR                          (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_TASTER_FA_HS_NR_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_TASTER_FA_HS_NR_TYPE                     unsigned char
        // Driver's side (keypad): button H rear window see table / Fahrerseite (Tastenblock): Taster HEckscheibe siehe
        // Tabelle

    #define I3_RES_BDC_STAT_TASTER_FA_RESERVE                        (RXBUF_UINT32(5))
    #define I3_RES_BDC_STAT_TASTER_FA_RESERVE_UNIT                   '0/1'
    #define I3_RES_BDC_STAT_TASTER_FA_RESERVE_TYPE                   unsigned long
        // reserve / Reserve

#define I3_PID_BDC_FH_BF_TASTER                                      0xD189
        // Passenger side (local button): Window lifter, passenger side 0: Button not pressed 1: Open window 2: Close
        // window 3: Open toll window 4: Close toll window / Beifahrerseite (lokaler Taster):  Fensterheber
        // Beifahrerseite 0: Taster nicht gedrueckt 1: Fenster oeffnen 2: Fenster schliessen 3: Fenster Maut oeffnen 4:
        // Fenster Maut schliessen

    #define I3_RES_BDC_STAT_TASTER_BF_BF_NR                          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_BF_BF_NR_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_TASTER_BF_BF_NR_TYPE                     unsigned char
        // Passenger side (local button): Window lifter, passenger side 0: Button not pressed 1: Open window 2: Close
        // window 3: Open toll window 4: Close toll window / Beifahrerseite (lokaler Taster):  Fensterheber
        // Beifahrerseite 0: Taster nicht gedrueckt 1: Fenster oeffnen 2: Fenster schliessen 3: Fenster Maut oeffnen 4:
        // Fenster Maut schliessen

#define I3_PID_BDC_FH_FAH_TASTER                                     0xD18A
        // Rear driver's side (local button): Windows rear driver's side 0: Button not pressed 1: Open window 2: Close
        // window 3: Open toll window 4: Close toll window / Fahrerseite hinten (lokaler Taster): Fensterheber
        // Fahrerseite hinten 0: Taster nicht gedrueckt 1: Fenster oeffnen 2: Fenster schliessen 3: Fenster Maut oeffnen
        // 4: Fenster Maut schliessen

    #define I3_RES_BDC_STAT_TASTER_FAH_FAH_NR                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_FAH_FAH_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_TASTER_FAH_FAH_NR_TYPE                   unsigned char
        // Rear driver's side (local button): Windows rear driver's side 0: Button not pressed 1: Open window 2: Close
        // window 3: Open toll window 4: Close toll window / Fahrerseite hinten (lokaler Taster): Fensterheber
        // Fahrerseite hinten 0: Taster nicht gedrueckt 1: Fenster oeffnen 2: Fenster schliessen 3: Fenster Maut oeffnen
        // 4: Fenster Maut schliessen

#define I3_PID_BDC_FH_BFH_TASTER                                     0xD18B
        // Rear passenger side (local button): Windows passenger side 0: button not pressed 1: open window 2: close
        // window 3: open window toll 4: close window toll / Beifahrerseite hinten (lokaler Taster):  Fensterheber
        // Beifahrerseite 0: Taster nicht gedrueckt 1: oeffnen Fenster  2: schliessen Fenster  3: oeffnen Fenster Maut 
        // 4: schliessen Fenster Maut

    #define I3_RES_BDC_STAT_TASTER_BFH_BFH_NR                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_BFH_BFH_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_TASTER_BFH_BFH_NR_TYPE                   unsigned char
        // Rear passenger side (local button): Windows passenger side 0: button not pressed 1: open window 2: close
        // window 3: open window toll 4: close window toll / Beifahrerseite hinten (lokaler Taster):  Fensterheber
        // Beifahrerseite 0: Taster nicht gedrueckt 1: oeffnen Fenster  2: schliessen Fenster  3: oeffnen Fenster Maut 
        // 4: schliessen Fenster Maut

// Skipping FH_KISI_TASTER on 0xD18C which takes arguments

#define I3_PID_BDC_FH_KISI_LED                                       0xD18D
        // 0: Status LED child lock off 1: Status LED child lock on / 0: Status LED Kindersicherung aus 1: Status LED
        // Kindersicherung ein

    #define I3_RES_BDC_STAT_KISI_LED_EIN                             (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_KISI_LED_EIN_UNIT                        '0/1'
    #define I3_RES_BDC_STAT_KISI_LED_EIN_TYPE                        short
        // 0: Status LED child lock off 1: Status LED child lock on / 0: Status LED Kindersicherung aus 1: Status LED
        // Kindersicherung ein

// Skipping FH_KURZHUB_AKTIV on 0xD18F which takes arguments

#define I3_PID_BDC_FH_FA_BEWEGUNG                                    0xD1A7
        // Power window movement status / Status der Fensterheberbewegung

    #define I3_RES_BDC_STAT_FH_FA_INIT_NR                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_FA_INIT_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_FH_FA_INIT_NR_TYPE                       unsigned char
        // 0x01 - INIT window regulator complete IO 0x02 - 0x08 One or more errors have occurred / 0x01 - Fensterheber
        // INIT vollständig IO 0x02 - 0x08 Ein oder mehrere Fehler sind aufgetreten

    #define I3_RES_BDC_STAT_FH_FA_BEWEGUNG_NR                        (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_FA_BEWEGUNG_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_FA_BEWEGUNG_NR_TYPE                   unsigned char
        // Current direction of movement / Aktuelle Bewegungsrichtung

    #define I3_RES_BDC_STAT_FH_FA_POSITION_NR                        (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_NR_TYPE                   unsigned char
        // Current position of the window regulator / Aktuelle Position des Fensterhebers

    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_WERT                 (RXBUF_SINT(3))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_WERT_UNIT            'Ink'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_WERT_TYPE            short
        // Current window regulator position in Hall pulses (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Hall-Pulsen (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_MAX_WERT             (RXBUF_SINT(5))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_MAX_WERT_UNIT        'Ink'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_HALL_MAX_WERT_TYPE        short
        // Maximum window regulator position in Hall pulses / Maximale Fensterheber-Position in Hall-Pulsen

    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_WERT                   (RXBUF_SINT(7))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_WERT_UNIT              'mm'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_WERT_TYPE              short
        // Current window regulator position in millimeters (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Millimeter (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_MAX_WERT               (RXBUF_SINT(9))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_MAX_WERT_UNIT          'mm'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_MM_MAX_WERT_TYPE          short
        // Maximum window regulator position in millimeters / Maximale Fensterheber-Position in Millimeter

    #define I3_RES_BDC_STAT_FH_FA_POSITION_PROZENT_WERT              (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_FH_FA_POSITION_PROZENT_WERT_UNIT         '%'
    #define I3_RES_BDC_STAT_FH_FA_POSITION_PROZENT_WERT_TYPE         unsigned char
        // % of the maximum travel / % vom maximalen Verfahrweg

    #define I3_RES_BDC_STAT_FH_FA_LAGE_NR                            (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_FA_LAGE_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_FH_FA_LAGE_NR_TYPE                       unsigned char
        // 0xFF: Window regulator value not used! / 0xFF: Wert von Fensterheber nicht belegt!

    #define I3_RES_BDC_STAT_FH_FA_ZUSTAND_TUER_NR                    (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_FA_ZUSTAND_TUER_NR_UNIT               '0-n'
    #define I3_RES_BDC_STAT_FH_FA_ZUSTAND_TUER_NR_TYPE               unsigned char
        // Status of the door contact that is available to the motor driver. / Status Türkontakt, der den Motortreiber
        // zur Verfügung steht.

    #define I3_RES_BDC_STAT_FH_FA_FREIGABE_AKTIV_NR                  (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_FA_FREIGABE_AKTIV_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FH_FA_FREIGABE_AKTIV_NR_TYPE             unsigned char
        // Current status release from the ZV master / Aktueller Zustand Freigabe vom ZV-Master

    #define I3_RES_BDC_STAT_FH_FA_PANIKMODUS_AKTIV_NR                (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_FA_PANIKMODUS_AKTIV_NR_UNIT           '0-n'
    #define I3_RES_BDC_STAT_FH_FA_PANIKMODUS_AKTIV_NR_TYPE           unsigned char
        // Status link enable panic mode / Status Verknüpfung Freigabe Panikmodus

    #define I3_RES_BDC_STAT_FH_FA_RESERVE                            (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_FA_RESERVE_UNIT                       '0/1'
    #define I3_RES_BDC_STAT_FH_FA_RESERVE_TYPE                       unsigned long
        // reserve / Reserve

#define I3_PID_BDC_FH_BF_BEWEGUNG                                    0xD1A8
        // Power window movement status / Status der Fensterheberbewegung

    #define I3_RES_BDC_STAT_FH_BF_INIT_NR                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_BF_INIT_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_FH_BF_INIT_NR_TYPE                       unsigned char
        // 0x01 - INIT window regulator complete IO 0x02 - 0x08 One or more errors have occurred / 0x01 - Fensterheber
        // INIT vollständig IO 0x02 - 0x08 Ein oder mehrere Fehler sind aufgetreten

    #define I3_RES_BDC_STAT_FH_BF_BEWEGUNG_NR                        (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_BF_BEWEGUNG_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_BF_BEWEGUNG_NR_TYPE                   unsigned char
        // Current direction of movement / Aktuelle Bewegungsrichtung

    #define I3_RES_BDC_STAT_FH_BF_POSITION_NR                        (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_NR_TYPE                   unsigned char
        // Current position of the window regulator / Aktuelle Position des Fensterhebers

    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_WERT                 (RXBUF_SINT(3))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_WERT_UNIT            'Ink'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_WERT_TYPE            short
        // Current window regulator position in Hall pulses (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Hall-Pulsen (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_MAX_WERT             (RXBUF_SINT(5))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_MAX_WERT_UNIT        'Ink'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_HALL_MAX_WERT_TYPE        short
        // Maximum window regulator position in Hall pulses / Maximale Fensterheber-Position in Hall-Pulsen

    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_WERT                   (RXBUF_SINT(7))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_WERT_UNIT              'mm'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_WERT_TYPE              short
        // Current window regulator position in millimeters (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Millimeter (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_MAX_WERT               (RXBUF_SINT(9))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_MAX_WERT_UNIT          'mm'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_MM_MAX_WERT_TYPE          short
        // Maximum window regulator position in millimeters / Maximale Fensterheber-Position in Millimeter

    #define I3_RES_BDC_STAT_FH_BF_POSITION_PROZENT_WERT              (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_FH_BF_POSITION_PROZENT_WERT_UNIT         '%'
    #define I3_RES_BDC_STAT_FH_BF_POSITION_PROZENT_WERT_TYPE         unsigned char
        // % of the maximum travel / % vom maximalen Verfahrweg

    #define I3_RES_BDC_STAT_FH_BF_LAGE_NR                            (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_BF_LAGE_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_FH_BF_LAGE_NR_TYPE                       unsigned char
        // 0xFF: Value from window regulator not used! / 0xFF: Wert vom Fensterheber nicht belegt!

    #define I3_RES_BDC_STAT_FH_BF_ZUSTAND_TUER_NR                    (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_BF_ZUSTAND_TUER_NR_UNIT               '0-n'
    #define I3_RES_BDC_STAT_FH_BF_ZUSTAND_TUER_NR_TYPE               unsigned char
        // Status of the door contact that is available to the motor driver. / Status Türkontakt, der den Motortreiber
        // zur Verfügung steht.

    #define I3_RES_BDC_STAT_FH_BF_FREIGABE_AKTIV_NR                  (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_BF_FREIGABE_AKTIV_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FH_BF_FREIGABE_AKTIV_NR_TYPE             unsigned char
        // Current status release from the ZV master / Aktueller Zustand Freigabe vom ZV-Master

    #define I3_RES_BDC_STAT_FH_BF_PANIKMODUS_AKTIV_NR                (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_BF_PANIKMODUS_AKTIV_NR_UNIT           '0-n'
    #define I3_RES_BDC_STAT_FH_BF_PANIKMODUS_AKTIV_NR_TYPE           unsigned char
        // Status link enable panic mode / Status Verknüpfung Freigabe Panikmodus

    #define I3_RES_BDC_STAT_FH_BF_RESERVE                            (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_BF_RESERVE_UNIT                       '0/1'
    #define I3_RES_BDC_STAT_FH_BF_RESERVE_TYPE                       unsigned long
        // reserve / Reserve

#define I3_PID_BDC_FH_FAH_BEWEGUNG                                   0xD1A9
        // Power window movement status / Status der Fensterheberbewegung

    #define I3_RES_BDC_STAT_FH_FAH_INIT_NR                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_FAH_INIT_NR_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_INIT_NR_TYPE                      unsigned char
        // 0x01 - INIT window regulator complete IO 0x02 - 0x08 One or more errors have occurred / 0x01 - Fensterheber
        // INIT vollständig IO 0x02 - 0x08 Ein oder mehrere Fehler sind aufgetreten

    #define I3_RES_BDC_STAT_FH_FAH_BEWEGUNG_NR                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_FAH_BEWEGUNG_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_BEWEGUNG_NR_TYPE                  unsigned char
        // Current direction of movement / Aktuelle Bewegungsrichtung

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_NR                       (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_NR_TYPE                  unsigned char
        // Current position of the window regulator / Aktuelle Position des Fensterhebers

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_WERT                (RXBUF_SINT(3))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_WERT_TYPE           short
        // Current window regulator position in Hall pulses (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Hall-Pulsen (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_MAX_WERT            (RXBUF_SINT(5))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_MAX_WERT_UNIT       'Ink'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_HALL_MAX_WERT_TYPE       short
        // Maximum window regulator position in Hall pulses / Maximale Fensterheber-Position in Hall-Pulsen

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_WERT                  (RXBUF_SINT(7))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_WERT_UNIT             'mm'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_WERT_TYPE             short
        // Current window regulator position in millimeters (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Millimeter (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_MAX_WERT              (RXBUF_SINT(9))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_MAX_WERT_UNIT         'mm'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_MM_MAX_WERT_TYPE         short
        // Maximum window regulator position in millimeters / Maximale Fensterheber-Position in Millimeter

    #define I3_RES_BDC_STAT_FH_FAH_POSITION_PROZENT_WERT             (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_PROZENT_WERT_UNIT        '%'
    #define I3_RES_BDC_STAT_FH_FAH_POSITION_PROZENT_WERT_TYPE        unsigned char
        // % of the maximum travel / % vom maximalen Verfahrweg

    #define I3_RES_BDC_STAT_FH_FAH_LAGE_NR                           (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_FAH_LAGE_NR_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_LAGE_NR_TYPE                      unsigned char
        // 0xFF: Value from window regulator not used! / 0xFF: Wert vom Fensterheber nicht belegt!

    #define I3_RES_BDC_STAT_FH_FAH_ZUSTAND_TUER_NR                   (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_FAH_ZUSTAND_TUER_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_ZUSTAND_TUER_NR_TYPE              unsigned char
        // Status of the door contact that is available to the motor driver. / Status Türkontakt, der den Motortreiber
        // zur Verfügung steht.

    #define I3_RES_BDC_STAT_FH_FAH_FREIGABE_AKTIV_NR                 (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_FAH_FREIGABE_AKTIV_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_FREIGABE_AKTIV_NR_TYPE            unsigned char
        // Current status release from the ZV master / Aktueller Zustand Freigabe vom ZV-Master

    #define I3_RES_BDC_STAT_FH_FAH_PANIKMODUS_AKTIV_NR               (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_FAH_PANIKMODUS_AKTIV_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_PANIKMODUS_AKTIV_NR_TYPE          unsigned char
        // Status link enable panic mode / Status Verknüpfung Freigabe Panikmodus

    #define I3_RES_BDC_STAT_FH_FAH_RESERVE                           (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_FAH_RESERVE_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_FH_FAH_RESERVE_TYPE                      unsigned long
        // reserve / Reserve

#define I3_PID_BDC_FH_BFH_BEWEGUNG                                   0xD1AA
        // Power window movement status / Status der Fensterheberbewegung

    #define I3_RES_BDC_STAT_FH_BFH_INIT_NR                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_BFH_INIT_NR_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_INIT_NR_TYPE                      unsigned char
        // 0x01 - INIT window regulator complete IO 0x02 - 0x08 One or more errors have occurred / 0x01 - Fensterheber
        // INIT vollständig IO 0x02 - 0x08 Ein oder mehrere Fehler sind aufgetreten

    #define I3_RES_BDC_STAT_FH_BFH_BEWEGUNG_NR                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_BFH_BEWEGUNG_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_BEWEGUNG_NR_TYPE                  unsigned char
        // Current direction of movement / Aktuelle Bewegungsrichtung

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_NR                       (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_NR_TYPE                  unsigned char
        // Current position of the window regulator / Aktuelle Position des Fensterhebers

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_WERT                (RXBUF_SINT(3))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_WERT_TYPE           short
        // Current window regulator position in Hall pulses (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Hall-Pulsen (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_MAX_WERT            (RXBUF_SINT(5))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_MAX_WERT_UNIT       'Ink'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_HALL_MAX_WERT_TYPE       short
        // Maximum window regulator position in Hall pulses / Maximale Fensterheber-Position in Hall-Pulsen

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_WERT                  (RXBUF_SINT(7))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_WERT_UNIT             'mm'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_WERT_TYPE             short
        // Current window regulator position in millimeters (0 means completely closed) / Aktuelle Fensterheber-Position
        // in Millimeter (0 bedeutet komplett geschlossen)

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_MAX_WERT              (RXBUF_SINT(9))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_MAX_WERT_UNIT         'mm'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_MM_MAX_WERT_TYPE         short
        // Maximum window regulator position in millimeters / Maximale Fensterheber-Position in Millimeter

    #define I3_RES_BDC_STAT_FH_BFH_POSITION_PROZENT_WERT             (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_PROZENT_WERT_UNIT        '%'
    #define I3_RES_BDC_STAT_FH_BFH_POSITION_PROZENT_WERT_TYPE        unsigned char
        // % of the maximum travel / % vom maximalen Verfahrweg

    #define I3_RES_BDC_STAT_FH_BFH_LAGE_NR                           (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_BFH_LAGE_NR_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_LAGE_NR_TYPE                      unsigned char
        // 0xFF: Value from window regulator not used! / 0xFF: Wert vom Fensterheber nicht belegt!

    #define I3_RES_BDC_STAT_FH_BFH_ZUSTAND_TUER_NR                   (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_BFH_ZUSTAND_TUER_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_ZUSTAND_TUER_NR_TYPE              unsigned char
        // Status of the door contact that is available to the motor driver. / Status Türkontakt, der den Motortreiber
        // zur Verfügung steht.

    #define I3_RES_BDC_STAT_FH_BFH_FREIGABE_AKTIV_NR                 (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_BFH_FREIGABE_AKTIV_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_FREIGABE_AKTIV_NR_TYPE            unsigned char
        // Current status release from the ZV master / Aktueller Zustand Freigabe vom ZV-Master

    #define I3_RES_BDC_STAT_FH_BFH_PANIKMODUS_AKTIV_NR               (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_BFH_PANIKMODUS_AKTIV_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_PANIKMODUS_AKTIV_NR_TYPE          unsigned char
        // Status link enable panic mode / Status Verknüpfung Freigabe Panikmodus

    #define I3_RES_BDC_STAT_FH_BFH_RESERVE                           (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_BFH_RESERVE_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_FH_BFH_RESERVE_TYPE                      unsigned long
        // reserve / Reserve

// Skipping FH_RELAIS_STEUERN on 0xD1AB which takes arguments

// Skipping FH_HALL_VERSORGUNG on 0xD1AC which takes arguments

#define I3_PID_BDC_FH_BFH_RELAIS                                     0xD1AD
        // Reads the current status of the control and readback lines. / Liest den aktuellen Status der Ansteuer- und
        // Rückleseleitungen.

    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_TYPE            unsigned char
        // Status control relay A 0: off 1: on / Status Ansteuerung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_TYPE                  unsigned char
        // Status of the read-back line relay A 0: off 1: on / Status Rückleseleitung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN                 (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_TYPE            unsigned char
        // Status control relay B 0: off 1: on / Status Ansteuerung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN                       (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_TYPE                  unsigned char
        // Status of the readback line relay B 0: off 1: on / Status Rückleseleitung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT                 (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_UNIT            'mV'
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_TYPE            unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT                 (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_UNIT            'mV'
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_TYPE            unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

#define I3_PID_BDC_FH_BFH_HALLSENSOREN                               0xD1AE
        // Reads out the current status of both Hall sensors / Liest den aktuellen Status beider Hallsensoren aus

    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_TYPE            unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN                    (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_TYPE               unsigned char
        // Switching status of Hall element A supply / Schaltzustand Hallelement A Versorgung

    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR                 (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR_TYPE            unsigned char
        // Hall element A fault condition / Fehlerzustand Hallelement A

    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN                 (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_TYPE            unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN                    (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_TYPE               unsigned char
        // Switching state of Hall element B supply / Schaltzustand Hallelement B Versorgung

    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR                 (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR_TYPE            unsigned char
        // Hall element error condition B / Fehlerzustand Hallelement B

#define I3_PID_BDC_FH_FAH_RELAIS                                     0xD1AF
        // Reads the current status of the control and readback lines. / Liest den aktuellen Status der Ansteuer- und
        // Rückleseleitungen.

    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1AF          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1AF_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1AF_TYPE     unsigned char
        // Status control relay A 0: off 1: on / Status Ansteuerung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1AF                (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1AF_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1AF_TYPE           unsigned char
        // Status of the read-back line relay A 0: off 1: on / Status Rückleseleitung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1AF          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1AF_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1AF_TYPE     unsigned char
        // Status control relay B 0: off 1: on / Status Ansteuerung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1AF                (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1AF_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1AF_TYPE           unsigned char
        // Status of the readback line relay B 0: off 1: on / Status Rückleseleitung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1AF          (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1AF_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1AF_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1AF          (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1AF_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1AF_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

#define I3_PID_BDC_FH_FAH_HALLSENSOREN                               0xD1B0
        // Status of hall sensors / Status Hallsensoren

    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B0          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B0_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B0_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B0             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B0_UNIT        '0/1'
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B0_TYPE        unsigned char
        // Switching status of Hall element A supply / Schaltzustand Hallelement A Versorgung

    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR_0XD1B0          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR_0XD1B0_UNIT     '0-n'
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSZTAND_NR_0XD1B0_TYPE     unsigned char
        // Hall element A fault condition / Fehlerzustand Hallelement A

    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B0          (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B0_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B0_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_1                  (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_1_UNIT             '0/1'
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_1_TYPE             unsigned char
        // Switching state of Hall element B supply / Schaltzustand Hallelement B Versorgung

    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR_0XD1B0          (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR_0XD1B0_UNIT     '0-n'
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSZTAND_NR_0XD1B0_TYPE     unsigned char
        // Hall element error condition B / Fehlerzustand Hallelement B

#define I3_PID_BDC_FH_FA_RELAIS                                      0xD1B1
        // Reads the current status of the control and readback lines. / Liest den aktuellen Status der Ansteuer- und
        // Rückleseleitungen.

    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B1          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B1_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B1_TYPE     unsigned char
        // Status control relay A 0: off 1: on / Status Ansteuerung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B1                (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B1_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B1_TYPE           unsigned char
        // Status of the read-back line relay A 0: off 1: on / Status Rückleseleitung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B1          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B1_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B1_TYPE     unsigned char
        // Status control relay B 0: off 1: on / Status Ansteuerung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B1                (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B1_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B1_TYPE           unsigned char
        // Status of the readback line relay B 0: off 1: on / Status Rückleseleitung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B1          (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B1_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B1_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B1          (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B1_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B1_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

#define I3_PID_BDC_FH_FA_HALLSENSOREN                                0xD1B2
        // Status of hall sensors / Status Hallsensoren

    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B2          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B2_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B2_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B2             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B2_UNIT        '0/1'
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B2_TYPE        unsigned char
        // Switching status of Hall element A supply / Schaltzustand Hallelement A Versorgung

    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR                  (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR_TYPE             unsigned char
        // Hall element A fault condition / Fehlerzustand Hallelement A

    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B2          (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B2_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B2_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B2             (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B2_UNIT        '0/1'
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B2_TYPE        unsigned char
        // Switching state of Hall element B supply / Schaltzustand Hallelement B Versorgung

    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR                  (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR_TYPE             unsigned char
        // Hall element error condition B / Fehlerzustand Hallelement B

#define I3_PID_BDC_FH_BF_RELAIS                                      0xD1B3
        // Reads the current status of the control and readback lines. / Liest den aktuellen Status der Ansteuer- und
        // Rückleseleitungen.

    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B3          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B3_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_ANSTEUERUNG_EIN_0XD1B3_TYPE     unsigned char
        // Status control relay A 0: off 1: on / Status Ansteuerung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B3                (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B3_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_A_RUECK_EIN_0XD1B3_TYPE           unsigned char
        // Status of the read-back line relay A 0: off 1: on / Status Rückleseleitung Relais A 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B3          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B3_UNIT     '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_ANSTEUERUNG_EIN_0XD1B3_TYPE     unsigned char
        // Status control relay B 0: off 1: on / Status Ansteuerung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B3                (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B3_UNIT           '0/1'
    #define I3_RES_BDC_STAT_RELAIS_B_RUECK_EIN_0XD1B3_TYPE           unsigned char
        // Status of the readback line relay B 0: off 1: on / Status Rückleseleitung Relais B 0: aus 1: ein

    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B3          (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B3_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_A_VERSORGUNG_WERT_0XD1B3_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B3          (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B3_UNIT     'mV'
    #define I3_RES_BDC_STAT_RELAIS_B_VERSORGUNG_WERT_0XD1B3_TYPE     unsigned short
        // The input voltage at the relay is measured. This is ultimately also the terminal voltage of the motor if you
        // neglect contact resistances on relays and plugs as well as line resistances. The function is carried out by
        // the BSW. / Es wird die Eingangsspannung am Relais gemessen. Dies ist dann letztendlich auch die
        // Klemmenspannung des Motors, wenn man Kontaktwiderstände an Relais und Stecker sowie Leitungswiderstände
        // vernachlässigt. Die Funktion wird von der BSW ausgeführt.

#define I3_PID_BDC_FH_BF_HALLSENSOREN                                0xD1B4
        // Status of hall sensors / Status Hallsensoren

    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B4          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B4_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_A_SCHALTZUSTAND_EIN_0XD1B4_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B4             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B4_UNIT        '0/1'
    #define I3_RES_BDC_STAT_HALL_A_VERSORGUNG_EIN_0XD1B4_TYPE        unsigned char
        // Switching status of Hall element A supply / Schaltzustand Hallelement A Versorgung

    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR_0XD1B4           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR_0XD1B4_UNIT      '0-n'
    #define I3_RES_BDC_STAT_HALL_A_FEHLERZUSTAND_NR_0XD1B4_TYPE      unsigned char
        // Hall element A fault condition / Fehlerzustand Hallelement A

    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B4          (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B4_UNIT     '0/1'
    #define I3_RES_BDC_STAT_HALL_B_SCHALTZUSTAND_EIN_0XD1B4_TYPE     unsigned char
        // The function is carried out by the BSW. 0: off 1: on / Die Funktion wird von der BSW ausgeführt. 0: aus 1: ein

    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B4             (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B4_UNIT        '0/1'
    #define I3_RES_BDC_STAT_HALL_B_VERSORGUNG_EIN_0XD1B4_TYPE        unsigned char
        // Switching state of Hall element B supply / Schaltzustand Hallelement B Versorgung

    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR_0XD1B4           (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR_0XD1B4_UNIT      '0-n'
    #define I3_RES_BDC_STAT_HALL_B_FEHLERZUSTAND_NR_0XD1B4_TYPE      unsigned char
        // Hall element error condition B / Fehlerzustand Hallelement B

#define I3_PID_BDC_FH_FA_STATUS_DETAIL                               0xD1B5
        // Reading out the detailed information / Auslesen der Detailinformationen

    #define I3_RES_BDC_STAT_FH_FA_KURZHUB_VORHANDEN                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_FA_KURZHUB_VORHANDEN_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FH_FA_KURZHUB_VORHANDEN_TYPE             unsigned char
        // Coding option status / Status der Kodieroption

    #define I3_RES_BDC_STAT_FH_FA_MOTORTEMPERATUR_NR                 (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_FA_MOTORTEMPERATUR_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_FH_FA_MOTORTEMPERATUR_NR_TYPE            unsigned char
        // Motor temperature status / Status Motortemperatur

    #define I3_RES_BDC_STAT_FH_FA_AUSSENTEMPERATUR_WERT              (RXBUF_UCHAR(2)/2.0f-40.0)
    #define I3_RES_BDC_STAT_FH_FA_AUSSENTEMPERATUR_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FH_FA_AUSSENTEMPERATUR_WERT_TYPE         float
        // Vehicle outside temperature (via CAN) / Fahrzeugaussentemperatur (über CAN)

    #define I3_RES_BDC_STAT_FH_FA_MT_LIEFERANT_NR                    (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FH_FA_MT_LIEFERANT_NR_UNIT               '0-n'
    #define I3_RES_BDC_STAT_FH_FA_MT_LIEFERANT_NR_TYPE               unsigned char
        // Supplier MT / Lieferant MT

    #define I3_RES_BDC_STAT_FH_FA_MT_SW_VERSION_WERT                 (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FH_FA_MT_SW_VERSION_WERT_UNIT            'HEX'
    #define I3_RES_BDC_STAT_FH_FA_MT_SW_VERSION_WERT_TYPE            unsigned long
        // SW version number / SW-Versionsnummer

    #define I3_RES_BDC_STAT_FH_FA_MT_PARAMETER_VERSION_WERT          (RXBUF_UINT32(8))
    #define I3_RES_BDC_STAT_FH_FA_MT_PARAMETER_VERSION_WERT_UNIT     'HEX'
    #define I3_RES_BDC_STAT_FH_FA_MT_PARAMETER_VERSION_WERT_TYPE     unsigned long
        // Description: Parameter version information / Beschreibung: Parameter-Versionsinfo

    #define I3_RES_BDC_STAT_FH_FA_EEPROM_PRUEFSUMME_NR               (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_FA_EEPROM_PRUEFSUMME_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_FH_FA_EEPROM_PRUEFSUMME_NR_TYPE          unsigned char
        // Status EEPROM checksum / Status EEPROM Checksumme

    #define I3_RES_BDC_STAT_FH_FA_STATUS_VON_FAH                     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_FA_STATUS_VON_FAH_UNIT                '0-n'
    #define I3_RES_BDC_STAT_FH_FA_STATUS_VON_FAH_TYPE                unsigned char
        // Status of other window same side / Status anderes Fenster gleiche Seite

    #define I3_RES_BDC_STAT_FH_FA_WACHHALTEN                         (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_FA_WACHHALTEN_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_FH_FA_WACHHALTEN_TYPE                    unsigned char
        // Status asleep prevention / Status Einschlaf-Verhinderung

    #define I3_RES_BDC_STAT_FH_FA_FZG_GESCHWINDIGKEIT_WERT           (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_FA_FZG_GESCHWINDIGKEIT_WERT_UNIT      'km/h'
    #define I3_RES_BDC_STAT_FH_FA_FZG_GESCHWINDIGKEIT_WERT_TYPE      unsigned char
        // Vehicle speed via CAN / Fahrzeuggeschwindigkeit über CAN

    #define I3_RES_BDC_STAT_FH_FA_RELATIVZEIT_WERT                   (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_FA_RELATIVZEIT_WERT_UNIT              's'
    #define I3_RES_BDC_STAT_FH_FA_RELATIVZEIT_WERT_TYPE              unsigned long
        // Current relative time (as received from the bus) / Aktuelle Relativ-Zeit (wie vom Bus erhalten)

    #define I3_RES_BDC_STAT_FH_FA_TEMPERATUR_UEBERWACHUNG            (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FH_FA_TEMPERATUR_UEBERWACHUNG_UNIT       '0/1'
    #define I3_RES_BDC_STAT_FH_FA_TEMPERATUR_UEBERWACHUNG_TYPE       unsigned char
        // Status activation temperature monitoring / Status Aktivierung Temperaturüberwachung

    #define I3_RES_BDC_STAT_FH_FA_EKS_AKTIV                          (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_FH_FA_EKS_AKTIV_UNIT                     '0/1'
    #define I3_RES_BDC_STAT_FH_FA_EKS_AKTIV_TYPE                     unsigned char
        // Status activation EKS / Status Aktivierung EKS

    #define I3_RES_BDC_STAT_FH_FA_SYSTEMTYP                          (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_FH_FA_SYSTEMTYP_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_FH_FA_SYSTEMTYP_TYPE                     unsigned char
        // Placeholder for live system / Platzhalter für Stromgeführtes System

    // Can't yet generate code for STAT_FH_FA_RESERVE_DATA of type data[3] at offset 23. But we account for the 3 bytes
        // Reserve for extensions / Reserve für Erweiterungen

#define I3_PID_BDC_FH_BF_STATUS_DETAIL                               0xD1B6
        // Reading out the detailed information / Auslesen der Detailinformationen

    #define I3_RES_BDC_STAT_FH_BF_KURZHUB_VORHANDEN                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_BF_KURZHUB_VORHANDEN_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FH_BF_KURZHUB_VORHANDEN_TYPE             unsigned char
        // Coding option status / Status der Kodieroption

    #define I3_RES_BDC_STAT_FH_BF_MOTORTEMPERATUR                    (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_BF_MOTORTEMPERATUR_UNIT               '0-n'
    #define I3_RES_BDC_STAT_FH_BF_MOTORTEMPERATUR_TYPE               unsigned char
        // Motor temperature status / Status Motortemperatur

    #define I3_RES_BDC_STAT_FH_BF_AUSSENTEMPERATUR_WERT              (RXBUF_UCHAR(2)/2.0f-40.0)
    #define I3_RES_BDC_STAT_FH_BF_AUSSENTEMPERATUR_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FH_BF_AUSSENTEMPERATUR_WERT_TYPE         float
        // Vehicle outside temperature (via CAN) / Fahrzeugaussentemperatur (über CAN)

    #define I3_RES_BDC_STAT_FH_BF_MT_LIEFERANT                       (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FH_BF_MT_LIEFERANT_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FH_BF_MT_LIEFERANT_TYPE                  unsigned char
        // Supplier MT / Lieferant MT

    #define I3_RES_BDC_STAT_FH_BF_MT_SW_VERSION_WERT                 (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FH_BF_MT_SW_VERSION_WERT_UNIT            'HEX'
    #define I3_RES_BDC_STAT_FH_BF_MT_SW_VERSION_WERT_TYPE            unsigned long
        // SW version number / SW-Versionsnummer

    #define I3_RES_BDC_STAT_FH_BF_MT_PARAMETER_VERSION_WERT          (RXBUF_UINT32(8))
    #define I3_RES_BDC_STAT_FH_BF_MT_PARAMETER_VERSION_WERT_UNIT     'HEX'
    #define I3_RES_BDC_STAT_FH_BF_MT_PARAMETER_VERSION_WERT_TYPE     unsigned long
        // Description: Parameter version information / Beschreibung: Parameter-Versionsinfo

    #define I3_RES_BDC_STAT_FH_BF_EEPROM_PRUEFSUMME_NR               (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_BF_EEPROM_PRUEFSUMME_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_FH_BF_EEPROM_PRUEFSUMME_NR_TYPE          unsigned char
        // Status EEPROM checksum / Status EEPROM Checksumme

    #define I3_RES_BDC_STAT_FH_BF_STATUS_VON_BFH                     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_BF_STATUS_VON_BFH_UNIT                '0-n'
    #define I3_RES_BDC_STAT_FH_BF_STATUS_VON_BFH_TYPE                unsigned char
        // Status of other window same side / Status anderes Fenster gleiche Seite

    #define I3_RES_BDC_STAT_FH_BF_WACHHALTEN                         (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_BF_WACHHALTEN_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_FH_BF_WACHHALTEN_TYPE                    unsigned char
        // Status asleep prevention / Status Einschlaf-Verhinderung

    #define I3_RES_BDC_STAT_FH_BF_FZG_GESCHWINDIGKEIT_WERT           (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_BF_FZG_GESCHWINDIGKEIT_WERT_UNIT      'km/h'
    #define I3_RES_BDC_STAT_FH_BF_FZG_GESCHWINDIGKEIT_WERT_TYPE      unsigned char
        // Vehicle speed via CAN / Fahrzeuggeschwindigkeit über CAN

    #define I3_RES_BDC_STAT_FH_BF_RELATIVZEIT_WERT                   (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_BF_RELATIVZEIT_WERT_UNIT              's'
    #define I3_RES_BDC_STAT_FH_BF_RELATIVZEIT_WERT_TYPE              unsigned long
        // Current relative time (as received from the bus) / Aktuelle Relativ-Zeit (wie vom Bus erhalten)

    #define I3_RES_BDC_STAT_FH_BF_TEMPERATUR_UEBERWACHUNG            (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FH_BF_TEMPERATUR_UEBERWACHUNG_UNIT       '0/1'
    #define I3_RES_BDC_STAT_FH_BF_TEMPERATUR_UEBERWACHUNG_TYPE       unsigned char
        // Status activation temperature monitoring / Status Aktivierung Temperaturüberwachung

    #define I3_RES_BDC_STAT_FH_BF_EKS_AKTIV                          (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_FH_BF_EKS_AKTIV_UNIT                     '0/1'
    #define I3_RES_BDC_STAT_FH_BF_EKS_AKTIV_TYPE                     unsigned char
        // Status activation EKS / Status Aktivierung EKS

    #define I3_RES_BDC_STAT_FH_BF_SYSTEMTYP                          (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_FH_BF_SYSTEMTYP_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_FH_BF_SYSTEMTYP_TYPE                     unsigned char
        // Placeholder for live system / Platzhalter für Stromgeführtes System

    // Can't yet generate code for STAT_FH_BF_RESERVE_WERT_DATA of type data[3] at offset 23. But we account for the 3 bytes
        // Reserve for extensions / Reserve für Erweiterungen

#define I3_PID_BDC_FH_FAH_STATUS_DETAIL                              0xD1B7
        // Reading out the detailed information / Auslesen der Detailinformationen

    #define I3_RES_BDC_STAT_FH_FAH_KURZHUB_VORHANDEN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_FAH_KURZHUB_VORHANDEN_UNIT            '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_KURZHUB_VORHANDEN_TYPE            unsigned char
        // Coding option status / Status der Kodieroption

    #define I3_RES_BDC_STAT_FH_FAH_MOTORTEMPERATUR                   (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_FAH_MOTORTEMPERATUR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_MOTORTEMPERATUR_TYPE              unsigned char
        // Motor temperature status / Status Motortemperatur

    #define I3_RES_BDC_STAT_FH_FAH_AUSSENTEMPERATUR_WERT             (RXBUF_UCHAR(2)/2.0f-40.0)
    #define I3_RES_BDC_STAT_FH_FAH_AUSSENTEMPERATUR_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FH_FAH_AUSSENTEMPERATUR_WERT_TYPE        float
        // Vehicle outside temperature (via CAN) / Fahrzeugaussentemperatur (über CAN)

    #define I3_RES_BDC_STAT_FH_FAH_MT_LIEFERANT                      (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FH_FAH_MT_LIEFERANT_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_MT_LIEFERANT_TYPE                 unsigned char
        // Supplier MT / Lieferant MT

    #define I3_RES_BDC_STAT_FH_FAH_MT_SW_VERSION_WERT                (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FH_FAH_MT_SW_VERSION_WERT_UNIT           'HEX'
    #define I3_RES_BDC_STAT_FH_FAH_MT_SW_VERSION_WERT_TYPE           unsigned long
        // SW version number / SW-Versionsnummer

    #define I3_RES_BDC_STAT_FH_FAH_MT_PARAMETER_VERSION_WERT         (RXBUF_UINT32(8))
    #define I3_RES_BDC_STAT_FH_FAH_MT_PARAMETER_VERSION_WERT_UNIT    'HEX'
    #define I3_RES_BDC_STAT_FH_FAH_MT_PARAMETER_VERSION_WERT_TYPE    unsigned long
        // Description: Parameter version information / Beschreibung: Parameter-Versionsinfo

    #define I3_RES_BDC_STAT_FH_FAH_EEPROM_PRUEFSUMME_NR              (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_FAH_EEPROM_PRUEFSUMME_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_EEPROM_PRUEFSUMME_NR_TYPE         unsigned char
        // Status EEPROM checksum / Status EEPROM Checksumme

    #define I3_RES_BDC_STAT_FH_FAH_STATUS_VON_FA                     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_FAH_STATUS_VON_FA_UNIT                '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_STATUS_VON_FA_TYPE                unsigned char
        // Status of other window same side / Status anderes Fenster gleiche Seite

    #define I3_RES_BDC_STAT_FH_FAH_WACHHALTEN                        (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_FAH_WACHHALTEN_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_WACHHALTEN_TYPE                   unsigned char
        // Status asleep prevention / Status Einschlaf-Verhinderung

    #define I3_RES_BDC_STAT_FH_FAH_FZG_GESCHWINDIGKEIT_WERT          (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_FAH_FZG_GESCHWINDIGKEIT_WERT_UNIT     'km/h'
    #define I3_RES_BDC_STAT_FH_FAH_FZG_GESCHWINDIGKEIT_WERT_TYPE     unsigned char
        // Vehicle speed via CAN / Fahrzeuggeschwindigkeit über CAN

    #define I3_RES_BDC_STAT_FH_FAH_RELATIVZEIT_WERT                  (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_FAH_RELATIVZEIT_WERT_UNIT             's'
    #define I3_RES_BDC_STAT_FH_FAH_RELATIVZEIT_WERT_TYPE             unsigned long
        // Current relative time (as received from the bus) / Aktuelle Relativ-Zeit (wie vom Bus erhalten)

    #define I3_RES_BDC_STAT_FH_FAH_TEMPERATUR_UEBERWACHUNG           (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FH_FAH_TEMPERATUR_UEBERWACHUNG_UNIT      '0/1'
    #define I3_RES_BDC_STAT_FH_FAH_TEMPERATUR_UEBERWACHUNG_TYPE      unsigned char
        // Status activation temperature monitoring / Status Aktivierung Temperaturüberwachung

    #define I3_RES_BDC_STAT_FH_FAH_EKS_AKTIV                         (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_FH_FAH_EKS_AKTIV_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_FH_FAH_EKS_AKTIV_TYPE                    unsigned char
        // Status activation EKS / Status Aktivierung EKS

    #define I3_RES_BDC_STAT_FH_FAH_SYSTEMTYP                         (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_FH_FAH_SYSTEMTYP_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_FH_FAH_SYSTEMTYP_TYPE                    unsigned char
        // Placeholder for live system / Platzhalter für Stromgeführtes System

    // Can't yet generate code for STAT_FH_FAH_RESERVE_DATA of type data[3] at offset 23. But we account for the 3 bytes
        // Reserve for extensions / Reserve für Erweiterungen

#define I3_PID_BDC_FH_BFH_STATUS_DETAIL                              0xD1B8
        // Reading out the detailed information / Auslesen der Detailinformationen

    #define I3_RES_BDC_STAT_FH_BFH_KURZHUB_VORHANDEN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FH_BFH_KURZHUB_VORHANDEN_UNIT            '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_KURZHUB_VORHANDEN_TYPE            unsigned char
        // Coding option status / Status der Kodieroption

    #define I3_RES_BDC_STAT_FH_BFH_MOTORTEMPERATUR                   (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FH_BFH_MOTORTEMPERATUR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_MOTORTEMPERATUR_TYPE              unsigned char
        // Motor temperature status / Status Motortemperatur

    #define I3_RES_BDC_STAT_FH_BFH_AUSSENTEMPERATUR_WERT             (RXBUF_UCHAR(2)/2.0f-40.0)
    #define I3_RES_BDC_STAT_FH_BFH_AUSSENTEMPERATUR_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FH_BFH_AUSSENTEMPERATUR_WERT_TYPE        float
        // Vehicle outside temperature (via CAN) / Fahrzeugaussentemperatur (über CAN)

    #define I3_RES_BDC_STAT_FH_BFH_MT_LIEFERANT                      (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FH_BFH_MT_LIEFERANT_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_MT_LIEFERANT_TYPE                 unsigned char
        // Supplier MT / Lieferant MT

    #define I3_RES_BDC_STAT_FH_BFH_MT_SW_VERSION_WERT                (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FH_BFH_MT_SW_VERSION_WERT_UNIT           'HEX'
    #define I3_RES_BDC_STAT_FH_BFH_MT_SW_VERSION_WERT_TYPE           unsigned long
        // SW version number / SW-Versionsnummer

    #define I3_RES_BDC_STAT_FH_BFH_MT_PARAMETER_VERSION_WERT         (RXBUF_UINT32(8))
    #define I3_RES_BDC_STAT_FH_BFH_MT_PARAMETER_VERSION_WERT_UNIT    'HEX'
    #define I3_RES_BDC_STAT_FH_BFH_MT_PARAMETER_VERSION_WERT_TYPE    unsigned long
        // Description: Parameter version information / Beschreibung: Parameter-Versionsinfo

    #define I3_RES_BDC_STAT_FH_BFH_EEPROM_PRUEFSUMME_NR              (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FH_BFH_EEPROM_PRUEFSUMME_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_EEPROM_PRUEFSUMME_NR_TYPE         unsigned char
        // Status EEPROM checksum / Status EEPROM Checksumme

    #define I3_RES_BDC_STAT_FH_BFH_STATUS_VON_BF                     (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_FH_BFH_STATUS_VON_BF_UNIT                '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_STATUS_VON_BF_TYPE                unsigned char
        // Status of other window same side / Status anderes Fenster gleiche Seite

    #define I3_RES_BDC_STAT_FH_BFH_WACHHALTEN                        (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_FH_BFH_WACHHALTEN_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_WACHHALTEN_TYPE                   unsigned char
        // Status asleep prevention / Status Einschlaf-Verhinderung

    #define I3_RES_BDC_STAT_FH_BFH_FZG_GESCHWINDIGKEIT_WERT          (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_FH_BFH_FZG_GESCHWINDIGKEIT_WERT_UNIT     'km/h'
    #define I3_RES_BDC_STAT_FH_BFH_FZG_GESCHWINDIGKEIT_WERT_TYPE     unsigned char
        // Vehicle speed via CAN / Fahrzeuggeschwindigkeit über CAN

    #define I3_RES_BDC_STAT_FH_BFH_RELATIVZEIT_WERT                  (RXBUF_UINT32(16))
    #define I3_RES_BDC_STAT_FH_BFH_RELATIVZEIT_WERT_UNIT             's'
    #define I3_RES_BDC_STAT_FH_BFH_RELATIVZEIT_WERT_TYPE             unsigned long
        // Current relative time (as received from the bus) / Aktuelle Relativ-Zeit (wie vom Bus erhalten)

    #define I3_RES_BDC_STAT_FH_BFH_TEMPERATUR_UEBERWACHUNG           (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FH_BFH_TEMPERATUR_UEBERWACHUNG_UNIT      '0/1'
    #define I3_RES_BDC_STAT_FH_BFH_TEMPERATUR_UEBERWACHUNG_TYPE      unsigned char
        // Status activation temperature monitoring / Status Aktivierung Temperaturüberwachung

    #define I3_RES_BDC_STAT_FH_BFH_EKS_AKTIV                         (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_FH_BFH_EKS_AKTIV_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_FH_BFH_EKS_AKTIV_TYPE                    unsigned char
        // Status activation EKS / Status Aktivierung EKS

    #define I3_RES_BDC_STAT_FH_BFH_SYSTEMTYP                         (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_FH_BFH_SYSTEMTYP_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_FH_BFH_SYSTEMTYP_TYPE                    unsigned char
        // Placeholder for live system / Platzhalter für Stromgeführtes System

    // Can't yet generate code for STAT_FH_BFH_RESERVE_DATA of type data[3] at offset 23. But we account for the 3 bytes
        // Reserve for extensions / Reserve für Erweiterungen

// Skipping FH_TASTER_ALLE_FH on 0xD1C2 which takes arguments

#define I3_PID_BDC_STATUS_SITZEXT_TASTEN                             0xD1CA
        // Read out status of seat memory on driver's side button / Auslesen status sitzmemory Fahrerseite Taster

    #define I3_RES_BDC_STAT_SITZMEMORY_FA                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZMEMORY_FA_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_SITZMEMORY_FA_TYPE                       unsigned char
        // Transmitted signal value for memory button / Übermittelter Signalwert für Memory-Taster

    #define I3_RES_BDC_STAT_SITZMEMORY_BF                            (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_SITZMEMORY_BF_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_SITZMEMORY_BF_TYPE                       unsigned char
        // Transmitted signal value for memory button / Übermittelter Signalwert für Memory-Taster

    #define I3_RES_BDC_STAT_SITZMEMORY_FAH                           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_SITZMEMORY_FAH_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_SITZMEMORY_FAH_TYPE                      unsigned char
        // Transmitted signal value for memory button / Übermittelter Signalwert für Memory-Taster

    #define I3_RES_BDC_STAT_SITZMEMORY_BFH                           (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SITZMEMORY_BFH_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_SITZMEMORY_BFH_TYPE                      unsigned char
        // Transmitted signal value for memory button / Übermittelter Signalwert für Memory-Taster

    #define I3_RES_BDC_STAT_MASSAGE_FA                               (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_MASSAGE_FA_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_MASSAGE_FA_TYPE                          unsigned char
        // Transmitted signal value for MASSAGE button / Übermittelter Signalwert für MASSAGE-Taster

    #define I3_RES_BDC_STAT_MASSAGE_BF                               (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_MASSAGE_BF_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_MASSAGE_BF_TYPE                          unsigned char
        // Transmitted signal value for MASSAGE button / Übermittelter Signalwert für MASSAGE-Taster

    #define I3_RES_BDC_STAT_MASSAGE_FAH                              (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_MASSAGE_FAH_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_MASSAGE_FAH_TYPE                         unsigned char
        // Transmitted signal value for MASSAGE button / Übermittelter Signalwert für MASSAGE-Taster

    #define I3_RES_BDC_STAT_MASSAGE_BFH                              (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_MASSAGE_BFH_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_MASSAGE_BFH_TYPE                         unsigned char
        // Transmitted signal value for MASSAGE button / Übermittelter Signalwert für MASSAGE-Taster

    #define I3_RES_BDC_STAT_FERNBEDIENUNG_FA                         (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_FERNBEDIENUNG_FA_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_FERNBEDIENUNG_FA_TYPE                    unsigned char
        // Signal value for remote control button button on driver's door / Signalwert für Fernbedienungstaste-Taste an
        // der Fahrertür

    #define I3_RES_BDC_STAT_RESET_TASTE_BF                           (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_RESET_TASTE_BF_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_RESET_TASTE_BF_TYPE                      unsigned char
        // Signal value for reset button on BFT / Signalwert für Reset-Taste an BFT

    #define I3_RES_BDC_STAT_SCHLAFPOSITION_TASTE_BFTH                (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_SCHLAFPOSITION_TASTE_BFTH_UNIT           '0-n'
    #define I3_RES_BDC_STAT_SCHLAFPOSITION_TASTE_BFTH_TYPE           unsigned char
        // Signal value of the sleeping position button on the rear passenger door / Signalwert der Taste Schlafposition
        // an der Beifahrertür Fond

    #define I3_RES_BDC_STAT_SITZPOSITION_TASTE_BFTH                  (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_SITZPOSITION_TASTE_BFTH_UNIT             '0-n'
    #define I3_RES_BDC_STAT_SITZPOSITION_TASTE_BFTH_TYPE             unsigned char
        // Signal value for remote control button button on driver's door / Signalwert für Fernbedienungstaste-Taste an
        // der Fahrertür

#define I3_PID_BDC_STATUS_SITZEXT_VORHANDEN                          0xD1CB
        // Read out whether SitzExt-SB is available / Auslesen ob SitzExt-SB vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_VORNE                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_VORNE_UNIT             '0-n'
    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_VORNE_TYPE             unsigned char
        // SB_SitzExt available for FA, BF / SB_SitzExt vorhanden für FA,BF 

    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_HINTEN                 (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_HINTEN_UNIT            '0-n'
    #define I3_RES_BDC_STAT_VORHANDEN_SITZEXT_HINTEN_TYPE            unsigned char
        // SB_SitzExt available for FA, BF / SB_SitzExt vorhanden für FA,BF 

// Skipping STEUERN_SITZEXT_LED on 0xD1CC which takes arguments

// Skipping HECKSPOILER_TASTER on 0xD220 which takes arguments

#define I3_PID_BDC_TANK_FUELLSTAND_LINKS                             0xD258
        // Returns the level value of the left tank sensor. The work area and IO area must be filled by the developer. /
        // Rückgabe des Füllstandwerts des linken Tanksensor. Arbeitsbereich und IO-Bereich muss vom Entwickler befüllt
        // werden.

    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_LI_WERT                  (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_LI_WERT_UNIT             'Ohm'
    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_LI_WERT_TYPE             unsigned short
        // Returns the level value of the left tank sensor. The work area and IO area must be filled by the developer. /
        // Rückgabe des Füllstandwerts des linken Tanksensor. Arbeitsbereich und IO-Bereich muss vom Entwickler befüllt
        // werden.

#define I3_PID_BDC_TANK_FUELLSTAND_RECHTS                            0xD259
        // Returns the fill level of the right tank sensor. The work area and IO area must be filled by the developer. /
        // Rückgabe des Füllstands des rechten Tanksensors. Arbeitsbereich und IO-Bereich muss vom Entwickler befüllt
        // werden.

    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_RE_WERT                  (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_RE_WERT_UNIT             'Ohm'
    #define I3_RES_BDC_STAT_FUELLSTAND_TANK_RE_WERT_TYPE             unsigned short
        // Returns the fill level of the right tank sensor. The work area and IO area must be filled by the developer. /
        // Rückgabe des Füllstands des rechten Tanksensors. Arbeitsbereich und IO-Bereich muss vom Entwickler befüllt
        // werden.

#define I3_PID_BDC_HUPE_TASTER                                       0xD297
        // 0 = horn button not actuated 1 = horn button actuated / 0= Taster Hupe nicht betätigt  1= Taster Hupe betätigt

    #define I3_RES_BDC_STAT_TASTER_HUPE_EIN                          (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_HUPE_EIN_UNIT                     '0/1'
    #define I3_RES_BDC_STAT_TASTER_HUPE_EIN_TYPE                     char
        // 0 = horn button not actuated 1 = horn button actuated / 0= Taster Hupe nicht betätigt  1= Taster Hupe betätigt

// Skipping HUPE on 0xD298 which takes arguments

// Skipping ROLLO_HECK_MOTOR on 0xD30A which takes arguments

// Skipping ROLLO_HECK_TASTER on 0xD30B which takes arguments

// Skipping AUSSENSPIEGEL_ABBLENDEN on 0xD320 which takes arguments

#define I3_PID_BDC_AUSSENSPIEGEL_THERMOSCHUTZ                        0xD321
        // 0: not active 1: active / 0: nicht aktiv 1: aktiv

    #define I3_RES_BDC_STAT_SPIEGEL_THERMOSCHUTZ_AKTIV               (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_SPIEGEL_THERMOSCHUTZ_AKTIV_UNIT          '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_THERMOSCHUTZ_AKTIV_TYPE          short
        // 0: not active 1: active / 0: nicht aktiv 1: aktiv

// Skipping AUSSENSPIEGEL_RECHTS_RICHTUNG on 0xD322 which takes arguments

// Skipping AUSSENSPIEGEL_KLAPPEN on 0xD324 which takes arguments

// Skipping AUSSENSPIEGEL_LINKS_RICHTUNG on 0xD327 which takes arguments

// Skipping AUSSENSPIEGEL_LINKS_POS on 0xD328 which takes arguments

#define I3_PID_BDC_AUSSENSPIEGEL_LIN                                 0xD329
        // 0: No LIN outside mirror 1: LIN outside mirror / 0: Kein LIN-Aussenspiegel  1: LIN-Aussenspiegel

    #define I3_RES_BDC_STAT_VORHANDEN_LIN_SPIEGEL_EIN                (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_LIN_SPIEGEL_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_LIN_SPIEGEL_EIN_TYPE           short
        // 0: No LIN outside mirror 1: LIN outside mirror / 0: Kein LIN-Aussenspiegel  1: LIN-Aussenspiegel

#define I3_PID_BDC_AUSSENSPIEGEL_MEM_VORHANDEN                       0xD32B
        // 0: No memory function 1: Memory function / 0: Keine Memoryfunktion  1: Memoryfunktion

    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_MEMORY_EIN             (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_MEMORY_EIN_UNIT        '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_MEMORY_EIN_TYPE        short
        // 0: No memory function 1: Memory function / 0: Keine Memoryfunktion  1: Memoryfunktion

// Skipping AUSSENSPIEGEL_HEIZUNG on 0xD32D which takes arguments

#define I3_PID_BDC_AUSSENSPIEGEL_HEIZUNG_VERBAUT                     0xD32E
        // 0: No mirror heating 1: Mirror heating / 0: Keine Spiegelheizung  1: Spiegelheizung

    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_HEIZUNG_EIN            (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_HEIZUNG_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_HEIZUNG_EIN_TYPE       short
        // 0: No mirror heating 1: Mirror heating / 0: Keine Spiegelheizung  1: Spiegelheizung

// Skipping EC_SPIEGEL_ABBLENDEN on 0xD32F which takes arguments

#define I3_PID_BDC_EC_SPIEGEL_VORHANDEN                              0xD330
        // 0: EC level not available; 1: EC mirror available / 0: EC-Spiegel nicht vorhanden; 1: EC-Spiegel vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_EC_SPIEGEL                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_EC_SPIEGEL_UNIT                '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_EC_SPIEGEL_TYPE                unsigned char
        // 0: EC level not available; 1: EC mirror available / 0: EC-Spiegel nicht vorhanden; 1: EC-Spiegel vorhanden

#define I3_PID_BDC_AUSSENSPIEGEL_TASTER                              0xD331
        // Status switch / button mirror adjustment / Status Schalter / Taster Spiegelverstellung

    #define I3_RES_BDC_STAT_SPIEGEL_BEIKLAPPEN_EIN                   (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_SPIEGEL_BEIKLAPPEN_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_BEIKLAPPEN_EIN_TYPE              short
        // 0: Fold-in mirror button not pressed 1: Fold-in mirror button pressed / 0: Taster Spiegel Beiklappen nicht
        // gedrückt  1: Taster Spiegel Beiklappen gedrückt

    #define I3_RES_BDC_STAT_SPIEGEL_SCHALTER_FA_EIN                  (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_SPIEGEL_SCHALTER_FA_EIN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_SCHALTER_FA_EIN_TYPE             short
        // Driver / passenger mirror selection 0: passenger mirror 1: driver mirror / Spiegelauswahl Fahrer / Beifahrer 
        // 0: Beifahrerspiegel  1: Fahrerspiegel

    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_LINKS_EIN                 (RXBUF_SINT(4))
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_LINKS_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_LINKS_EIN_TYPE            short
        // 0: button not pressed 1: button pressed / 0: Taster nicht gedrückt  1: Taster gedrückt

    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_OBEN_EIN                  (RXBUF_SINT(6))
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_OBEN_EIN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_OBEN_EIN_TYPE             short
        // 0: button not pressed 1: button pressed / 0: Taster nicht gedrückt  1: Taster gedrückt

    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_RECHTS_EIN                (RXBUF_SINT(8))
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_RECHTS_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_RECHTS_EIN_TYPE           short
        // 0: button not pressed 1: button pressed / 0: Taster nicht gedrückt  1: Taster gedrückt

    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_UNTEN_EIN                 (RXBUF_SINT(10))
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_UNTEN_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_UNTEN_EIN_TYPE            short
        // 0: button not pressed 1: button pressed / 0: Taster nicht gedrückt  1: Taster gedrückt

    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_NR                        (RXBUF_SINT(12))
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_SPIEGEL_TASTER_NR_TYPE                   short
        // VS result, see table / VS-Result, siehe Tabelle

#define I3_PID_BDC_AUSSENSPIEGEL_KLAPPEN_VORHANDEN                   0xD332
        // 0: No folding in possible 1: Folding in possible / 0: Kein Beiklappen möglich  1: Beiklappne möglich

    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_BEIKLAPPEN_EIN         (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_BEIKLAPPEN_EIN_UNIT    '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_BEIKLAPPEN_EIN_TYPE    short
        // 0: No folding in possible 1: Folding in possible / 0: Kein Beiklappen möglich  1: Beiklappne möglich

// Skipping AUSSENSPIEGEL_RECHTS_POS on 0xD333 which takes arguments

// Skipping AUSSENSPIEGEL_MEM_POS_STEUERN on 0xD336 which takes arguments

// Skipping AUSSENSPIEGEL_MEM_POS_SCHREIBEN on 0xD338 which takes arguments

#define I3_PID_BDC_UGDO_VORHANDEN                                    0xD33A
        // 0: UGDO not available; 1: UGDO available / 0: UGDO nicht vorhanden;  1: UGDO vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_UGDO                           (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_UGDO_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_UGDO_TYPE                      short
        // 0: UGDO not available; 1: UGDO available / 0: UGDO nicht vorhanden;  1: UGDO vorhanden

#define I3_PID_BDC_AUSSENSPIEGEL_ABBLENDEN_VORHANDEN                 0xD33C
        // Returns whether the exterior mirrors can be dimmed and which ones. See table TAB_AUSSENSPIEGEL_ABBLENDEN /
        // Liefert zurück ob die Außenspiegel abblendbar sind und welche. Siehe Table TAB_AUSSENSPIEGEL_ABBLENDEN

    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_ABBLENDEN_EIN          (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_ABBLENDEN_EIN_UNIT     '0-n'
    #define I3_RES_BDC_STAT_VORHANDEN_SPIEGEL_ABBLENDEN_EIN_TYPE     short
        // Returns whether the exterior mirrors can be dimmed and which ones. See table TAB_AUSSENSPIEGEL_ABBLENDEN /
        // Liefert zurück ob die Außenspiegel abblendbar sind und welche. Siehe Table TAB_AUSSENSPIEGEL_ABBLENDEN

#define I3_PID_BDC_UGDO_LAND                                         0xD33D
        // Set country / Eingestelltes Land

    #define I3_RES_BDC_STAT_UGDO_LAND_NR                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_UGDO_LAND_NR_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_UGDO_LAND_NR_TYPE                        unsigned char
        // Set country / Eingestelltes Land

#define I3_PID_BDC_UGDO_MODE                                         0xD33E
        // Fashion of the UGDO / Mode des UGDO

    #define I3_RES_BDC_STAT_UGDO_MODE_NR                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_UGDO_MODE_NR_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_UGDO_MODE_NR_TYPE                        unsigned char
        // Fashion of the UGDO / Mode des UGDO

#define I3_PID_BDC_KOMPASS_SPIEGEL_VORHANDEN                         0xD343
        // 0: Compass mirror not installed 1: Compass mirror installed / 0: Kompass-Spiegel nicht verbaut  1:
        // Kompass-Spiegel verbaut

    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_VORHANDEN_EIN            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_VORHANDEN_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_VORHANDEN_EIN_TYPE       unsigned char
        // 0: Compass mirror not installed 1: Compass mirror installed / 0: Kompass-Spiegel nicht verbaut  1:
        // Kompass-Spiegel verbaut

#define I3_PID_BDC_KOMPASS_SPIEGEL_MAGNET                            0xD344
        // Output magnetic zone (from slave) For a listing, see table TAB_MAGNETZONE / Ausgabe Magnetzone (aus Slave) 
        // Auflistung siehe Tabelle TAB_MAGNETZONE

    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_MAGNET_ZONE_NR           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_MAGNET_ZONE_NR_UNIT      '0-n'
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_MAGNET_ZONE_NR_TYPE      unsigned char
        // Output magnetic zone (from slave) For a listing, see table TAB_MAGNETZONE / Ausgabe Magnetzone (aus Slave) 
        // Auflistung siehe Tabelle TAB_MAGNETZONE

#define I3_PID_BDC_KOMPASS_SPIEGEL_SPRACHE                           0xD345
        // Coding parameters from the master language setting list see table TAB_KOMPASS_SPRACHE / Codierparameter aus
        // dem Master Spracheinstellung Auflistung siehe Tabelle TAB_KOMPASS_SPRACHE

    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_SPRACHE_NR               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_SPRACHE_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_SPRACHE_NR_TYPE          unsigned char
        // Coding parameters from the master language setting list see table TAB_KOMPASS_SPRACHE / Codierparameter aus
        // dem Master Spracheinstellung Auflistung siehe Tabelle TAB_KOMPASS_SPRACHE

#define I3_PID_BDC_KOMPASS_SPIEGEL_LENKUNG                           0xD346
        // Coding parameters from the master 0: right-hand drive 1: left-hand drive / Codierparameter aus dem Master 0:
        // Rechtslenker  1: Linkslenker

    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_LENKUNG_NR               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_LENKUNG_NR_UNIT          '0-n'
    #define I3_RES_BDC_STAT_KOMPASS_SPIEGEL_LENKUNG_NR_TYPE          unsigned char
        // Coding parameters from the master 0: right-hand drive 1: left-hand drive / Codierparameter aus dem Master 0:
        // Rechtslenker  1: Linkslenker

// Skipping AUSSENSPIEGEL_HC2 on 0xD347 which takes arguments

// Skipping WASCHDUESENHEIZUNG on 0xD350 which takes arguments

#define I3_PID_BDC_WISCHER_FRONT_MOTOR                               0xD351
        // Supplies the status of the control of the front wiper: 0 = control of the front wiper not active; 1 = control
        // of windscreen wiper active / Liefert den Zustand der Ansteuerung des Frontscheibenwischers:  0= Ansteuerung
        // Frontscheibenwischer nicht aktiv; 1= Ansteuerung Frontscheibenwischer aktiv

    #define I3_RES_BDC_STAT_MOTOR_FRONTWISCHER_EIN                   (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_MOTOR_FRONTWISCHER_EIN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_MOTOR_FRONTWISCHER_EIN_TYPE              unsigned char
        // Supplies the status of the control of the front wiper: 0 = control of the front wiper not active; 1 = control
        // of windscreen wiper active / Liefert den Zustand der Ansteuerung des Frontscheibenwischers:  0= Ansteuerung
        // Frontscheibenwischer nicht aktiv; 1= Ansteuerung Frontscheibenwischer aktiv

// Skipping WASCHERPUMPE_HINTEN on 0xD352 which takes arguments

#define I3_PID_BDC_WISCHER_HECK_MOTOR                                0xD353
        // Returns the status of the activation of the rear window wiper: 0 = activation of the rear window wiper not
        // active; 1 = control of rear window wiper active / Liefert den Zustand der Ansteuerung des
        // Heckscheibenwischers:  0= Ansteuerung Heckscheibenwischer nicht aktiv; 1= Ansteuerung Heckscheibenwischer
        // aktiv

    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_EIN                    (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_EIN_TYPE               unsigned char
        // Returns the status of the activation of the rear window wiper: 0 = activation of the rear window wiper not
        // active; 1 = control of rear window wiper active / Liefert den Zustand der Ansteuerung des
        // Heckscheibenwischers:  0= Ansteuerung Heckscheibenwischer nicht aktiv; 1= Ansteuerung Heckscheibenwischer
        // aktiv

#define I3_PID_BDC_SRA_RELAIS                                        0xD354
        // Supplies the status of the relay of the headlight cleaning system: 0 = relay headlight cleaning system not
        // active; 1 = Relay headlight cleaning system active / Liefert den Zustand des Relais der
        // Scheinwerferreinigungsanlage:  0= Relais Scheinwerferreinigungsanlage nicht aktiv;  1= Relais
        // Scheinwerferreinigungsanlage aktiv

    #define I3_RES_BDC_STAT_RELAIS_SRA_EIN                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_RELAIS_SRA_EIN_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_RELAIS_SRA_EIN_TYPE                      unsigned char
        // Supplies the status of the relay of the headlight cleaning system: 0 = relay headlight cleaning system not
        // active; 1 = Relay headlight cleaning system active / Liefert den Zustand des Relais der
        // Scheinwerferreinigungsanlage:  0= Relais Scheinwerferreinigungsanlage nicht aktiv;  1= Relais
        // Scheinwerferreinigungsanlage aktiv

// Skipping WISCHER_FRONT_RSK on 0xD355 which takes arguments

// Skipping WISCHER_HECK_RSK on 0xD356 which takes arguments

#define I3_PID_BDC_WASCHWASSERSTAND                                  0xD357
        // _ON: 1 wash water tank sufficiently filled _VALUE: level in mV / _EIN: 1 Waschwasserbehälter ausreichend
        // befüllt _WERT: Pegel in mV

    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_EIN                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_EIN_TYPE                unsigned char
        // Filling status of the washing water tank: 0 = washing water tank not sufficiently filled; 1 = washing water
        // tank sufficiently filled / Befüllungszustand des  Waschwasserbehälters:  0= Waschwasserbehälter nicht
        // ausreichend befüllt; 1= Waschwasserbehälter ausreichend befüllt

    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_WERT                    (RXBUF_UINT(1))
    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_WERT_UNIT               'mV'
    #define I3_RES_BDC_STAT_WASCHWASSERSTAND_WERT_TYPE               unsigned short
        // Specification of the level value in mv. 0xFFFF: invalid value or value not supported / Angabe des Pegelwerts
        // in mv. 0xFFFF: ungültiger Wert oder Wert nicht unterstützt

#define I3_PID_BDC_WISCHER_HECK_VORHANDEN                            0xD358
        // 0: rear wiper not coded; 1: Coded rear wiper / 0: Heckwischer nicht codiert;  1: Heckwischer codiert

    #define I3_RES_BDC_STAT_VORHANDEN_HECKWISCHER_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_HECKWISCHER_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_HECKWISCHER_EIN_TYPE           unsigned char
        // 0: rear wiper not coded; 1: Coded rear wiper / 0: Heckwischer nicht codiert;  1: Heckwischer codiert

#define I3_PID_BDC_SRA_VORHANDEN                                     0xD359
        // Indicates whether the headlight cleaning system is coded: 0 = headlight cleaning system not coded; 1 = coded
        // headlight cleaning system / Gibt an, ob die Scheinwerferreinigungsanlage codiert ist:  0=
        // Scheinwerferreinigungsanlage nicht codiert;  1= Scheinwerferreinigungsanlage codiert

    #define I3_RES_BDC_STAT_VORHANDEN_SRA                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SRA_UNIT                       '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SRA_TYPE                       unsigned char
        // Indicates whether the headlight cleaning system is coded: 0 = headlight cleaning system not coded; 1 = coded
        // headlight cleaning system / Gibt an, ob die Scheinwerferreinigungsanlage codiert ist:  0=
        // Scheinwerferreinigungsanlage nicht codiert;  1= Scheinwerferreinigungsanlage codiert

#define I3_PID_BDC_LENKSTOCK_WISCHER                                 0xD35B
        // Provides the status of the individual wiper switches on the steering column / Liefert den Zustand der
        // einzelnen Wischerschalter am Lenkstock

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TASTER_AXIAL_EIN       (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TASTER_AXIAL_EIN_UNIT  '0-n'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TASTER_AXIAL_EIN_TYPE  char
        // Result not relevant / Ergebnis nicht relevant

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_FRONTWASCHEN           (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_FRONTWASCHEN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_FRONTWASCHEN_TYPE      char
        // 0 = steering column wiper not in front wash position; 1 = steering column wiper in front washing position / 0=
        // Lenkstock Wischer nicht in Stellung Frontwaschen;  1= Lenkstock Wischer in Stellung Frontwaschen

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWASCHEN            (RXBUF_SCHAR(2))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWASCHEN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWASCHEN_TYPE       char
        // 0 = steering column wiper not in rear wash position; 1 = Wiper steering column in rear wash position / 0=
        // Lenkstock Wischer nicht in Stellung Heckwaschen;  1= Lenkstock Wischer in Stellung Heckwaschen

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWISCHEN            (RXBUF_SCHAR(3))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWISCHEN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_HECKWISCHEN_TYPE       char
        // 0 = steering column wiper not in rear wipe position; 1 = Wiper steering column in rear wiping position / 0=
        // Lenkstock Wischer nicht in Stellung Heckwischen;  1= Lenkstock Wischer in Stellung Heckwischen

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_INTERVALL          (RXBUF_SCHAR(4))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_INTERVALL_UNIT     '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_INTERVALL_TYPE     char
        // 0 = steering column wiper not in position interval or automatic; 1 = steering column wiper in position
        // interval or automatic / 0= Lenkstock Wischer nicht in Stellung Intervall oder Automatik; 1= Lenkstock Wischer
        // in Stellung Intervall oder Automatik

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NULLSTELLUNG           (RXBUF_SCHAR(5))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NULLSTELLUNG_UNIT      '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NULLSTELLUNG_TYPE      char
        // 0 = steering column wiper not zero position; 1 = steering column wiper zero position; Note: With a switch, the
        // zero position corresponds to the Off stage, with a button, the zero position corresponds to the middle
        // position / 0= Lenkstock Wischer nicht Nullstellung;  1= Lenkstock Wischer Nullstellung;  Hinweis: Bei einem
        // Schalter entspricht die Nullstellung der Stufe Aus, bei einem Taster entspricht die Nullstellung der
        // Mittelstellung

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_1                  (RXBUF_SCHAR(6))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_1_UNIT             '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_1_TYPE             char
        // 0 = steering column wiper not in position 1; 1 = steering column wiper in position 1 / 0= Lenkstock Wischer
        // nicht in Stellung Position 1;  1= Lenkstock Wischer in Position 1

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_2                  (RXBUF_SCHAR(7))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_2_UNIT             '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_POS_2_TYPE             char
        // 0 = steering column wiper not in position 2; 1 = steering column wiper in position 2 / 0= Lenkstock Wischer
        // nicht in Stellung Position 2;  1= Lenkstock Wischer in Position 2

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_RAENDEL_NR             (RXBUF_SCHAR(8))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_RAENDEL_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_RAENDEL_NR_TYPE        char
        // VS-Result steering column wiper; 0 = wiper knurled wheel level 1; 1 = wiper knurled wheel level 2; 2 = wiper
        // knurled wheel level 3; 3 = wiper knurled wheel level 4; 4 = wiper knurled wheel invalid position; Note:
        // Numbering is retained even if one or more functions are omitted / VS-Result Lenkstock Wischer;  0= Wischer
        // Rändelrad Stufe 1;  1= Wischer Rändelrad Stufe 2;  2= Wischer Rändelrad Stufe 3;  3= Wischer Rändelrad Stufe
        // 4;  4= Wischer Rändelrad ungültige Position; Hinweis: Numerierung bleibt erhalten, auch bei Entfall einer oder
        // mehrerer Funktionen

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TIPPWISCHEN            (RXBUF_SCHAR(9))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TIPPWISCHEN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_TIPPWISCHEN_TYPE       char
        // 0 = steering column wiper not in tip wipe position; 1 = Wiper steering column in tip wipe position / 0=
        // Lenkstock Wischer nicht in Stellung Tippwischen;  1= Lenkstock Wischer in Stellung Tippwischen

    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NR                     (RXBUF_SCHAR(10))
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NR_UNIT                '0-n'
    #define I3_RES_BDC_STAT_LENKSTOCK_WISCHER_NR_TYPE                char
        // VS-Result steering column wiper; See sub-table / VS-Result Lenkstock Wischer; Siehe Sub-Tabelle

// Skipping WASCHWASSER_VORNE on 0xD35C which takes arguments

// Skipping WISCHER_FRONT on 0xD35D which takes arguments

#define I3_PID_BDC_WISCHER_FRONT_LIN                                 0xD35E
        // Indicates whether the front wiper is installed as a LIN module: 0 = no LIN front wiper; 1 = LIN front wiper /
        // Gibt an, ob der Frontwischer als LIN-Modul verbaut ist:  0= kein LIN-Frontwischer;  1= LIN-Frontwischer

    #define I3_RES_BDC_STAT_VORHANDEN_LIN_FRONTWISCHER               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_LIN_FRONTWISCHER_UNIT          '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_LIN_FRONTWISCHER_TYPE          unsigned char
        // Indicates whether the front wiper is installed as a LIN module: 0 = no LIN front wiper; 1 = LIN front wiper /
        // Gibt an, ob der Frontwischer als LIN-Modul verbaut ist:  0= kein LIN-Frontwischer;  1= LIN-Frontwischer

// Skipping WISCHER_HECK on 0xD35F which takes arguments

// Skipping SRA on 0xD360 which takes arguments

// Skipping LENKSTOCK_WISCHER_RLS_LED on 0xD361 which takes arguments

// Skipping WISCHER_FRONT_MONTAGE on 0xD362 which takes arguments

// Skipping WISCHER_FRONT_SERVICE on 0xD363 which takes arguments

// Skipping SPURWECHSELASSISTENT_TASTER on 0xD369 which takes arguments

// Skipping SPURWECHSELASSISTENT_TASTER_LED on 0xD36A which takes arguments

#define I3_PID_BDC_REGENSENSOR_VORHANDEN                             0xD373
        // 0: rain sensor not available / coded; 1: Rain sensor available / coded / 0: Regensensor nicht vorhanden /
        // codiert; 1: Regensensor vorhanden / codiert

    #define I3_RES_BDC_STAT_VORHANDEN_REGENSENSOR_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_REGENSENSOR_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_REGENSENSOR_EIN_TYPE           unsigned char
        // 0: rain sensor not available / coded; 1: Rain sensor available / coded / 0: Regensensor nicht vorhanden /
        // codiert; 1: Regensensor vorhanden / codiert

#define I3_PID_BDC_REGENSENSOR_INIT                                  0xD375
        // 0x00 rain sensor not measured 0x01 rain sensor measured / 0x00 Regensensor nicht eingemessen 0x01 Regensensor
        // eingemessen

    #define I3_RES_BDC_STAT_REGENSENSOR_INIT                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_REGENSENSOR_INIT_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_REGENSENSOR_INIT_TYPE                    unsigned char
        // 0x00 rain sensor not measured 0x01 rain sensor measured / 0x00 Regensensor nicht eingemessen 0x01 Regensensor
        // eingemessen

#define I3_PID_BDC_REGENSENSOR_INT_WERT                              0xD376
        // Return rain intensity / Rückgabe Regenintensität

    #define I3_RES_BDC_STAT_REGEN_INT_WERT                           (RXBUF_SINT(0)/2.0f)
    #define I3_RES_BDC_STAT_REGEN_INT_WERT_UNIT                      '%'
    #define I3_RES_BDC_STAT_REGEN_INT_WERT_TYPE                      float
        // Rain intensity in 0 .. 75% / Regenintensität in 0 .. 75 %

    #define I3_RES_BDC_STAT_RESERVE_WERT                             (RXBUF_UINT32(2))
    #define I3_RES_BDC_STAT_RESERVE_WERT_TYPE                        unsigned long
        // Reserve for future changes / Reserve für zukünftige Änderungen

// Skipping NIGHTVISION_TASTER on 0xD389 which takes arguments

// Skipping TLC_AKTUATOR on 0xD399 which takes arguments

// Skipping TLC_TASTER on 0xD39A which takes arguments

// Skipping TLC_TASTER_LED on 0xD39B which takes arguments

#define I3_PID_BDC_FAHRLICHTSENSOR                                   0xD3BE
        // Reading out the values of the driving light sensor / Auslesen der Werte des Fahrlichtsensors

    #define I3_RES_BDC_STAT_FRONTLICHT_WERT                          (RXBUF_UINT(0)*6.7f)
    #define I3_RES_BDC_STAT_FRONTLICHT_WERT_UNIT                     'mW/m²'
    #define I3_RES_BDC_STAT_FRONTLICHT_WERT_TYPE                     float
        // unfiltered front light value. Is between 0 and 1701.8 mW / m² / ungefilterter Frontlichtwert. Liegt zwischen 0
        // und 1701,8 mW/m²

    #define I3_RES_BDC_STAT_FRONTLICHT_GEMITTELT_WERT                (RXBUF_UINT(2)*6.7f)
    #define I3_RES_BDC_STAT_FRONTLICHT_GEMITTELT_WERT_UNIT           'mW/m²'
    #define I3_RES_BDC_STAT_FRONTLICHT_GEMITTELT_WERT_TYPE           float
        // averaged front light value. Is between 0 and 1701.7 mW / m² / gemittelter Frontlichtwert. Liegt zwischen 0 und
        // 1701,7  mW/m²

    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_WERT                      (RXBUF_SINT(4)*100.0f)
    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_WERT_UNIT                 'Lux'
    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_WERT_TYPE                 float
        // unfiltered ambient light. Range 0 to 25500 lux / ungefiltetes Umgebungslicht. Bereich 0 bis 25500 Lux

    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_GEMITTELT_WERT            (RXBUF_SINT(6)*100.0f)
    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_GEMITTELT_WERT_UNIT       'Lux'
    #define I3_RES_BDC_STAT_UMGEBUNGSLICHT_GEMITTELT_WERT_TYPE       float
        // Average value of ambient light. Range 0 to 25500 lux / gemittelter Wert Umgebungslicht. Bereich 0 bis 25500
        // Lux

    #define I3_RES_BDC_STAT_HUD_WERT                                 (RXBUF_SINT(8))
    #define I3_RES_BDC_STAT_HUD_WERT_UNIT                            'Digit'
    #define I3_RES_BDC_STAT_HUD_WERT_TYPE                            short
        // unfiltered background brightness value. Range 0 to 255 / ungefilterter Wert Hintergrund-Helligkeit. Bereich 0
        // bis 255

    #define I3_RES_BDC_STAT_RESERVE_WERT_0XD3BE                      (RXBUF_UINT32(10))
    #define I3_RES_BDC_STAT_RESERVE_WERT_0XD3BE_TYPE                 unsigned long
        // Reserve for future changes / Reserve für zukünftige Änderungen

#define I3_PID_BDC_FAHRLICHTSENSOR_VORHANDEN                         0xD3BF
        // 1: Driving light sensor available / coded / 1:Fahrlichtsensor vorhanden/codiert

    #define I3_RES_BDC_STAT_VORHANDEN_FAHRLICHTSENSOR                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_FAHRLICHTSENSOR_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_FAHRLICHTSENSOR_TYPE           unsigned char
        // 1: Driving light sensor available / coded / 1:Fahrlichtsensor vorhanden/codiert

#define I3_PID_BDC_HOD_LENKRAD                                       0xD3F0
        // Returns the status of the HOD sensor / Liefert den Status des HOD Sensors

    #define I3_RES_BDC_STAT_HOD_STATUS_NR                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HOD_STATUS_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_HOD_STATUS_NR_TYPE                       unsigned char
        // Returns the status of the HOD sensor / Liefert den Status des HOD Sensors

#define I3_PID_BDC_HOD_ZUSTAND_GAP                                   0xD3F1
        // Raw value measured by the A / D converter for the distance or the contact area between hand and steering wheel
        // / Vom A/D-Wandler gemessener Rohwert des Abstands bzw. der Berührungsfläche zwischen Hand und Lenkrad

    #define I3_RES_BDC_STAT_ADC_ROHWERT_WERT                         (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_ADC_ROHWERT_WERT_TYPE                    char
        // Raw value measured by the A / D converter for the distance or the contact area between hand and steering wheel
        // / Vom A/D-Wandler gemessener Rohwert des Abstands bzw. der Berührungsfläche zwischen Hand und Lenkrad

// Skipping HOD_AKTIVIERUNG on 0xD3F3 which takes arguments

// Skipping WISCHER_LIN_WINKELPOSITION on 0xD500 which takes arguments

#define I3_PID_BDC_WISCHER_LIN_DATEN_LESEN                           0xD505
        // WISCHER_LIN_DATEN_LESEN / WISCHER_LIN_DATEN_LESEN

    #define I3_RES_BDC_STAT_ANZAHL_WISCHZYKLEN_WERT                  (RXBUF_UINT(0)*100.0f)
    #define I3_RES_BDC_STAT_ANZAHL_WISCHZYKLEN_WERT_TYPE             float
        // Number of wiping cycles in steps of 100 / Anzahl der Wischzyklen in 100er Schritten

    #define I3_RES_BDC_STAT_CARCODE                                  (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_CARCODE_UNIT                             '0-n'
    #define I3_RES_BDC_STAT_CARCODE_TYPE                             unsigned char
        // Provides the carcode of the wiper motor / Liefert den Carcode des Wischermotors

#define I3_PID_BDC_WISCHER_HECK_MOTOR_2                              0xD507
        // Returns the status of the activation of the 2nd rear window wiper: 0 = activation of the 2nd rear window wiper
        // not active; 1 = activation of 2nd rear window wiper active / Liefert den Zustand der Ansteuerung des 2.
        // Heckscheibenwischers:  0= Ansteuerung 2. Heckscheibenwischer nicht aktiv; 1= Ansteuerung 2.
        // Heckscheibenwischer aktiv

    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_2_EIN                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_2_EIN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_MOTOR_HECKWISCHER_2_EIN_TYPE             unsigned char
        // Returns the status of the activation of the 2nd rear window wiper: 0 = activation of the 2nd rear window wiper
        // not active; 1 = activation of 2nd rear window wiper active / Liefert den Zustand der Ansteuerung des 2.
        // Heckscheibenwischers:  0= Ansteuerung 2. Heckscheibenwischer nicht aktiv; 1= Ansteuerung 2.
        // Heckscheibenwischer aktiv

#define I3_PID_BDC_INNENLICHTEINHEIT_DRITTE_SITZREIHE                0xD52C
        // Current status of the ITU 3rd row of seats Status feedback on the LIN / Aktueller Status der ILE 3. Sitzreihe
        // Statusrückmeldungen auf dem LIN

    #define I3_RES_BDC_STAT_INNENLICHT                               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_INNENLICHT_UNIT                          '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_TYPE                          unsigned char
        // LIN status feedback ILE ¿status interior light Values: 0 - off, 1 - on / LIN Status-Rückmeldung ILE ¿ Status
        // Innenlicht Werte: 0 - Aus, 1 - Ein

    #define I3_RES_BDC_STAT_LESELICHT_LINKS                          (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_UNIT                     '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_TYPE                     unsigned char
        // LIN status feedback ILE ¿status reading light left Values: 0 - off, 1 - on / LIN Status-Rückmeldung ILE ¿
        // Status Leselicht links Werte: 0 - Aus, 1 - Ein

    #define I3_RES_BDC_STAT_LESELICHT_RECHTS                         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_TYPE                    unsigned char
        // LIN status feedback ILE ¿status reading light right Values: 0 - off, 1 - on / LIN Status-Rückmeldung ILE ¿
        // Status Leselicht rechts Werte: 0 - Aus, 1 - Ein

    #define I3_RES_BDC_STAT_WELCOMELIGHT                             (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_WELCOMELIGHT_UNIT                        '0/1'
    #define I3_RES_BDC_STAT_WELCOMELIGHT_TYPE                        unsigned char
        // LIN status feedback ILE ¿status welcome light Values: 0 - off, 1 - on / LIN Status-Rückmeldung ILE ¿ Status
        // Welcomelight Werte: 0 - Aus, 1 - Ein

    #define I3_RES_BDC_STAT_AMBIENTELICHT                            (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_AMBIENTELICHT_UNIT                       '0/1'
    #define I3_RES_BDC_STAT_AMBIENTELICHT_TYPE                       unsigned char
        // LIN status feedback ILE ¿Ambient light status Values: 0 - Off, 1 - On / LIN Status-Rückmeldung ILE ¿ Status
        // Ambientelicht Werte: 0 - Aus, 1 - Ein

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_LINKS                   (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_LINKS_UNIT              '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_LINKS_TYPE              unsigned char
        // LIN status feedback ILE ¿Status button reading light left Values: 0 - not activated, 1 - activated / LIN
        // Status-Rückmeldung ILE ¿ Status Taster Leselicht links Werte: 0 - nicht betätigt, 1 - betätigt

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_RECHTS                  (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_RECHTS_UNIT             '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_RECHTS_TYPE             unsigned char
        // LIN status feedback ILE ¿Status button reading light right Values: 0 - not activated, 1 - activated / LIN
        // Status-Rückmeldung ILE ¿ Status Taster Leselicht rechts Werte: 0 - nicht betätigt, 1 - betätigt

// Skipping AHL_LWR_TMS_BESTROMEN on 0xD531 which takes arguments

// Skipping TAGFAHRLICHT_DEAKTIVIEREN on 0xD537 which takes arguments

// Skipping LWR_REFERENZLAUF on 0xD538 which takes arguments

#define I3_PID_BDC_LESELICHT_VORNE                                   0xD53A
        // Status reading light in front / Status Leselicht vorne

    #define I3_RES_BDC_STAT_LESELICHT_LINKS_VORNE                    (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_VORNE_UNIT               '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_VORNE_TYPE               short
        // 1: Reading light on front left / 1: Leselicht links vorne ein

    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_VORNE                   (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_VORNE_UNIT              '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_VORNE_TYPE              short
        // 1: Reading light on front right / 1: Leselicht rechts vorne ein

#define I3_PID_BDC_LICHTSCHALTER_WBL_TASTER_BEL                      0xD53D
        // 0: Bel. Hazard warning lights button off 1: Bel. Hazard warning lights button on / 0: Bel. Taster
        // Warnblinkanlage aus  1: Bel. Taster Warnblinkanlage ein

    #define I3_RES_BDC_STAT_TASTER_WBL_BEL_EIN                       (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_TASTER_WBL_BEL_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_TASTER_WBL_BEL_EIN_TYPE                  short
        // 0: Bel. Hazard warning lights button off 1: Bel. Hazard warning lights button on / 0: Bel. Taster
        // Warnblinkanlage aus  1: Bel. Taster Warnblinkanlage ein

#define I3_PID_BDC_RUECKWAERTSGANG_SCHALTER                          0xD540
        // 0: not active 1: active / 0: nicht aktiv 1: aktiv

    #define I3_RES_BDC_STAT_SCHALTER_RUECK_EIN                       (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_SCHALTER_RUECK_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_SCHALTER_RUECK_EIN_TYPE                  short
        // 0: not active 1: active / 0: nicht aktiv 1: aktiv

#define I3_PID_BDC_SCHEINWERFER_GRUNDSTELLUNG_STATUS                 0xD541
        // 0: Headlight reacts to normal mechanism (manual LWR: reaction to small wheel automatic / dynamic LWR: reaction
        // to the height sensors 1: Headlights stay in their basic position (can only be canceled by diagnosis or
        // changing clamps) / 0: Scheinwerfer reagiert auf  normalen  Mechanismus (manuelle LWR: Reaktion auf Rädchen
        // automatische / dynamische LWR: Reaktion auf die Höhenstndssenoren  1: Scheinwerfer bleiben in Grundstellung
        // (aufheben nur per Diagnose oder Klemmenwechsel möglich)

    #define I3_RES_BDC_STAT_GRUNDSTELLUNG_SCHEINWERFER_EIN           (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_GRUNDSTELLUNG_SCHEINWERFER_EIN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_GRUNDSTELLUNG_SCHEINWERFER_EIN_TYPE      short
        // 0: Headlight reacts to normal mechanism (manual LWR: reaction to small wheel automatic / dynamic LWR: reaction
        // to the height sensors 1: Headlights stay in their basic position (can only be canceled by diagnosis or
        // changing clamps) / 0: Scheinwerfer reagiert auf  normalen  Mechanismus (manuelle LWR: Reaktion auf Rädchen
        // automatische / dynamische LWR: Reaktion auf die Höhenstndssenoren  1: Scheinwerfer bleiben in Grundstellung
        // (aufheben nur per Diagnose oder Klemmenwechsel möglich)

// Skipping LEUCHTEN_FUNKTION on 0xD542 which takes arguments

#define I3_PID_BDC_LESELICHT_VORNE_VORHANDEN                         0xD544
        // 0 = front reading light not available, 1 = front reading light available / 0= Leselicht vorn nicht vorhanden,
        // 1= Leselicht vorne vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_VORNE                (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_VORNE_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_VORNE_TYPE           short
        // 0 = front reading light not available, 1 = front reading light available / 0= Leselicht vorn nicht vorhanden,
        // 1= Leselicht vorne vorhanden

#define I3_PID_BDC_LESELICHT_HINTEN_VORHANDEN                        0xD545
        // 0 = rear reading light not available, 1 = rear reading light available / 0= Leselicht hinten nicht vorhanden,
        // 1= Leselicht hinten vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_HINTEN               (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_HINTEN_UNIT          '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_LESELICHT_HINTEN_TYPE          short
        // 0 = rear reading light not available, 1 = rear reading light available / 0= Leselicht hinten nicht vorhanden,
        // 1= Leselicht hinten vorhanden

// Skipping AHL_LWR_REFERENZLAUF on 0xD547 which takes arguments

#define I3_PID_BDC_LWR_DYNAMISCH_SCHRITTE_REFLAUF                    0xD548
        // Number of steps for the reference run of the headlight range control / Schrittanzahl fuer den Referenzlauf der
        // Leuchtweitenregelung

    #define I3_RES_BDC_STAT_VORHANDEN_LWR_SCHRITTE_REF_LAUF_WERT     (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_LWR_SCHRITTE_REF_LAUF_WERT_UNIT 'Ink'
    #define I3_RES_BDC_STAT_VORHANDEN_LWR_SCHRITTE_REF_LAUF_WERT_TYPE short
        // Number of steps for the reference run of the headlight range control / Schrittanzahl fuer den Referenzlauf der
        // Leuchtweitenregelung

#define I3_PID_BDC_INNENLICHT_HINTEN_TASTER                          0xD54B
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betaetigt

    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_HINTEN_EIN             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_HINTEN_EIN_UNIT        '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_HINTEN_EIN_TYPE        unsigned char
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betaetigt

#define I3_PID_BDC_INNENLICHT_VORNE_TASTER                           0xD54C
        // Status button interior light / interior light permanently off / Status Taster Innenlicht / Innenlicht Daueraus

    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_VORNE_EIN              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_VORNE_EIN_UNIT         '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_TASTER_VORNE_EIN_TYPE         unsigned char
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betaetigt

    #define I3_RES_BDC_STAT_INNENLICHT_VORNE_DAUER_AUS_AKTIV         (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_INNENLICHT_VORNE_DAUER_AUS_AKTIV_UNIT    '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_VORNE_DAUER_AUS_AKTIV_TYPE    unsigned char
        // 0: permanently off not active 1: permanently off active / 0: Daueraus nicht aktiv 1: Daueraus aktiv

#define I3_PID_BDC_BUS_IN_BELADUNGSSENSOR                            0xD54D
        // Bus message for the load sensors in mm / Busnachricht für die Beladungssensoren in mm

    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_VORNE_WERT        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_VORNE_WERT_UNIT   'mm'
    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_VORNE_WERT_TYPE   short
        // Bus message front load sensor in mm / Busnachricht Beladungssensor vorne in mm

    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_HINTEN_WERT       (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_HINTEN_WERT_UNIT  'mm'
    #define I3_RES_BDC_STAT_BUS_IN_BELADUNGSSENSOR_HINTEN_WERT_TYPE  short
        // Bus message rear load sensor in mm / Busnachricht Beladungssensor hinten in mm

#define I3_PID_BDC_LESELICHT_HINTEN_RECHTS_TASTER                    0xD54E
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_RECHTS_EIN       (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_RECHTS_EIN_UNIT  '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_RECHTS_EIN_TYPE  short
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

#define I3_PID_BDC_LWR_MANUELL_POTI                                  0xD54F
        // Value of the knurled wheel of the manual LWR 0 - 254 valid value range 255 invalid / Wert des Rändelsrads der
        // manuellen LWR 0 - 254 gültiger Wertebereich  255 ungültig

    #define I3_RES_BDC_STAT_POTI_MAN_LWR_WERT                        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_POTI_MAN_LWR_WERT_UNIT                   'Ink'
    #define I3_RES_BDC_STAT_POTI_MAN_LWR_WERT_TYPE                   short
        // Value of the knurled wheel of the manual LWR 0 - 254 valid value range 255 invalid / Wert des Rändelsrads der
        // manuellen LWR 0 - 254 gültiger Wertebereich  255 ungültig

#define I3_PID_BDC_LICHTSCHALTEREINHEIT                              0xD550
        // Status light switch unit / Status Lichtschaltereinheit

    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_AL_EIN              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_AL_EIN_UNIT         '0/1'
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_AL_EIN_TYPE         unsigned char
        // 0: switch not in low beam position 1: switch in low beam position / 0: Schalter nicht in Stellung Abblendlicht
        // 1: Schalter in Stellung Abblendlicht

    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_FLC_EIN             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_FLC_EIN_UNIT        '0/1'
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_FLC_EIN_TYPE        unsigned char
        // 0: switch not in position driving light control (FLC) 1: switch in position driving light control (FLC) / 0:
        // Schalter nicht in Stellung Fahrlichtkontrolle (FLC) 1: Schalter in Stellung Fahrlichtkontrolle (FLC)

    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NEUTRAL_EIN         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NEUTRAL_EIN_UNIT    '0/1'
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NEUTRAL_EIN_TYPE    unsigned char
        // 0: Switch not in neutral position 1: Switch in neutral position / 0: Schalter nicht in Stellung Neutral 1:
        // Schalter in Stellung Neutral

    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_STL_EIN             (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_STL_EIN_UNIT        '0/1'
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_STL_EIN_TYPE        unsigned char
        // 0: switch not in position light 1: switch in position position light / 0: Schalter nicht in Stellung
        // Standlicht 1: Schalter in Stellung Standlicht

    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NR                  (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_LICHTSCHALTEREINHEIT_NR_TYPE             unsigned char
        // VS result, meaning see table / VS-Result, Bedeutung siehe Tabelle

#define I3_PID_BDC_LICHTSCHALTER_WBL_TASTER                          0xD552
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt  1: Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_WBL_EIN                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_WBL_EIN_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_TASTER_WBL_EIN_TYPE                      unsigned char
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt  1: Taster betätigt

#define I3_PID_BDC_LESELICHT_HINTEN                                  0xD553
        // Rear reading light status / Status Leselicht hinten

    #define I3_RES_BDC_STAT_LESELICHT_LINKS_HINTEN                   (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_HINTEN_UNIT              '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_LINKS_HINTEN_TYPE              short
        // 1 = rear left reading light on / 1= Leselicht links hinten ein

    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_HINTEN                  (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_HINTEN_UNIT             '0/1'
    #define I3_RES_BDC_STAT_LESELICHT_RECHTS_HINTEN_TYPE             short
        // 1: Reading light at the rear right on / 1: Leselicht rechts hinten ein

#define I3_PID_BDC_PIA_FLA_FOLLOW                                    0xD555
        // Status PIA (FollowMeHome) / Status PIA (FollowMeHome)

    #define I3_RES_BDC_STAT_PIA_FLA_EIN                              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PIA_FLA_EIN_UNIT                         '0/1'
    #define I3_RES_BDC_STAT_PIA_FLA_EIN_TYPE                         unsigned char
        // PIA high beam assistant 0: Off 1: On / PIA Fernlichtassistent  0: Aus  1: Ein

    #define I3_RES_BDC_STAT_PIA_FOLLOW_ME_HOME_ZEIT_WERT             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_PIA_FOLLOW_ME_HOME_ZEIT_WERT_UNIT        's'
    #define I3_RES_BDC_STAT_PIA_FOLLOW_ME_HOME_ZEIT_WERT_TYPE        unsigned char
        // Set time for Follow Me Home / Eingestellte Zeit für Follow Me Home

    #define I3_RES_BDC_STAT_PIA_WELCOMELIGHT_EIN                     (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_PIA_WELCOMELIGHT_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_PIA_WELCOMELIGHT_EIN_TYPE                unsigned char
        // PIA Welcomelight 0: Off 1: On / PIA Welcomelight  0: Aus  1: Ein

#define I3_PID_BDC_SCHALTERBELEUCHTUNG_RAENDELRAD                    0xD557
        // 0 - 254: valid value range 255 invalid / 0 - 254: gültiger Wertebereich  255 ungültig

    #define I3_RES_BDC_STAT_POTI_DIMMUNG_WERT                        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_POTI_DIMMUNG_WERT_UNIT                   'Ink'
    #define I3_RES_BDC_STAT_POTI_DIMMUNG_WERT_TYPE                   short
        // 0 - 254: valid value range 255 invalid / 0 - 254: gültiger Wertebereich  255 ungültig

// Skipping AHL_LWR_POSITION on 0xD558 which takes arguments

#define I3_PID_BDC_PIA_ABBIEGELICHT                                  0xD559
        // 0: PIA: turning light currently not active 1: PIA: turning light currently active / 0: PIA: Abbiegelicht
        // momentan nicht aktiv 1: PIA: Abbiegelicht momentan aktiv

    #define I3_RES_BDC_STAT_PIA_ABBIEGELICHT_PIA_EIN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PIA_ABBIEGELICHT_PIA_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_PIA_ABBIEGELICHT_PIA_EIN_TYPE            unsigned char
        // 0: PIA: turning light currently not active 1: PIA: turning light currently active / 0: PIA: Abbiegelicht
        // momentan nicht aktiv 1: PIA: Abbiegelicht momentan aktiv

#define I3_PID_BDC_PIA_TIPPBLINKEN                                   0xD55E
        // Status PIA setting jog flashing / Status PIA-Einstellung Tippblinken

    #define I3_RES_BDC_STAT_PIA_MIND_ANZAHL_BLINKZYKLEN_BEI_TIPP_WERT (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PIA_MIND_ANZAHL_BLINKZYKLEN_BEI_TIPP_WERT_UNIT 'Ink'
    #define I3_RES_BDC_STAT_PIA_MIND_ANZAHL_BLINKZYKLEN_BEI_TIPP_WERT_TYPE unsigned char
        // Minimum number of flashing cycles for jog flashing at the moment / Mind.-Anzahl Blinkzyklen bei Tippblinken
        // momentan

    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_ENTRIEGELN_EIN           (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_ENTRIEGELN_EIN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_ENTRIEGELN_EIN_TYPE      unsigned char
        // Acknowledgment flashing momentarily when unlocking 0: Off 1: On / Quittierungsblinken bei Entriegeln momentan 
        // 0: Aus  1: Ein

    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_SICHERN_EIN              (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_SICHERN_EIN_UNIT         '0/1'
    #define I3_RES_BDC_STAT_PIA_QUITT_BLINK_SICHERN_EIN_TYPE         unsigned char
        // Acknowledgment flashing when saving is currently 0: Off 1: On / Quittierungsblinken bei Sichern momentan  0:
        // Aus   1: Ein

#define I3_PID_BDC_LWR_MANUELL                                       0xD55F
        // Position information manual headlight range adjustment (MIN, MAX, current) / Positionsangaben manuelle
        // Leuchtweitenregulierung (MIN, MAX, aktuell)

    #define I3_RES_BDC_STAT_MAN_LWR_MAXPOS_WERT                      (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_MAN_LWR_MAXPOS_WERT_UNIT                 '°'
    #define I3_RES_BDC_STAT_MAN_LWR_MAXPOS_WERT_TYPE                 short
        // Controlled angle value when the LWR knurled wheel is in the MAX position / Angesteuerter Winkelwert bei
        // MAX-Stellung des LWR-Rändelrads

    #define I3_RES_BDC_STAT_MAN_LWR_MINPOS_WERT                      (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_MAN_LWR_MINPOS_WERT_UNIT                 '°'
    #define I3_RES_BDC_STAT_MAN_LWR_MINPOS_WERT_TYPE                 short
        // Controlled angle value with the MIN position of the LWR knurled wheel / Angesteuerter Winkelwert bei
        // MIN-Stellung des LWR-Rändelrads

    #define I3_RES_BDC_STAT_MAN_LWR_LINKS_WERT                       (RXBUF_SINT(4))
    #define I3_RES_BDC_STAT_MAN_LWR_LINKS_WERT_UNIT                  '°'
    #define I3_RES_BDC_STAT_MAN_LWR_LINKS_WERT_TYPE                  short
        // Current angle value LWR left / Aktueller Winkelwert LWR links

    #define I3_RES_BDC_STAT_MAN_LWR_RECHTS_WERT                      (RXBUF_SINT(6))
    #define I3_RES_BDC_STAT_MAN_LWR_RECHTS_WERT_UNIT                 '°'
    #define I3_RES_BDC_STAT_MAN_LWR_RECHTS_WERT_TYPE                 short
        // Current LWR angle value right / Aktueller Winkelwert LWR rechts

#define I3_PID_BDC_PIA_TAGFAHRLICHT                                  0xD573
        // Daytime running lights momentarily: 0 = OFF; 1 = ON / Tagfahrlicht momentan: 0= AUS; 1= EIN

    #define I3_RES_BDC_STAT_PIA_TAGFAHRLICHT_EIN                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_PIA_TAGFAHRLICHT_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_PIA_TAGFAHRLICHT_EIN_TYPE                unsigned char
        // Daytime running lights momentarily: 0 = OFF; 1 = ON / Tagfahrlicht momentan: 0= AUS; 1= EIN

#define I3_PID_BDC_INNENLICHT_HINTEN                                 0xD57B
        // Rear interior light status / Status Innenlicht hinten

    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_EIN                    (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_EIN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_EIN_TYPE               short
        // 0: Off 1: On / 0: Aus  1: Ein

    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_WERT                   (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_WERT_UNIT              '%'
    #define I3_RES_BDC_STAT_INNENLICHT_HINTEN_WERT_TYPE              short
        // Specification of luminosity in% value range 0-100% / Angabe Leuchtkraft in % Wertebereich 0-100%

// Skipping INNENLICHT_VORNE on 0xD57C which takes arguments

#define I3_PID_BDC_LWR_MODUS                                         0xD57E
        // Which headlight range control (LWR) is active / Welche Leuchtweitenregulierung (LWR) ist aktiv

    #define I3_RES_BDC_STAT_KEINE_LWR_EIN                            (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_KEINE_LWR_EIN_UNIT                       '0/1'
    #define I3_RES_BDC_STAT_KEINE_LWR_EIN_TYPE                       char
        // 0: LWR coded 1: no LWR coded / 0: LWR codiert  1: keine LWR codiert

    #define I3_RES_BDC_STAT_MAN_LWR_EIN                              (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_MAN_LWR_EIN_UNIT                         '0/1'
    #define I3_RES_BDC_STAT_MAN_LWR_EIN_TYPE                         char
        // 0: manual LWR not coded 1: manual LWR coded / 0: manuelle LWR nicht codiert  1: manuelle LWR codiert

    #define I3_RES_BDC_STAT_AUT_LWR_EIN                              (RXBUF_SCHAR(2))
    #define I3_RES_BDC_STAT_AUT_LWR_EIN_UNIT                         '0/1'
    #define I3_RES_BDC_STAT_AUT_LWR_EIN_TYPE                         char
        // 0: automatic LWR not coded 1: automatic LWR coded / 0: automatische LWR nicht codiert  1: automatische LWR
        // codiert

    #define I3_RES_BDC_STAT_DYN_LWR_EIN                              (RXBUF_SCHAR(3))
    #define I3_RES_BDC_STAT_DYN_LWR_EIN_UNIT                         '0/1'
    #define I3_RES_BDC_STAT_DYN_LWR_EIN_TYPE                         char
        // 0: dynamic LWR not coded 1: dynamic LWR coded / 0: dynamische LWR nicht codiert  1: dynamische LWR codiert

#define I3_PID_BDC_INNENLICHT_KLEMME_VA                              0xD57F
        // Status of terminal VA (consumer shutdown) / Status Klemme VA (Verbraucherabschaltung)

    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_EIN                 (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_EIN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_EIN_TYPE            short
        // Terminal VA: 0: Off 1: On / Klemme VA:   0: Aus  1: Ein

    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_NACHLAUFZEIT_WERT   (RXBUF_SINT(2)/10.0f)
    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_NACHLAUFZEIT_WERT_UNIT 's'
    #define I3_RES_BDC_STAT_INNENLICHT_KLEMME_VA_NACHLAUFZEIT_WERT_TYPE float
        // Follow-up time in seconds Value range 0-1800 seconds (corresponds to 30 minutes) / Nachlaufzeit in Sekunden
        // Wertebereich 0-1800 Sekunden (entspricht 30 Minuten)

#define I3_PID_BDC_LENKSTOCK_BLINKER_TASTER_FLA                      0xD580
        // 0: steering column indicator, axial button high beam assistant not actuated; 1: Steering column indicator,
        // axial button high beam assistant actuated / 0: Lenkstock Blinker axialer Taster Fernlichtassistent nicht
        // betätigt; 1: Lenkstock Blinker axialer Taster Fernlichtassistent betätigt

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_FLA_EIN         (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_FLA_EIN_UNIT    '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_FLA_EIN_TYPE    char
        // 0: steering column indicator, axial button high beam assistant not actuated; 1: Steering column indicator,
        // axial button high beam assistant actuated / 0: Lenkstock Blinker axialer Taster Fernlichtassistent nicht
        // betätigt; 1: Lenkstock Blinker axialer Taster Fernlichtassistent betätigt

#define I3_PID_BDC_LENKSTOCK_BLINKER_TASTER_BC                       0xD581
        // 0: steering column indicator, axial button on-board computer not activated; 1: Steering column indicator,
        // axial button on-board computer actuated / 0: Lenkstock Blinker axialer Taster Bordcomputer nicht betätigt; 1:
        // Lenkstock Blinker axialer Taster Bordcomputer betätigt

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_BC_EIN          (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_BC_EIN_UNIT     '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_BC_EIN_TYPE     char
        // 0: steering column indicator, axial button on-board computer not activated; 1: Steering column indicator,
        // axial button on-board computer actuated / 0: Lenkstock Blinker axialer Taster Bordcomputer nicht betätigt; 1:
        // Lenkstock Blinker axialer Taster Bordcomputer betätigt

#define I3_PID_BDC_LENKSTOCK_BLINKER_FRA                             0xD582
        // Status button for direction indicator. Result description in the sub-table / Status Taster
        // Fahrrichtungsanzeiger. Resultbeschreibung in der Sub-Tabelle

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_EIN              (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_EIN_UNIT         '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_EIN_TYPE         char
        // 0: steering column turn signal not in position turn signal tip left; 1: Steering column indicator in left
        // indicator position / 0: Lenkstock Blinker nicht in Stellung Blinker Tipp links; 1: Lenkstock Blinker in
        // Stellung Blinker links

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_DAUER_EIN        (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_DAUER_EIN_UNIT   '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LINKS_DAUER_EIN_TYPE   char
        // 0: Steering column indicator not in position indicator permanent left; 1: Steering column indicator in
        // position indicator permanent left / 0: Lenkstock Blinker nicht in Stellung Blinker Dauer links; 1: Lenkstock
        // Blinker in Stellung Blinker Dauer links

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_EIN             (RXBUF_SCHAR(2))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_EIN_UNIT        '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_EIN_TYPE        char
        // 0: steering column indicator not in position indicator tip right; 1: Steering column indicator in position
        // indicator right / 0: Lenkstock Blinker nicht in Stellung Blinker Tipp rechts; 1: Lenkstock Blinker in Stellung
        // Blinker rechts

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_DAUER_EIN       (RXBUF_SCHAR(3))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_DAUER_EIN_UNIT  '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_RECHTS_DAUER_EIN_TYPE  char
        // 0: Steering column indicator not in position indicator permanent right; 1: Steering column indicator in
        // position indicator permanent right / 0: Lenkstock Blinker nicht in Stellung Blinker Dauer rechts; 1: Lenkstock
        // Blinker in Stellung Blinker Dauer rechts

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NULLSTELLUNG_EIN       (RXBUF_SCHAR(4))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NULLSTELLUNG_EIN_UNIT  '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NULLSTELLUNG_EIN_TYPE  char
        // 0: steering column indicator not in neutral position; 1: Steering column turn signal in neutral position / 0:
        // Lenkstock Blinker nicht in Nullstellung; 1: Lenkstock Blinker in Nullstellung

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NR                     (RXBUF_SCHAR(5))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NR_UNIT                '0-n'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_NR_TYPE                char
        // List see sub-table / Auflistung siehe Sub-Tabelle

#define I3_PID_BDC_LENKSTOCK_BLINKER_LICHTHUPE_FERNLICHT             0xD583
        // Status headlight flasher / high beam. Result description in the sub-table / Status Lichthupe / Fernlicht.
        // Resultbeschreibung in der Sub-Tabelle

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_FERNLICHT_BETAETIGT    (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_FERNLICHT_BETAETIGT_UNIT '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_FERNLICHT_BETAETIGT_TYPE char
        // 0: Steering column turn signal button high beam not actuated; 1: Steering column turn signal button high beam
        // not actuated / 0: Lenkstock Blinker Taster Fernlicht nicht betätigt; 1: Lenkstock Blinker Taster Fernlicht
        // nicht betätigt

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LICHTHUPE_BETAETIGT    (RXBUF_SCHAR(1))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LICHTHUPE_BETAETIGT_UNIT '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_LICHTHUPE_BETAETIGT_TYPE char
        // 0: Steering column turn signal button headlight flasher not actuated; 1: Steering column turn signal button
        // headlight flasher actuated / 0: Lenkstock Blinker Taster Lichthupe nicht betätigt; 1: Lenkstock Blinker Taster
        // Lichthupe betätigt

#define I3_PID_BDC_LENKSTOCK_BLINKER_WIPPE                           0xD585
        // Status of the flasher rocker on the steering column. Details in the sub-table / Status der Blinkerswippe am
        // Lenkstock. Details in der Sub-Tabelle

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_OBEN        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_OBEN_UNIT   '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_OBEN_TYPE   unsigned char
        // 0: Steering column turn signal rocker up not actuated; 1: Steering column turn signal rocker operated upwards
        // / 0: Lenkstock Blinker Wippe nach oben nicht betätigt; 1: Lenkstock Blinker Wippe nach oben betätigt

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_UNTEN       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_UNTEN_UNIT  '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NACH_UNTEN_TYPE  unsigned char
        // 0: Steering column turn signal rocker down not activated; 1: Steering column turn signal rocker operated
        // downwards / 0: Lenkstock Blinker Wippe nach unten nicht betätigt; 1: Lenkstock Blinker Wippe nach unten
        // betätigt

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NULLSTELLUNG     (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NULLSTELLUNG_UNIT '0/1'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_WIPPE_NULLSTELLUNG_TYPE unsigned char
        // 0: Steering column indicator rocker not in neutral position; 1: Steering column turn signal rocker in neutral
        // position / 0: Lenkstock Blinker Wippe nicht in Nullstellung; 1: Lenkstock Blinker Wippe in Nullstellung

    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_WIPPE_NR        (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_WIPPE_NR_UNIT   '0-n'
    #define I3_RES_BDC_STAT_LENKSTOCK_BLINKER_TASTER_WIPPE_NR_TYPE   unsigned char
        // VS-Result 0: Steering column indicator rocker not actuated; 1: Steering column turn signal rocker operated
        // upwards; 2: Steering column turn signal rocker operated downwards / VS-Result 0: Lenkstock Blinker Wippe nicht
        // betätigt; 1: Lenkstock Blinker Wippe nach oben betätigt;  2: Lenkstock Blinker Wippe nach unten betätigt

#define I3_PID_BDC_LESELICHT_HINTEN_LINKS_TASTER                     0xD587
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_LINKS_EIN        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_LINKS_EIN_UNIT   '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_HINTEN_LINKS_EIN_TYPE   short
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

#define I3_PID_BDC_LESELICHT_VORNE_RECHTS_TASTER                     0xD588
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_RECHTS_EIN        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_RECHTS_EIN_UNIT   '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_RECHTS_EIN_TYPE   short
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

#define I3_PID_BDC_LESELICHT_VORNE_LINKS_TASTER                      0xD589
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_LINKS_EIN         (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_LINKS_EIN_UNIT    '0/1'
    #define I3_RES_BDC_STAT_TASTER_LESELICHT_VORNE_LINKS_EIN_TYPE    short
        // 0: button not pressed 1: button pressed / 0: Taster nicht betätigt 1: Taster betätigt

#define I3_PID_BDC_LWR_POSITION_MIN_MAX                              0xD58A
        // Status end stop knurling wheel manual LWR / Status Endanschlag Rändelrad manuelle LWR

    #define I3_RES_BDC_STAT_LWR_POSITION_MAX_EIN                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_LWR_POSITION_MAX_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_LWR_POSITION_MAX_EIN_TYPE                unsigned char
        // 0: Knurled wheel not in MAX position 1: Knurled wheel in MAX position / 0: Rändelrad nicht in Stellung MAX  1:
        // Rändelrad in Stellung MAX

    #define I3_RES_BDC_STAT_LWR_POSITION_MIN_EIN                     (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LWR_POSITION_MIN_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_LWR_POSITION_MIN_EIN_TYPE                unsigned char
        // 0: Knurled wheel not in MIN position 1: Knurled wheel in MIN position / 0: Rändelrad nicht in Stellung MIN 1:
        // Rändelrad in Stellung MIN

#define I3_PID_BDC_LICHTSCHALTER_NSW_TASTER                          0xD58B
        // 0: Fog light button not actuated; 1: Fog light button pressed / 0: Taster Nebelscheinwerfer nicht betätigt; 1:
        // Taster Nebelscheinwerfer betätigt

    #define I3_RES_BDC_STAT_TASTER_NSW_EIN                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_NSW_EIN_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_TASTER_NSW_EIN_TYPE                      unsigned char
        // 0: Fog light button not actuated; 1: Fog light button pressed / 0: Taster Nebelscheinwerfer nicht betätigt; 1:
        // Taster Nebelscheinwerfer betätigt

#define I3_PID_BDC_LICHTSCHALTER_NSL_TASTER                          0xD58C
        // 0: Rear fog light button not actuated 1: Rear fog light button actuated / 0: Taster Nebelschlussleuchte nicht
        // betätigt 1: Taster Nebelschlussleuchte betätigt

    #define I3_RES_BDC_STAT_TASTER_NSL_EIN                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_NSL_EIN_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_TASTER_NSL_EIN_TYPE                      unsigned char
        // 0: Rear fog light button not actuated 1: Rear fog light button actuated / 0: Taster Nebelschlussleuchte nicht
        // betätigt 1: Taster Nebelschlussleuchte betätigt

// Skipping SCHEINWERFER_GRUNDSTELLUNG on 0xD58E which takes arguments

// Skipping STEUERN_SH_TASTEN on 0xD5A0 which takes arguments

#define I3_PID_BDC_AMBIENTE_BELEUCHTUNG                              0xD5D3
        // Ambient lighting status / Status Ambiente-Beleuchtung

    #define I3_RES_BDC_STAT_AMBIENTE_EIN                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_AMBIENTE_EIN_UNIT                        '0/1'
    #define I3_RES_BDC_STAT_AMBIENTE_EIN_TYPE                        unsigned char
        // 0 = ambience OFF; 1 = ambience ON / 0= Ambiente AUS; 1= Ambiente EIN

    #define I3_RES_BDC_STAT_AMBIENTE_WERT                            (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_AMBIENTE_WERT_UNIT                       '%'
    #define I3_RES_BDC_STAT_AMBIENTE_WERT_TYPE                       unsigned char
        // Specification of the luminosity in% value range 0-100% / Angabe der Leuchtkraft in % Wertebereich 0-100%

// Skipping SMO_LOESCHEN_SPIELSCHUTZZAEHLER on 0xD5D5 which takes arguments

// Skipping SMO_RESET on 0xD5D7 which takes arguments

#define I3_PID_BDC_INNENLICHT_MAPPING                                0xD5DE
        // Output of the assignment of pin to function / Ausgabe der Zuordnung Pin zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_0                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_0_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_0_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_1                           (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_1_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_1_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_2                           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_2_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_2_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_3                           (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_3_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_3_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_4                           (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_4_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_4_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_5                           (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_5_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_5_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_6                           (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_6_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_6_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_7                           (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_7_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_7_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

    #define I3_RES_BDC_STAT_BELEGUNG_LCI_8                           (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_8_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BELEGUNG_LCI_8_TYPE                      unsigned char
        // Assignment of PIN to function / Zuordnung PIN zu Funktion

#define I3_PID_BDC_AHL_LWR_TMS_ID_LESEN                              0xD5E5
        // Read coding ID of TMS / Codierkennung der TMS lesen

    #define I3_RES_BDC_STAT_TMS_ID_LINKS_WERT                        (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_TMS_ID_LINKS_WERT_UNIT                   'HEX'
    #define I3_RES_BDC_STAT_TMS_ID_LINKS_WERT_TYPE                   unsigned short
        // Coding ID TMS left &lt;&lt;&lt; Details to be filled in by the supplier !!! &gt;&gt;&gt; / Codierkennung TMS
        // links  <<< Details sind vom Lieferanten zu befüllen !!! >>>

    #define I3_RES_BDC_STAT_TMS_ID_RECHTS_WERT                       (RXBUF_UINT(2))
    #define I3_RES_BDC_STAT_TMS_ID_RECHTS_WERT_UNIT                  'HEX'
    #define I3_RES_BDC_STAT_TMS_ID_RECHTS_WERT_TYPE                  unsigned short
        // Coding ID TMS right &lt;&lt;&lt; Details to be filled in by the supplier !!! &gt;&gt;&gt; / Codierkennung TMS
        // rechts <<< Details sind vom Lieferanten zu befüllen !!! >>>

// Skipping AHL_LWR_FAHRSITUATION on 0xD5E6 which takes arguments

#define I3_PID_BDC_HOEHENSTAENDE_SENSOREN                            0xD601
        // Evaluation / status detection of the level sensors. / Auswertung / Zustandserkennung der Höhenstandssensoren.

    // Can't process STAT_HOEHENSTAND_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_HOEHENSTAND_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_VR_WERT              (RXBUF_SINT(0)/1000.0f)
    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_VR_WERT_UNIT         'V'
    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_VR_WERT_TYPE         float
        // Raw signal from the front height sensor. / Rohsignal Sensor Höhenstand vorn.

    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_HR_WERT              (RXBUF_SINT(2)/1000.0f)
    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_HR_WERT_UNIT         'V'
    #define I3_RES_BDC_STAT_HOEHENSTAND_ROHWERT_HR_WERT_TYPE         float
        // Raw signal from the rear height sensor. / Rohsignal Sensor Höhenstand hinten.

    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_VR_NR                 (RXBUF_SINT(4))
    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_VR_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_VR_NR_TYPE            short
        // Status query of the front height level sensor. / Zustandsabfrage Höhenstandssensor vorn.

    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_HR_NR                 (RXBUF_SINT(6))
    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_HR_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_SENSOR_HR_NR_TYPE            short
        // Status query of the rear height level sensor. / Zustandsabfrage Höhenstandssensor hinten.

    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR                        (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR_TYPE                   unsigned char
        // Plausibility level offset. / Plausiblilisierung Höhenstandsoffset.

    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR                        (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR_TYPE                   unsigned char
        // Plausibility level offset. / Plausiblilisierung Höhenstandsoffset.

    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR_1                      (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR_1_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_VR_NR_1_TYPE                 unsigned char
        // Plausibility check of altitude gradient / Plausiblilisierung Höhenstandssteigung

    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR_1                      (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR_1_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_HOEHENSTAND_HR_NR_1_TYPE                 unsigned char
        // Plausibility check of altitude gradient / Plausiblilisierung Höhenstandssteigung

    // Can't process STAT_OFFSET_S0_VR_WERT_0XD601 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S0_HR_WERT_0XD601 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_BDC_HOEHENSTAENDE_VERSORGUNG                          0xD603
        // Supply voltage for level sensors / Versorgungsspannung Höhenstandssensoren

    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_VR_WERT           (RXBUF_SINT(0)/1000.0f)
    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_VR_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_VR_WERT_TYPE      float
        // Output of the supply voltage of the front height sensor in mV. / Ausgabe der Versorgungsspannung des Sensor
        // Höhenstand vorn  in mV.

    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_HR_WERT           (RXBUF_SINT(2)/1000.0f)
    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_HR_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_HOEHENSTAND_VERSORGUNG_HR_WERT_TYPE      float
        // Output of the supply voltage of the rear height sensor in mV. / Ausgabe der Versorgungsspannung des Sensor
        // Höhenstand hinten in mV.

#define I3_PID_BDC_HOEHENSTAENDE_KALIBRIERUNG_LESEN                  0xD604
        // Read out zero point height sensors / Auslesen Nullpunkt Hoehenstandssensoren

    // Can't process STAT_GRADIENT_C0_VR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C0_HR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C1_VR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_GRADIENT_C1_HR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S0_VR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S0_HR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S1_VR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_OFFSET_S1_HR_WERT_0XD604 - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_BDC_STATUS_FES_MODUS                                  0xD611
        // current FES mode / aktueller FES Modus

    #define I3_RES_BDC_STAT_FES_MODUS                                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FES_MODUS_UNIT                           '0-n'
    #define I3_RES_BDC_STAT_FES_MODUS_TYPE                           unsigned char
        // current FES mode / aktueller FES Modus

#define I3_PID_BDC_STATUS_FES_STATISTIK                              0xD612
        // STATUS_FES_STATISTIK / STATUS_FES_STATISTIK

    #define I3_RES_BDC_STAT_ECO_GRUPPE_WERT                          (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_ECO_GRUPPE_WERT_UNIT                     's'
    #define I3_RES_BDC_STAT_ECO_GRUPPE_WERT_TYPE                     unsigned long
        // ECO and ECO + / ECO und ECO+

    #define I3_RES_BDC_STAT_COMFORT_GRUPPE_WERT                      (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_COMFORT_GRUPPE_WERT_UNIT                 's'
    #define I3_RES_BDC_STAT_COMFORT_GRUPPE_WERT_TYPE                 unsigned long
        // Basis and comfort / Basis und Komfort

    #define I3_RES_BDC_STAT_SONSTIGE_WERT                            (RXBUF_UINT32(8))
    #define I3_RES_BDC_STAT_SONSTIGE_WERT_UNIT                       's'
    #define I3_RES_BDC_STAT_SONSTIGE_WERT_TYPE                       unsigned long
        // Other modes / Sonstige Modi

// Skipping STEUERN_FES_MODUS on 0xD613 which takes arguments

#define I3_PID_BDC_SWITCH_BOARD_TASTEN                               0xD622
        // DID for reading out and controlling the switchboard buttons / DID zum Auslesen und Ansteuern der
        // Switchboard-Tasten

    // RES_0xD622_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // DID for reading out and controlling the switchboard buttons / DID zum Auslesen und Ansteuern der
        // Switchboard-Tasten
    #define I3_RES_BDC_RES_0xD622_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_RES_0xD622_D_UNIT                             'bit'
    #define I3_RES_BDC_RES_0xD622_D_TYPE                             unsigned char
        // DID for reading out and controlling the switchboard buttons / DID zum Auslesen und Ansteuern der
        // Switchboard-Tasten

#define I3_PID_BDC_STATUS_FES_DATEN                                  0xD625
        // Status of FES data / Status FES Daten

    #define I3_RES_BDC_STAT_FES_LASTMODE                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FES_LASTMODE_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_FES_LASTMODE_TYPE                        unsigned char
        // Start-up mode / Aufstart Modus

    #define I3_RES_BDC_STAT_FES_SLEEPTIME_WERT                       (RXBUF_UINT32(1))
    #define I3_RES_BDC_STAT_FES_SLEEPTIME_WERT_TYPE                  unsigned long
        // Time off at Kl15 / Zeit bei Kl15 aus

// Skipping STEUERN_FES_DATEN on 0xD626 which takes arguments

#define I3_PID_BDC_SWITCHBOARD_TASTE_VERBAU                          0xD627
        // SWITCHBOARD_TASTE_VERBAU / SWITCHBOARD_TASTE_VERBAU

    #define I3_RES_BDC_STAT_VERBAU_HDC_TASTE                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VERBAU_HDC_TASTE_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_VERBAU_HDC_TASTE_TYPE                    unsigned char
        // Information on the installation status of the button: 0 = not available, 1 = available / Angabe Verbauzustand
        // Taste: 0 = nicht vorhanden, 1 = vorhanden

    #define I3_RES_BDC_STAT_VERBAU_PDC_TASTE                         (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_VERBAU_PDC_TASTE_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_VERBAU_PDC_TASTE_TYPE                    unsigned char
        // Status installation PDC button / Status Verbau PDC Taste

    #define I3_RES_BDC_STAT_VERBAU_SV_TASTE                          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_VERBAU_SV_TASTE_UNIT                     '0/1'
    #define I3_RES_BDC_STAT_VERBAU_SV_TASTE_TYPE                     unsigned char
        // Status installation SV button / Status Verbau SV Taste

    #define I3_RES_BDC_STAT_VERBAU_DSC_TASTE                         (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_VERBAU_DSC_TASTE_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_VERBAU_DSC_TASTE_TYPE                    unsigned char
        // DSC button installation status / Status Verbau DSC Taste

    #define I3_RES_BDC_STAT_VERBAU_FES_WIPPE                         (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_VERBAU_FES_WIPPE_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_VERBAU_FES_WIPPE_TYPE                    unsigned char
        // Indicates whether the FES rocker is installed / Gibt an ob die FES Wippe verbaut ist

    #define I3_RES_BDC_STAT_VERBAU_HUD_TASTE                         (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_VERBAU_HUD_TASTE_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_VERBAU_HUD_TASTE_TYPE                    unsigned char
        // Indicates whether the HUD button is installed / Gibt an ob die HUD Taste verbaut ist

// Skipping SWITCHBOARD_TASTE on 0xD629 which takes arguments

// Skipping CORONA_LED on 0xD62A which takes arguments

#define I3_PID_BDC_AUSSTATTUNG_CORONA_LED                            0xD62B
        // 0: CORONA LED not available; 1: CORONA LED available / 0: CORONA LED nicht vorhanden;  1: CORONA LED vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_CORONA_LED                     (RXBUF_SCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_CORONA_LED_UNIT                '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_CORONA_LED_TYPE                char
        // 0: CORONA LED not available; 1: CORONA LED available / 0: CORONA LED nicht vorhanden;  1: CORONA LED vorhanden

#define I3_PID_BDC_FES_MASTER_SW_FEHLER_INFO                         0xD62D
        // FES Master SW error / FES Master SW Fehler

    #define I3_RES_BDC_STAT_FES_MASTER_SW_FEHLER_INFO_WERT           (RXBUF_SINT32(0))
    #define I3_RES_BDC_STAT_FES_MASTER_SW_FEHLER_INFO_WERT_TYPE      long
        // FES Master SW error / FES Master SW Fehler

// Skipping WISCHER_HECK_SERVICE on 0xD642 which takes arguments

#define I3_PID_BDC_SWITCH_BOARD_TASTEN_VERBAU                        0xD669
        // DID for reading out the assembly of individual switchboard buttons / DID zum Auslesen des Verbaus einzelner
        // Switchboard-Tasten

    // RES_0xD669_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // DID for reading out the assembly of individual switchboard buttons / DID zum Auslesen des Verbaus einzelner
        // Switchboard-Tasten
    #define I3_RES_BDC_RES_0xD669_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_RES_0xD669_D_UNIT                             'bit'
    #define I3_RES_BDC_RES_0xD669_D_TYPE                             unsigned char
        // DID for reading out the assembly of individual switchboard buttons / DID zum Auslesen des Verbaus einzelner
        // Switchboard-Tasten

#define I3_PID_BDC_KUEHLMITTELSTAND                                  0xD672
        // _ON: 1 coolant tank sufficiently filled _VALUE: level in mV / _EIN: 1 Kühlmittelbehälter ausreichend befüllt
        // _WERT: Pegel in mV

    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_EIN                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_EIN_UNIT                '0/1'
    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_EIN_TYPE                unsigned char
        // 0 = coolant tank not sufficiently filled; 1 = coolant tank sufficiently filled / 0= Kühlmittelbehaelter nicht
        // ausreichend befüllt; 1= Kühlmittelbehällter ausreichend befüllt

    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_WERT                    (RXBUF_UINT(1))
    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_WERT_UNIT               'mV'
    #define I3_RES_BDC_STAT_KUEHLMITTELSTAND_WERT_TYPE               unsigned short
        // Specification of the level value in mv. 0xFFFF: invalid value or value not supported / Angabe des Pegelwerts
        // in mv. 0xFFFF: ungültiger Wert oder Wert nicht unterstützt

#define I3_PID_BDC_GURTZUBRINGER_FA                                  0xD71A
        // Driver belt feeder status / Status Gurtzubringer Fahrer

    #define I3_RES_BDC_STAT_GZB_FA_POS_WERT                          (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_GZB_FA_POS_WERT_UNIT                     'Ink'
    #define I3_RES_BDC_STAT_GZB_FA_POS_WERT_TYPE                     unsigned short
        // Current position of the driver's seat belt feeder / Aktuelle Position Gurtzubringer Fahrer

    #define I3_RES_BDC_STAT_GZB_FA_ENDLAGE_EIN                       (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_GZB_FA_ENDLAGE_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_GZB_FA_ENDLAGE_EIN_TYPE                  unsigned char
        // Belt feeder driver end position reached / Gurtzubringer Fahrer Endlage erreicht

#define I3_PID_BDC_GURTZUBRINGER_BF                                  0xD71B
        // Status belt feeder passenger / Status Gurtzubringer Beifahrer

    #define I3_RES_BDC_STAT_GZB_BF_POS_WERT                          (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_GZB_BF_POS_WERT_UNIT                     'Ink'
    #define I3_RES_BDC_STAT_GZB_BF_POS_WERT_TYPE                     unsigned short
        // Current position of the passenger seat belt feeder / Aktuelle Position Gurtzubringer Beifahrer

    #define I3_RES_BDC_STAT_GZB_BF_ENDLAGE_EIN                       (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_GZB_BF_ENDLAGE_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_GZB_BF_ENDLAGE_EIN_TYPE                  unsigned char
        // Belt feeder passenger end position reached / Gurtzubringer Beifahrer Endlage erreicht

// Skipping GURTZUBRINGER_POSITION on 0xD71C which takes arguments

// Skipping GURTZUBRINGER_RICHTUNG on 0xD71D which takes arguments

#define I3_PID_BDC_SITZHEIZUNG_FA_VORHANDEN                          0xD726
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VORHANDEN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VORHANDEN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VORHANDEN_TYPE            unsigned char
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

#define I3_PID_BDC_SITZHEIZUNG_BF_VORHANDEN                          0xD727
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VORHANDEN                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VORHANDEN_UNIT            '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VORHANDEN_TYPE            unsigned char
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

#define I3_PID_BDC_SITZHEIZUNG_FAH_VORHANDEN                         0xD728
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VORHANDEN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VORHANDEN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VORHANDEN_TYPE           unsigned char
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

#define I3_PID_BDC_SITZHEIZUNG_BFH_VORHANDEN                         0xD729
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VORHANDEN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VORHANDEN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VORHANDEN_TYPE           unsigned char
        // 0: Seat heating not available 1: Seat heating available / 0: Sitzheizung nicht vorhanden 1: Sitzheizung
        // vorhanden

// Skipping SITZHEIZUNG_BF_STUFE on 0xD72A which takes arguments

#define I3_PID_BDC_BUS_IN_SITZHEIZUNG_STUFE_BF                       0xD72D
        // Bus message level seat heating passenger side, 0: OFF; 1: level 1; 2: level 2; 3: Level 3 / Busnachricht Stufe
        // Sitzheizung Beifahrerseite, 0: AUS; 1: Stufe 1; 2: Stufe 2;  3: Stufe 3

    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_BF_NR                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_BF_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_BF_NR_TYPE            unsigned char
        // Bus message level seat heating passenger side, 0: OFF; 1: level 1; 2: level 2; 3: Level 3 / Busnachricht Stufe
        // Sitzheizung Beifahrerseite, 0: AUS; 1: Stufe 1; 2: Stufe 2;  3: Stufe 3

// Skipping SITZHEIZUNG_BF_TEMP on 0xD72F which takes arguments

#define I3_PID_BDC_SITZHEIZUNG_BF                                    0xD730
        // Operating condition of the passenger seat heating / Betriebszustand Sitzheizung Beifahrer

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_EIN                       (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_EIN_TYPE                  unsigned char
        // 0: seat heating off 1: seat heating on / 0: Sitzheizung aus  1: Sitzheizung ein

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VERBRAUCHSREDUZIERUNG_EIN (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VERBRAUCHSREDUZIERUNG_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_VERBRAUCHSREDUZIERUNG_EIN_TYPE unsigned char
        // 0: Consumption reduction not active 1: Consumption reduction active / 0: Verbrauchsreduzierung nicht aktiv  1:
        // Verbrauchsreduzierung aktiv

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_NOTBETRIEB_EIN            (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_NOTBETRIEB_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_NOTBETRIEB_EIN_TYPE       unsigned char
        // 0: Seat heating not in emergency mode 1: Seat heating in emergency mode / 0: Sitzheizung nicht in Notbetrieb 
        // 1: Sitzheizung in Notbetrieb

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_TIMEOUT                   (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_TIMEOUT_UNIT              '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BF_TIMEOUT_TYPE              unsigned char
        // 0: No off due to time-out 1: Off due to time-out / 0: Kein Aus wegen Time-Out  1: Aus wegen Time-Out

#define I3_PID_BDC_BUS_IN_SITZHEIZUNG_STUFE_FA                       0xD731
        // Bus message level seat heating driver side, 0: OFF; 1: level 1; 2: level 2; 3: Level 3 / Busnachricht Stufe
        // Sitzheizung Fahrerseite, 0: AUS; 1: Stufe 1; 2: Stufe 2;  3: Stufe 3

    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_FA_NR                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_FA_NR_UNIT            '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_SITZHEIZUNG_FA_NR_TYPE            unsigned char
        // Bus message level seat heating driver side, 0: OFF; 1: level 1; 2: level 2; 3: Level 3 / Busnachricht Stufe
        // Sitzheizung Fahrerseite, 0: AUS; 1: Stufe 1; 2: Stufe 2;  3: Stufe 3

// Skipping SITZHEIZUNG_FA_TEMP on 0xD732 which takes arguments

// Skipping SITZHEIZUNG_FA_STUFE on 0xD737 which takes arguments

#define I3_PID_BDC_VORHANDEN_DRITTE_SITZREIHE_EIN                    0xD762
        // Indicates whether the 3rd row of seats is available: 0 = Third row of seats not coded; 1 = third row of seats
        // coded / Gibt an, ob die 3. Sitzreihe vorhanden ist: 0= Dritte Sitzreihe nicht codiert; 1= Dritte Sitzreihe
        // codiert

    #define I3_RES_BDC_STAT_VORHANDEN_DRITTE_SITZREIHE_EIN           (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VORHANDEN_DRITTE_SITZREIHE_EIN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_DRITTE_SITZREIHE_EIN_TYPE      short
        // Indicates whether the 3rd row of seats is available: 0 = Third row of seats not coded; 1 = third row of seats
        // coded / Gibt an, ob die 3. Sitzreihe vorhanden ist: 0= Dritte Sitzreihe nicht codiert; 1= Dritte Sitzreihe
        // codiert

#define I3_PID_BDC_VERRIEGELUNG_ZWEITE_SITZREIHE                     0xD763
        // 0: Second row of seats not locked; 1: Second row of seats locked / 0: Zweite Sitzreihe nicht verriegelt; 1:
        // Zweite Sitzreihe verriegelt

    #define I3_RES_BDC_STAT_VERRIEGELUNG_ZWEITE_SITZREIHE_EIN        (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_VERRIEGELUNG_ZWEITE_SITZREIHE_EIN_UNIT   '0/1'
    #define I3_RES_BDC_STAT_VERRIEGELUNG_ZWEITE_SITZREIHE_EIN_TYPE   short
        // 0: Second row of seats not locked; 1: Second row of seats locked / 0: Zweite Sitzreihe nicht verriegelt; 1:
        // Zweite Sitzreihe verriegelt

#define I3_PID_BDC_SITZHEIZUNG_FA                                    0xD771
        // Operating status of the driver's seat heating / Betriebszustand Sitzheizung Fahrer

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_EIN                       (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_EIN_UNIT                  '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_EIN_TYPE                  unsigned char
        // 0: seat heating off 1: seat heating on / 0: Sitzheizung aus  1: Sitzheizung ein

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VERBRAUCHSREDUZIERUNG_EIN (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VERBRAUCHSREDUZIERUNG_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_VERBRAUCHSREDUZIERUNG_EIN_TYPE unsigned char
        // 0: Consumption reduction not active 1: Consumption reduction active / 0: Verbrauchsreduzierung nicht aktiv  1:
        // Verbrauchsreduzierung aktiv

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_NOTBETRIEB_EIN            (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_NOTBETRIEB_EIN_UNIT       '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_NOTBETRIEB_EIN_TYPE       unsigned char
        // 0: Seat heating not in emergency mode 1: Seat heating in emergency mode / 0: Sitzheizung nicht in Notbetrieb 
        // 1: Sitzheizung in Notbetrieb

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_TIMEOUT                   (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_TIMEOUT_UNIT              '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FA_TIMEOUT_TYPE              unsigned char
        // 0: No off due to time-out 1: Off due to time-out / 0: Kein Aus wegen Time-Out  1: Aus wegen Time-Out

// Skipping SITZHEIZUNG_BFH_STUFE on 0xD7AA which takes arguments

// Skipping SITZHEIZUNG_BFH_TEMP on 0xD7B0 which takes arguments

#define I3_PID_BDC_SITZHEIZUNG_FAH                                   0xD7EA
        // Operating status of the driver's rear seat heating / Betriebszustand Sitzheizung Fahrer hinten

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_EIN                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_EIN_UNIT                 '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_EIN_TYPE                 unsigned char
        // 0: seat heating off 1: seat heating on / 0: Sitzheizung aus  1: Sitzheizung ein

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VERBRAUCHSREDUZIERUNG_EIN (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VERBRAUCHSREDUZIERUNG_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_VERBRAUCHSREDUZIERUNG_EIN_TYPE unsigned char
        // 0: Consumption reduction not active 1: Consumption reduction active / 0: Verbrauchsreduzierung nicht aktiv 1:
        // Verbrauchsreduzierung aktiv

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_NOTBETRIEB_EIN           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_NOTBETRIEB_EIN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_NOTBETRIEB_EIN_TYPE      unsigned char
        // 0: Seat heating not in emergency mode 1: Seat heating in emergency mode / 0: Sitzheizung nicht in Notbetrieb
        // 1: Sitzheizung in Notbetrieb

    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_TIMEOUT                  (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_TIMEOUT_UNIT             '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_FAH_TIMEOUT_TYPE             unsigned char
        // 0: No off due to time-out 1: Off due to time-out / 0: Kein Aus wegen Time-Out  1: Aus wegen Time-Out

// Skipping SITZHEIZUNG_FAH_STUFE on 0xD7EB which takes arguments

#define I3_PID_BDC_SITZHEIZUNG_BFH                                   0xD7EC
        // Operating status of seat heating, rear passenger / Betriebszustand Sitzheizung Beifahrer hinten

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_EIN                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_EIN_UNIT                 '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_EIN_TYPE                 unsigned char
        // 0: Seat heating OFF 1: Seat heating ON / 0: Sitzheizung AUS  1: Sitzheizung EIN

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VERBRAUCHSREDUZIERUNG_EIN (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VERBRAUCHSREDUZIERUNG_EIN_UNIT '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_VERBRAUCHSREDUZIERUNG_EIN_TYPE unsigned char
        // 0: Consumption reduction not active 1: Consumption reduction active / 0: Verbrauchsreduzierung nicht aktiv 1:
        // Verbrauchsreduzierung aktiv

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_NOTBETRIEB_EIN           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_NOTBETRIEB_EIN_UNIT      '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_NOTBETRIEB_EIN_TYPE      unsigned char
        // 0: Seat heating not in emergency mode 1: Seat heating in emergency mode / 0: Sitzheizung nicht in Notbetrieb 
        // 1: Sitzheizung in Notbetrieb

    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_TIMEOUT                  (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_TIMEOUT_UNIT             '0/1'
    #define I3_RES_BDC_STAT_SITZHEIZUNG_BFH_TIMEOUT_TYPE             unsigned char
        // 0: No off due to time-out 1: Off due to time-out / 0: Kein Aus wegen Time-Out  1: Aus wegen Time-Out

// Skipping SITZHEIZUNG_FAH_TEMP on 0xD7F1 which takes arguments

#define I3_PID_BDC_SITZHEIZUNG_HINTEN_TASTER_VORHANDEN               0xD86C
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_SITZHEIZUNG_TASTER_HINTEN      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SITZHEIZUNG_TASTER_HINTEN_UNIT '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SITZHEIZUNG_TASTER_HINTEN_TYPE unsigned char
        // 0 = not available 1 = available / 0=nicht vorhanden 1=vorhanden

// Skipping WASSERVENTIL_DUO_PWM_WERT on 0xD89E which takes arguments

#define I3_PID_BDC_VORHANDEN_FONDSCHICHTUNG                          0xD8AA
        // 0 = rear stratification potentiometer not available 1 = rear stratification potentiometer available /
        // 0=Fondschichtungspotentiometer nicht vorhanden 1=Fondschichtungspotentiometer vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI_UNIT       '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_FONDSCHICHTUNGSPOTI_TYPE       unsigned char
        // 0 = rear stratification potentiometer not available 1 = rear stratification potentiometer available /
        // 0=Fondschichtungspotentiometer nicht vorhanden 1=Fondschichtungspotentiometer vorhanden

#define I3_PID_BDC_SOLARSENSOR_VORHANDEN                             0xD8AB
        // Solar sensor: 0 = not available / coded; 1 = present / coded / Solarsensor: 0 = nicht vorhanden / codiert; 1 =
        // vorhanden / codiert

    #define I3_RES_BDC_STAT_VORHANDEN_SOLARSENSOR_EIN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_SOLARSENSOR_EIN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_SOLARSENSOR_EIN_TYPE           unsigned char
        // Solar sensor: 0 = not available / coded; 1 = present / coded / Solarsensor: 0 = nicht vorhanden / codiert; 1 =
        // vorhanden / codiert

#define I3_PID_BDC_AUC_SENSOR_VORHANDEN                              0xD8AC
        // AUC sensor: 0 = not available; 1 = present / AUC-Sensor: 0 = nicht vorhanden; 1 = vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_AUC_SENSOR                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_AUC_SENSOR_UNIT                '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_AUC_SENSOR_TYPE                unsigned char
        // AUC sensor: 0 = not available; 1 = present / AUC-Sensor: 0 = nicht vorhanden; 1 = vorhanden

// Skipping UMSCHALTVENTIL on 0xD8DA which takes arguments

// Skipping HK_WIPPE on 0xD8E0 which takes arguments

#define I3_PID_BDC_FENSTERHEBER_VORHANDEN                            0xD8FE
        // Reading out the number of coded window regulators. / Auslesen der Anzahl von kodierten Fensterheber.

    #define I3_RES_BDC_STAT_ANZAHL_FH_KODIERT                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ANZAHL_FH_KODIERT_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_ANZAHL_FH_KODIERT_TYPE                   unsigned char
        // Reading out the number of coded window regulators. / Auslesen der Anzahl von kodierten Fensterheber.

// Skipping ZUSATZWASSERPUMPE on 0xD903 which takes arguments

#define I3_PID_BDC_KLIMAKOMPRESSOR                                   0xD906
        // Status of air conditioning compressor (ON / OFF and PWM) / Status Klimakompressor (EIN / AUS und PWM)

    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_EIN                      (RXBUF_SINT(0))
    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_EIN_UNIT                 '0/1'
    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_EIN_TYPE                 short
        // Air conditioning compressor: 0 = OFF, 1 = ON / Klimakompressor: 0 = AUS, 1 = EIN

    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_PWM_WERT                 (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_PWM_WERT_UNIT            '%'
    #define I3_RES_BDC_STAT_KLIMAKOMPRESSOR_PWM_WERT_TYPE            unsigned char
        // Air conditioning compressor: PWM signal in percent / Klimakompressor: PWM-Signal in Prozent

// Skipping KLIMAKOMPRESSOR_ANSTEUERN on 0xD908 which takes arguments

#define I3_PID_BDC_VORHANDEN_KOMPRESSORKUPPLUNG                      0xD916
        // Read out whether a compressor clutch is available. In the case of PHEV vehicles, the job returns whether a
        // switching valve is present. / Auslesen ob eine Kompressorkupplung vorhanden ist. Bei PHEV-Fahrzeugen gibt der
        // Job zurück, ob ein Umschaltventil vorhanden ist. 

    // RES_0xD916_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // Read out whether a compressor clutch is available. In the case of PHEV vehicles, the job returns whether a
        // switching valve is present. / Auslesen ob eine Kompressorkupplung vorhanden ist. Bei PHEV-Fahrzeugen gibt der
        // Job zurück, ob ein Umschaltventil vorhanden ist. 
    #define I3_RES_BDC_RES_0xD916_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_RES_0xD916_D_UNIT                             'bit'
    #define I3_RES_BDC_RES_0xD916_D_TYPE                             unsigned char
        // Read out whether a compressor clutch is available. In the case of PHEV vehicles, the job returns whether a
        // switching valve is present. / Auslesen ob eine Kompressorkupplung vorhanden ist. Bei PHEV-Fahrzeugen gibt der
        // Job zurück, ob ein Umschaltventil vorhanden ist. 

#define I3_PID_BDC_DRUCKSENSOR_VORHANDEN                             0xD959
        // Indicates whether a pressure sensor is installed for R134A: 0 = not available, 1 = available / Gibt aus, ob
        // ein Drucksensor für R134A verbaut ist: 0 = nicht vorhanden, 1 = vorhanden

    #define I3_RES_BDC_STAT_DRUCKSENSOR_VORHANDEN                    (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_DRUCKSENSOR_VORHANDEN_UNIT               '0/1'
    #define I3_RES_BDC_STAT_DRUCKSENSOR_VORHANDEN_TYPE               unsigned char
        // Indicates whether a pressure sensor is installed for R134A: 0 = not available, 1 = available / Gibt aus, ob
        // ein Drucksensor für R134A verbaut ist: 0 = nicht vorhanden, 1 = vorhanden

#define I3_PID_BDC_VORHANDEN_WASSERVENTIL                            0xD95A
        // Water valve available / Wasserventil vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_MONO              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_MONO_UNIT         '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_MONO_TYPE         unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_DUO               (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_DUO_UNIT          '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_WASSERVENTIL_DUO_TYPE          unsigned char
        // 0 = not available, 1 = available / 0=nicht vorhanden, 1=vorhanden

#define I3_PID_BDC_SOLARSENSOR                                       0xD961
        // Status solar sensor left and right / Status Solarsensor Links und Rechts

    #define I3_RES_BDC_STAT_SOLARSENSOR_FA_WERT                      (RXBUF_UINT(0)*4.0158f)
    #define I3_RES_BDC_STAT_SOLARSENSOR_FA_WERT_UNIT                 'W/m²'
    #define I3_RES_BDC_STAT_SOLARSENSOR_FA_WERT_TYPE                 float
        // Solar sensor, solar value FA. Range 0 to 1020 W / m2 / Solarsensor, Solarwert FA. Bereich 0 bis 1020 W/m2

    #define I3_RES_BDC_STAT_SOLARSENSOR_BF_WERT                      (RXBUF_UINT(2)*4.0158f)
    #define I3_RES_BDC_STAT_SOLARSENSOR_BF_WERT_UNIT                 'W/m²'
    #define I3_RES_BDC_STAT_SOLARSENSOR_BF_WERT_TYPE                 float
        // Solar sensor, solar value BF. Range 0 to 1020 W / m2 / Solarsensor, Solarwert BF. Bereich 0 bis 1020 W/m2

#define I3_PID_BDC_AUC_SENSOR                                        0xD963
        // Indicates which pollutant level the AUC sensor has determined. / Gibt aus, welche Schadstoffstufe der
        // AUC-Sensor ermittelt hat.

    #define I3_RES_BDC_STAT_AUC_SENSOR_NR                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_AUC_SENSOR_NR_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_AUC_SENSOR_NR_TYPE                       unsigned char
        // Indicates which pollutant level the AUC sensor has determined. / Gibt aus, welche Schadstoffstufe der
        // AUC-Sensor ermittelt hat.

#define I3_PID_BDC_DRUCKSENSOR                                       0xD967
        // Output refrigerant pressure in bar. / Ausgabe Kältemitteldruck in bar.

    #define I3_RES_BDC_STAT_R134A_DRUCK_WERT                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_R134A_DRUCK_WERT_UNIT                    'bar'
    #define I3_RES_BDC_STAT_R134A_DRUCK_WERT_TYPE                    unsigned char
        // Output refrigerant pressure in bar. / Ausgabe Kältemitteldruck in bar.

#define I3_PID_BDC_BESCHLAGSENSOR                                    0xD96C
        // Relative humidity and temperature / Relative Feuchte und Temperatur

    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_WERT                      (RXBUF_SINT(0)/2.0f)
    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_WERT_UNIT                 '%'
    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_WERT_TYPE                 float
        // Indication of relative humidity in percent 0 ... 100% / Angabe relative Feuchte in Prozent 0 ... 100 %

    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_TEMP_WERT                 (RXBUF_UCHAR(2)/2.0f-40.0)
    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_TEMP_WERT_UNIT            '°C'
    #define I3_RES_BDC_STAT_BESCHLAGSENSOR_TEMP_WERT_TYPE            float
        // Measured temperature in ° C -40 ... 85 ° C / Gemessene Temperatur in °C -40 ... 85 °C

#define I3_PID_BDC_BESCHLAGSENSOR_VORHANDEN                          0xD96D
        // 0: Condensation sensor not available / coded 1: Condensation sensor available / coded / 0: Beschlagsensor
        // nicht vorhanden / codiert   1: Beschlagsensor vorhanden / codiert

    #define I3_RES_BDC_STAT_VORHANDEN_BESCHLAGSENSOR                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_VORHANDEN_BESCHLAGSENSOR_UNIT            '0/1'
    #define I3_RES_BDC_STAT_VORHANDEN_BESCHLAGSENSOR_TYPE            unsigned char
        // 0: Condensation sensor not available / coded 1: Condensation sensor available / coded / 0: Beschlagsensor
        // nicht vorhanden / codiert   1: Beschlagsensor vorhanden / codiert

#define I3_PID_BDC_FONDSCHICHTUNGS_POTI                              0xD96E
        // Output of the setting of the rear stratification potentiometer: 0-100%, 0xFF: value invalid / Ausgabe der
        // Einstellung des Fond-Schichtungspotentiometer: 0-100 %, 0xFF: Wert ungültig

    #define I3_RES_BDC_STAT_FONDSCHICHTUNGS_POTI_WERT                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FONDSCHICHTUNGS_POTI_WERT_UNIT           '%'
    #define I3_RES_BDC_STAT_FONDSCHICHTUNGS_POTI_WERT_TYPE           unsigned char
        // Output of the setting of the rear stratification potentiometer: 0-100%, 0xFF: value invalid / Ausgabe der
        // Einstellung des Fond-Schichtungspotentiometer: 0-100 %, 0xFF: Wert ungültig

// Skipping HECKSCHEIBENHEIZUNG on 0xD970 which takes arguments

// Skipping KOMPRESSORKUPPLUNG on 0xD971 which takes arguments

#define I3_PID_BDC_DRUCKSENSOR_HOCHAUFLOESEND                        0xD9B8
        // High-resolution refrigerant pressure output: 0.00 - 40.89 bar; 40.90 = short circuit to ground; 40.91 = open
        // circuit or short circuit to battery; 40.92 = not installed; 40.93 = function interface not available; 40.94 =
        // function reporting error; 40.95 = signal unfilled / Ausgabe Kältemitteldruck hochauflösend: 0,00 - 40,89 bar ;
        // 40,90 = Kurzschluss nach Masse;  40,91 = Leitungsunterbrechung oder Kurzschluss nach Batterie;  40,92 = Nicht
        // verbaut;  40,93 = Funktionsschnittstelle nicht verfügbar;  40,94 = Funktion melder Fehler;  40,95 = Signal
        // unbefüllt

    #define I3_RES_BDC_STAT_DRUCK_WERT                               (RXBUF_UINT(0)/100.0f)
    #define I3_RES_BDC_STAT_DRUCK_WERT_UNIT                          'bar'
    #define I3_RES_BDC_STAT_DRUCK_WERT_TYPE                          float
        // High-resolution refrigerant pressure output: 0.00 - 40.89 bar; 40.90 = short circuit to ground; 40.91 = open
        // circuit or short circuit to battery; 40.92 = not installed; 40.93 = function interface not available; 40.94 =
        // function reporting error; 40.95 = signal unfilled / Ausgabe Kältemitteldruck hochauflösend: 0,00 - 40,89 bar ;
        // 40,90 = Kurzschluss nach Masse;  40,91 = Leitungsunterbrechung oder Kurzschluss nach Batterie;  40,92 = Nicht
        // verbaut;  40,93 = Funktionsschnittstelle nicht verfügbar;  40,94 = Funktion melder Fehler;  40,95 = Signal
        // unbefüllt

// Skipping HUD_TASTER on 0xDA0D which takes arguments

#define I3_PID_BDC_LENKRAD_SCHALTPADDLES                             0xDA24
        // Status shift paddles / Status Schaltpaddles

    #define I3_RES_BDC_STAT_LENKRAD_SCHALTPADDLE_NR                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_LENKRAD_SCHALTPADDLE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_LENKRAD_SCHALTPADDLE_NR_TYPE             unsigned char
        // Status shift paddles / Status Schaltpaddles

    #define I3_RES_BDC_STAT_SCHALTPADDLES_AD_WERT                    (RXBUF_UINT(1)/10.0f)
    #define I3_RES_BDC_STAT_SCHALTPADDLES_AD_WERT_UNIT               'V'
    #define I3_RES_BDC_STAT_SCHALTPADDLES_AD_WERT_TYPE               float
        // AD value shift paddles / AD-Wert Schaltpaddles

// Skipping ZV_BEDIENSTELLEN on 0xDA49 which takes arguments

// Skipping STEUERN_HISTORIE_ZUENDUNG_EIN on 0xDA4B which takes arguments

// Skipping STEUERN_KLEMMEN_HISTORIE on 0xDA4C which takes arguments

// Skipping STEUERN_STANDVERBRAUCHER_HISTORIE on 0xDA4D which takes arguments

// Skipping STEUERN_ZV_HISTORIE on 0xDA4E which takes arguments

// Skipping STEUERN_ELV_HISTORIE on 0xDA4F which takes arguments

#define I3_PID_BDC_DC_DC_WANDLER_VORHANDEN                           0xDA54
        // 1: DC / DC converter installed / 1: DC/DC-Wandler verbaut

    #define I3_RES_BDC_STAT_DC_DC_WANDLER_1_VORHANDEN                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_DC_DC_WANDLER_1_VORHANDEN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_DC_DC_WANDLER_1_VORHANDEN_TYPE           unsigned char
        // 0: DC / DC converter 1 not available 1: DC / DC converter 1 available / 0: DC/DC-Wandler 1 nicht vorhanden 1:
        // DC/DC-Wandler 1 vorhanden

    #define I3_RES_BDC_STAT_DC_DC_WANDLER_2_VORHANDEN                (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_DC_DC_WANDLER_2_VORHANDEN_UNIT           '0/1'
    #define I3_RES_BDC_STAT_DC_DC_WANDLER_2_VORHANDEN_TYPE           unsigned char
        // 0: DC / DC converter 2 not available 1: DC / DC converter 2 available / 0: DC/DC-Wandler 2 nicht vorhanden 1:
        // DC/DC-Wandler 2 vorhanden

// Skipping LAYERING_LIN_EIN on 0xDA5E which takes arguments

#define I3_PID_BDC_STAT_LIN_LAYERING                                 0xDA5F
        // The status of the LIN slaves in the layering system is queried and output. / Es wird der Status der LIN Slaves
        // im Layering System abgefragt und ausgegeben.

    #define I3_RES_BDC_STAT_SLAVE_NAME_1_WERT                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SLAVE_NAME_1_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_1_WERT                          (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LED_BLUE_1_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_1_WERT                         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_LED_GREEN_1_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_1_WERT                           (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_LED_RED_1_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_1_WERT                        (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_BRIGHTNESS_1_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_1_WERT                         (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_LED_WHITE_1_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_1_WERT                (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_1_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_1_WERT                   (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_1_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_1_WERT                  (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_1_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_1_WERT                     (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_1_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_2_WERT                        (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_SLAVE_NAME_2_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_2_WERT                          (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_LED_BLUE_2_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_2_WERT                         (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_LED_GREEN_2_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_2_WERT                           (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_LED_RED_2_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_2_WERT                        (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_BRIGHTNESS_2_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_2_WERT                         (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_LED_WHITE_2_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_2_WERT                (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_2_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_2_WERT                   (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_2_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_2_WERT                  (RXBUF_UCHAR(18))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_2_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_2_WERT                     (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_2_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_3_WERT                        (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_SLAVE_NAME_3_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_3_WERT                          (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_LED_BLUE_3_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_3_WERT                         (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_LED_GREEN_3_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_3_WERT                           (RXBUF_UCHAR(23))
    #define I3_RES_BDC_STAT_LED_RED_3_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_3_WERT                        (RXBUF_UCHAR(24))
    #define I3_RES_BDC_STAT_BRIGHTNESS_3_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_3_WERT                         (RXBUF_UCHAR(25))
    #define I3_RES_BDC_STAT_LED_WHITE_3_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_3_WERT                (RXBUF_UCHAR(26))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_3_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_3_WERT                   (RXBUF_UCHAR(27))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_3_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_3_WERT                  (RXBUF_UCHAR(28))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_3_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_3_WERT                     (RXBUF_UCHAR(29))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_3_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_4_WERT                        (RXBUF_UCHAR(30))
    #define I3_RES_BDC_STAT_SLAVE_NAME_4_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_4_WERT                          (RXBUF_UCHAR(31))
    #define I3_RES_BDC_STAT_LED_BLUE_4_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_4_WERT                         (RXBUF_UCHAR(32))
    #define I3_RES_BDC_STAT_LED_GREEN_4_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_4_WERT                           (RXBUF_UCHAR(33))
    #define I3_RES_BDC_STAT_LED_RED_4_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_4_WERT                        (RXBUF_UCHAR(34))
    #define I3_RES_BDC_STAT_BRIGHTNESS_4_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_4_WERT                         (RXBUF_UCHAR(35))
    #define I3_RES_BDC_STAT_LED_WHITE_4_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_4_WERT                (RXBUF_UCHAR(36))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_4_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_4_WERT                   (RXBUF_UCHAR(37))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_4_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_4_WERT                  (RXBUF_UCHAR(38))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_4_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_4_WERT                     (RXBUF_UCHAR(39))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_4_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_5_WERT                        (RXBUF_UCHAR(40))
    #define I3_RES_BDC_STAT_SLAVE_NAME_5_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_5_WERT                          (RXBUF_UCHAR(41))
    #define I3_RES_BDC_STAT_LED_BLUE_5_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_5_WERT                         (RXBUF_UCHAR(42))
    #define I3_RES_BDC_STAT_LED_GREEN_5_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_5_WERT                           (RXBUF_UCHAR(43))
    #define I3_RES_BDC_STAT_LED_RED_5_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_5_WERT                        (RXBUF_UCHAR(44))
    #define I3_RES_BDC_STAT_BRIGHTNESS_5_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_5_WERT                         (RXBUF_UCHAR(45))
    #define I3_RES_BDC_STAT_LED_WHITE_5_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_5_WERT                (RXBUF_UCHAR(46))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_5_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_5_WERT                   (RXBUF_UCHAR(47))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_5_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_5_WERT                  (RXBUF_UCHAR(48))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_5_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_5_WERT                     (RXBUF_UCHAR(49))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_5_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_6_WERT                        (RXBUF_UCHAR(50))
    #define I3_RES_BDC_STAT_SLAVE_NAME_6_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_6_WERT                          (RXBUF_UCHAR(51))
    #define I3_RES_BDC_STAT_LED_BLUE_6_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_6_WERT                         (RXBUF_UCHAR(52))
    #define I3_RES_BDC_STAT_LED_GREEN_6_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_6_WERT                           (RXBUF_UCHAR(53))
    #define I3_RES_BDC_STAT_LED_RED_6_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_6_WERT                        (RXBUF_UCHAR(54))
    #define I3_RES_BDC_STAT_BRIGHTNESS_6_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_6_WERT                         (RXBUF_UCHAR(55))
    #define I3_RES_BDC_STAT_LED_WHITE_6_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_6_WERT                (RXBUF_UCHAR(56))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_6_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_6_WERT                   (RXBUF_UCHAR(57))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_6_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_6_WERT                  (RXBUF_UCHAR(58))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_6_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_6_WERT                     (RXBUF_UCHAR(59))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_6_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_7_WERT                        (RXBUF_UCHAR(60))
    #define I3_RES_BDC_STAT_SLAVE_NAME_7_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_7_WERT                          (RXBUF_UCHAR(61))
    #define I3_RES_BDC_STAT_LED_BLUE_7_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_7_WERT                         (RXBUF_UCHAR(62))
    #define I3_RES_BDC_STAT_LED_GREEN_7_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_7_WERT                           (RXBUF_UCHAR(63))
    #define I3_RES_BDC_STAT_LED_RED_7_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_7_WERT                        (RXBUF_UCHAR(64))
    #define I3_RES_BDC_STAT_BRIGHTNESS_7_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_7_WERT                         (RXBUF_UCHAR(65))
    #define I3_RES_BDC_STAT_LED_WHITE_7_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_7_WERT                (RXBUF_UCHAR(66))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_7_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_7_WERT                   (RXBUF_UCHAR(67))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_7_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_7_WERT                  (RXBUF_UCHAR(68))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_7_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_7_WERT                     (RXBUF_UCHAR(69))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_7_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_8_WERT                        (RXBUF_UCHAR(70))
    #define I3_RES_BDC_STAT_SLAVE_NAME_8_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_8_WERT                          (RXBUF_UCHAR(71))
    #define I3_RES_BDC_STAT_LED_BLUE_8_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_8_WERT                         (RXBUF_UCHAR(72))
    #define I3_RES_BDC_STAT_LED_GREEN_8_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_8_WERT                           (RXBUF_UCHAR(73))
    #define I3_RES_BDC_STAT_LED_RED_8_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_8_WERT                        (RXBUF_UCHAR(74))
    #define I3_RES_BDC_STAT_BRIGHTNESS_8_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_8_WERT                         (RXBUF_UCHAR(75))
    #define I3_RES_BDC_STAT_LED_WHITE_8_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_8_WERT                (RXBUF_UCHAR(76))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_8_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_8_WERT                   (RXBUF_UCHAR(77))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_8_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_8_WERT                  (RXBUF_UCHAR(78))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_8_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_8_WERT                     (RXBUF_UCHAR(79))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_8_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_9_WERT                        (RXBUF_UCHAR(80))
    #define I3_RES_BDC_STAT_SLAVE_NAME_9_WERT_TYPE                   unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_9_WERT                          (RXBUF_UCHAR(81))
    #define I3_RES_BDC_STAT_LED_BLUE_9_WERT_TYPE                     unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_9_WERT                         (RXBUF_UCHAR(82))
    #define I3_RES_BDC_STAT_LED_GREEN_9_WERT_TYPE                    unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_9_WERT                           (RXBUF_UCHAR(83))
    #define I3_RES_BDC_STAT_LED_RED_9_WERT_TYPE                      unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_9_WERT                        (RXBUF_UCHAR(84))
    #define I3_RES_BDC_STAT_BRIGHTNESS_9_WERT_TYPE                   unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_9_WERT                         (RXBUF_UCHAR(85))
    #define I3_RES_BDC_STAT_LED_WHITE_9_WERT_TYPE                    unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_9_WERT                (RXBUF_UCHAR(86))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_9_WERT_TYPE           unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_9_WERT                   (RXBUF_UCHAR(87))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_9_WERT_TYPE              unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_9_WERT                  (RXBUF_UCHAR(88))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_9_WERT_TYPE             unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_9_WERT                     (RXBUF_UCHAR(89))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_9_WERT_TYPE                unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_10_WERT                       (RXBUF_UCHAR(90))
    #define I3_RES_BDC_STAT_SLAVE_NAME_10_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_10_WERT                         (RXBUF_UCHAR(91))
    #define I3_RES_BDC_STAT_LED_BLUE_10_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_10_WERT                        (RXBUF_UCHAR(92))
    #define I3_RES_BDC_STAT_LED_GREEN_10_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_10_WERT                          (RXBUF_UCHAR(93))
    #define I3_RES_BDC_STAT_LED_RED_10_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_10_WERT                       (RXBUF_UCHAR(94))
    #define I3_RES_BDC_STAT_BRIGHTNESS_10_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_10_WERT                        (RXBUF_UCHAR(95))
    #define I3_RES_BDC_STAT_LED_WHITE_10_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_10_WERT               (RXBUF_UCHAR(96))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_10_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_10_WERT                  (RXBUF_UCHAR(97))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_10_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_10_WERT                 (RXBUF_UCHAR(98))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_10_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_10_WERT                    (RXBUF_UCHAR(99))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_10_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_11_WERT                       (RXBUF_UCHAR(100))
    #define I3_RES_BDC_STAT_SLAVE_NAME_11_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_11_WERT                         (RXBUF_UCHAR(101))
    #define I3_RES_BDC_STAT_LED_BLUE_11_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_11_WERT                        (RXBUF_UCHAR(102))
    #define I3_RES_BDC_STAT_LED_GREEN_11_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_11_WERT                          (RXBUF_UCHAR(103))
    #define I3_RES_BDC_STAT_LED_RED_11_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_11_WERT                       (RXBUF_UCHAR(104))
    #define I3_RES_BDC_STAT_BRIGHTNESS_11_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_11_WERT                        (RXBUF_UCHAR(105))
    #define I3_RES_BDC_STAT_LED_WHITE_11_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_11_WERT               (RXBUF_UCHAR(106))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_11_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_11_WERT                  (RXBUF_UCHAR(107))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_11_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_11_WERT                 (RXBUF_UCHAR(108))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_11_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_11_WERT                    (RXBUF_UCHAR(109))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_11_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_12_WERT                       (RXBUF_UCHAR(110))
    #define I3_RES_BDC_STAT_SLAVE_NAME_12_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_12_WERT                         (RXBUF_UCHAR(111))
    #define I3_RES_BDC_STAT_LED_BLUE_12_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_12_WERT                        (RXBUF_UCHAR(112))
    #define I3_RES_BDC_STAT_LED_GREEN_12_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_12_WERT                          (RXBUF_UCHAR(113))
    #define I3_RES_BDC_STAT_LED_RED_12_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_12_WERT                       (RXBUF_UCHAR(114))
    #define I3_RES_BDC_STAT_BRIGHTNESS_12_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_12_WERT                        (RXBUF_UCHAR(115))
    #define I3_RES_BDC_STAT_LED_WHITE_12_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_12_WERT               (RXBUF_UCHAR(116))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_12_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_12_WERT                  (RXBUF_UCHAR(117))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_12_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_12_WERT                 (RXBUF_UCHAR(118))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_12_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_12_WERT                    (RXBUF_UCHAR(119))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_12_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_13_WERT                       (RXBUF_UCHAR(120))
    #define I3_RES_BDC_STAT_SLAVE_NAME_13_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_13_WERT                         (RXBUF_UCHAR(121))
    #define I3_RES_BDC_STAT_LED_BLUE_13_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_13_WERT                        (RXBUF_UCHAR(122))
    #define I3_RES_BDC_STAT_LED_GREEN_13_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_13_WERT                          (RXBUF_UCHAR(123))
    #define I3_RES_BDC_STAT_LED_RED_13_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_13_WERT                       (RXBUF_UCHAR(124))
    #define I3_RES_BDC_STAT_BRIGHTNESS_13_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_13_WERT                        (RXBUF_UCHAR(125))
    #define I3_RES_BDC_STAT_LED_WHITE_13_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_13_WERT               (RXBUF_UCHAR(126))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_13_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_13_WERT                  (RXBUF_UCHAR(127))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_13_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_13_WERT                 (RXBUF_UCHAR(128))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_13_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_13_WERT                    (RXBUF_UCHAR(129))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_13_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_14_WERT                       (RXBUF_UCHAR(130))
    #define I3_RES_BDC_STAT_SLAVE_NAME_14_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_14_WERT                         (RXBUF_UCHAR(131))
    #define I3_RES_BDC_STAT_LED_BLUE_14_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_14_WERT                        (RXBUF_UCHAR(132))
    #define I3_RES_BDC_STAT_LED_GREEN_14_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_14_WERT                          (RXBUF_UCHAR(133))
    #define I3_RES_BDC_STAT_LED_RED_14_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_14_WERT                       (RXBUF_UCHAR(134))
    #define I3_RES_BDC_STAT_BRIGHTNESS_14_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_14_WERT                        (RXBUF_UCHAR(135))
    #define I3_RES_BDC_STAT_LED_WHITE_14_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_14_WERT               (RXBUF_UCHAR(136))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_14_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_14_WERT                  (RXBUF_UCHAR(137))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_14_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_14_WERT                 (RXBUF_UCHAR(138))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_14_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_14_WERT                    (RXBUF_UCHAR(139))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_14_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_15_WERT                       (RXBUF_UCHAR(140))
    #define I3_RES_BDC_STAT_SLAVE_NAME_15_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_15_WERT                         (RXBUF_UCHAR(141))
    #define I3_RES_BDC_STAT_LED_BLUE_15_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_15_WERT                        (RXBUF_UCHAR(142))
    #define I3_RES_BDC_STAT_LED_GREEN_15_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_15_WERT                          (RXBUF_UCHAR(143))
    #define I3_RES_BDC_STAT_LED_RED_15_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_15_WERT                       (RXBUF_UCHAR(144))
    #define I3_RES_BDC_STAT_BRIGHTNESS_15_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_15_WERT                        (RXBUF_UCHAR(145))
    #define I3_RES_BDC_STAT_LED_WHITE_15_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_15_WERT               (RXBUF_UCHAR(146))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_15_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_15_WERT                  (RXBUF_UCHAR(147))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_15_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_15_WERT                 (RXBUF_UCHAR(148))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_15_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_15_WERT                    (RXBUF_UCHAR(149))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_15_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_16_WERT                       (RXBUF_UCHAR(150))
    #define I3_RES_BDC_STAT_SLAVE_NAME_16_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_16_WERT                         (RXBUF_UCHAR(151))
    #define I3_RES_BDC_STAT_LED_BLUE_16_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_16_WERT                        (RXBUF_UCHAR(152))
    #define I3_RES_BDC_STAT_LED_GREEN_16_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_16_WERT                          (RXBUF_UCHAR(153))
    #define I3_RES_BDC_STAT_LED_RED_16_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_16_WERT                       (RXBUF_UCHAR(154))
    #define I3_RES_BDC_STAT_BRIGHTNESS_16_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_16_WERT                        (RXBUF_UCHAR(155))
    #define I3_RES_BDC_STAT_LED_WHITE_16_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_16_WERT               (RXBUF_UCHAR(156))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_16_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_16_WERT                  (RXBUF_UCHAR(157))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_16_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_16_WERT                 (RXBUF_UCHAR(158))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_16_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_16_WERT                    (RXBUF_UCHAR(159))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_16_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_17_WERT                       (RXBUF_UCHAR(160))
    #define I3_RES_BDC_STAT_SLAVE_NAME_17_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_17_WERT                         (RXBUF_UCHAR(161))
    #define I3_RES_BDC_STAT_LED_BLUE_17_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_17_WERT                        (RXBUF_UCHAR(162))
    #define I3_RES_BDC_STAT_LED_GREEN_17_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_17_WERT                          (RXBUF_UCHAR(163))
    #define I3_RES_BDC_STAT_LED_RED_17_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_17_WERT                       (RXBUF_UCHAR(164))
    #define I3_RES_BDC_STAT_BRIGHTNESS_17_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_17_WERT                        (RXBUF_UCHAR(165))
    #define I3_RES_BDC_STAT_LED_WHITE_17_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_17_WERT               (RXBUF_UCHAR(166))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_17_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_17_WERT                  (RXBUF_UCHAR(167))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_17_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_17_WERT                 (RXBUF_UCHAR(168))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_17_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_17_WERT                    (RXBUF_UCHAR(169))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_17_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_18_WERT                       (RXBUF_UCHAR(170))
    #define I3_RES_BDC_STAT_SLAVE_NAME_18_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_18_WERT                         (RXBUF_UCHAR(171))
    #define I3_RES_BDC_STAT_LED_BLUE_18_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_18_WERT                        (RXBUF_UCHAR(172))
    #define I3_RES_BDC_STAT_LED_GREEN_18_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_18_WERT                          (RXBUF_UCHAR(173))
    #define I3_RES_BDC_STAT_LED_RED_18_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_18_WERT                       (RXBUF_UCHAR(174))
    #define I3_RES_BDC_STAT_BRIGHTNESS_18_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_18_WERT                        (RXBUF_UCHAR(175))
    #define I3_RES_BDC_STAT_LED_WHITE_18_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_18_WERT               (RXBUF_UCHAR(176))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_18_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_18_WERT                  (RXBUF_UCHAR(177))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_18_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_18_WERT                 (RXBUF_UCHAR(178))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_18_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_18_WERT                    (RXBUF_UCHAR(179))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_18_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_19_WERT                       (RXBUF_UCHAR(180))
    #define I3_RES_BDC_STAT_SLAVE_NAME_19_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_19_WERT                         (RXBUF_UCHAR(181))
    #define I3_RES_BDC_STAT_LED_BLUE_19_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_19_WERT                        (RXBUF_UCHAR(182))
    #define I3_RES_BDC_STAT_LED_GREEN_19_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_19_WERT                          (RXBUF_UCHAR(183))
    #define I3_RES_BDC_STAT_LED_RED_19_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_19_WERT                       (RXBUF_UCHAR(184))
    #define I3_RES_BDC_STAT_BRIGHTNESS_19_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_19_WERT                        (RXBUF_UCHAR(185))
    #define I3_RES_BDC_STAT_LED_WHITE_19_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_19_WERT               (RXBUF_UCHAR(186))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_19_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_19_WERT                  (RXBUF_UCHAR(187))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_19_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_19_WERT                 (RXBUF_UCHAR(188))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_19_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_19_WERT                    (RXBUF_UCHAR(189))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_19_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_20_WERT                       (RXBUF_UCHAR(190))
    #define I3_RES_BDC_STAT_SLAVE_NAME_20_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_20_WERT                         (RXBUF_UCHAR(191))
    #define I3_RES_BDC_STAT_LED_BLUE_20_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_20_WERT                        (RXBUF_UCHAR(192))
    #define I3_RES_BDC_STAT_LED_GREEN_20_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_20_WERT                          (RXBUF_UCHAR(193))
    #define I3_RES_BDC_STAT_LED_RED_20_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_20_WERT                       (RXBUF_UCHAR(194))
    #define I3_RES_BDC_STAT_BRIGHTNESS_20_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_20_WERT                        (RXBUF_UCHAR(195))
    #define I3_RES_BDC_STAT_LED_WHITE_20_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_20_WERT               (RXBUF_UCHAR(196))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_20_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_20_WERT                  (RXBUF_UCHAR(197))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_20_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_20_WERT                 (RXBUF_UCHAR(198))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_20_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_20_WERT                    (RXBUF_UCHAR(199))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_20_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_21_WERT                       (RXBUF_UCHAR(200))
    #define I3_RES_BDC_STAT_SLAVE_NAME_21_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_21_WERT                         (RXBUF_UCHAR(201))
    #define I3_RES_BDC_STAT_LED_BLUE_21_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_21_WERT                        (RXBUF_UCHAR(202))
    #define I3_RES_BDC_STAT_LED_GREEN_21_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_21_WERT                          (RXBUF_UCHAR(203))
    #define I3_RES_BDC_STAT_LED_RED_21_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_21_WERT                       (RXBUF_UCHAR(204))
    #define I3_RES_BDC_STAT_BRIGHTNESS_21_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_21_WERT                        (RXBUF_UCHAR(205))
    #define I3_RES_BDC_STAT_LED_WHITE_21_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_21_WERT               (RXBUF_UCHAR(206))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_21_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_21_WERT                  (RXBUF_UCHAR(207))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_21_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_21_WERT                 (RXBUF_UCHAR(208))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_21_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_21_WERT                    (RXBUF_UCHAR(209))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_21_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_22_WERT                       (RXBUF_UCHAR(210))
    #define I3_RES_BDC_STAT_SLAVE_NAME_22_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_22_WERT                         (RXBUF_UCHAR(211))
    #define I3_RES_BDC_STAT_LED_BLUE_22_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_22_WERT                        (RXBUF_UCHAR(212))
    #define I3_RES_BDC_STAT_LED_GREEN_22_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_22_WERT                          (RXBUF_UCHAR(213))
    #define I3_RES_BDC_STAT_LED_RED_22_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_22_WERT                       (RXBUF_UCHAR(214))
    #define I3_RES_BDC_STAT_BRIGHTNESS_22_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_22_WERT                        (RXBUF_UCHAR(215))
    #define I3_RES_BDC_STAT_LED_WHITE_22_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_22_WERT               (RXBUF_UCHAR(216))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_22_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_22_WERT                  (RXBUF_UCHAR(217))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_22_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_22_WERT                 (RXBUF_UCHAR(218))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_22_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_22_WERT                    (RXBUF_UCHAR(219))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_22_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_23_WERT                       (RXBUF_UCHAR(220))
    #define I3_RES_BDC_STAT_SLAVE_NAME_23_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_23_WERT                         (RXBUF_UCHAR(221))
    #define I3_RES_BDC_STAT_LED_BLUE_23_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_23_WERT                        (RXBUF_UCHAR(222))
    #define I3_RES_BDC_STAT_LED_GREEN_23_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_23_WERT                          (RXBUF_UCHAR(223))
    #define I3_RES_BDC_STAT_LED_RED_23_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_23_WERT                       (RXBUF_UCHAR(224))
    #define I3_RES_BDC_STAT_BRIGHTNESS_23_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_23_WERT                        (RXBUF_UCHAR(225))
    #define I3_RES_BDC_STAT_LED_WHITE_23_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_23_WERT               (RXBUF_UCHAR(226))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_23_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_23_WERT                  (RXBUF_UCHAR(227))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_23_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_23_WERT                 (RXBUF_UCHAR(228))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_23_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_23_WERT                    (RXBUF_UCHAR(229))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_23_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_24_WERT                       (RXBUF_UCHAR(230))
    #define I3_RES_BDC_STAT_SLAVE_NAME_24_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_24_WERT                         (RXBUF_UCHAR(231))
    #define I3_RES_BDC_STAT_LED_BLUE_24_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_24_WERT                        (RXBUF_UCHAR(232))
    #define I3_RES_BDC_STAT_LED_GREEN_24_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_24_WERT                          (RXBUF_UCHAR(233))
    #define I3_RES_BDC_STAT_LED_RED_24_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_24_WERT                       (RXBUF_UCHAR(234))
    #define I3_RES_BDC_STAT_BRIGHTNESS_24_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_24_WERT                        (RXBUF_UCHAR(235))
    #define I3_RES_BDC_STAT_LED_WHITE_24_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_24_WERT               (RXBUF_UCHAR(236))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_24_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_24_WERT                  (RXBUF_UCHAR(237))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_24_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_24_WERT                 (RXBUF_UCHAR(238))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_24_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_24_WERT                    (RXBUF_UCHAR(239))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_24_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_25_WERT                       (RXBUF_UCHAR(240))
    #define I3_RES_BDC_STAT_SLAVE_NAME_25_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_25_WERT                         (RXBUF_UCHAR(241))
    #define I3_RES_BDC_STAT_LED_BLUE_25_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_25_WERT                        (RXBUF_UCHAR(242))
    #define I3_RES_BDC_STAT_LED_GREEN_25_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_25_WERT                          (RXBUF_UCHAR(243))
    #define I3_RES_BDC_STAT_LED_RED_25_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_25_WERT                       (RXBUF_UCHAR(244))
    #define I3_RES_BDC_STAT_BRIGHTNESS_25_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_25_WERT                        (RXBUF_UCHAR(245))
    #define I3_RES_BDC_STAT_LED_WHITE_25_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_25_WERT               (RXBUF_UCHAR(246))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_25_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_25_WERT                  (RXBUF_UCHAR(247))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_25_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_25_WERT                 (RXBUF_UCHAR(248))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_25_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_25_WERT                    (RXBUF_UCHAR(249))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_25_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

    #define I3_RES_BDC_STAT_SLAVE_NAME_26_WERT                       (RXBUF_UCHAR(250))
    #define I3_RES_BDC_STAT_SLAVE_NAME_26_WERT_TYPE                  unsigned char
        // Lin slave name read from the coding. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT / Lin Slave Name aus der
        // Kodierung ausgelesen. Slave 1 = Status_LRL_1_LIN = RGB_LIN_SLAVE_1_FKT

    #define I3_RES_BDC_STAT_LED_BLUE_26_WERT                         (RXBUF_UCHAR(251))
    #define I3_RES_BDC_STAT_LED_BLUE_26_WERT_TYPE                    unsigned char
        // Reported status of the blue LED of the LIN slave / Rückgemeldeter Status der Blauen  LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_GREEN_26_WERT                        (RXBUF_UCHAR(252))
    #define I3_RES_BDC_STAT_LED_GREEN_26_WERT_TYPE                   unsigned char
        // Reported status of the green LED of the LIN slave / Rückgemeldeter Status der grünen LED des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_RED_26_WERT                          (RXBUF_UCHAR(253))
    #define I3_RES_BDC_STAT_LED_RED_26_WERT_TYPE                     unsigned char
        // Reported status of the red LED of the LIN slave / Rückgemeldeter Status der roten LED des LIN-Slaves

    #define I3_RES_BDC_STAT_BRIGHTNESS_26_WERT                       (RXBUF_UCHAR(254))
    #define I3_RES_BDC_STAT_BRIGHTNESS_26_WERT_TYPE                  unsigned char
        // Status value brightness of the LIN slave / Statuswert Helligkeit des LIN-Slaves

    #define I3_RES_BDC_STAT_LED_WHITE_26_WERT                        (RXBUF_UCHAR(255))
    #define I3_RES_BDC_STAT_LED_WHITE_26_WERT_TYPE                   unsigned char
        // Status of the white footwell LED / Status der weißen Fussraum LED

    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_26_WERT               (RXBUF_UCHAR(256))
    #define I3_RES_BDC_STAT_FEHLER_KURZSCHLUSS_26_WERT_TYPE          unsigned char
        // Reported short circuit fault / Gemeldeter Kurzschlussfehler

    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_26_WERT                  (RXBUF_UCHAR(257))
    #define I3_RES_BDC_STAT_FEHLER_OVERTEMP_26_WERT_TYPE             unsigned char
        // Reported overtemperature error / Gemeldeter Übertemperaturfehler

    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_26_WERT                 (RXBUF_UCHAR(258))
    #define I3_RES_BDC_STAT_FEHLER_OPEN_LOAD_26_WERT_TYPE            unsigned char
        // Reported open load error / Gemeldeter Open Load Fehler

    #define I3_RES_BDC_STAT_FEHLER_INTERN_26_WERT                    (RXBUF_UCHAR(259))
    #define I3_RES_BDC_STAT_FEHLER_INTERN_26_WERT_TYPE               unsigned char
        // Reported internal error / Gemeldeter interer Fehler

#define I3_PID_BDC_STATUS_CODIERUNG_FAHRZEUGKLAPPEN                  0xDA61
        // The job is used to read out the coded vehicle flaps. / Der Job dient zum Auslesen der kodierten
        // Fahrzeugklappen.

    #define I3_RES_BDC_STAT_CODIERUNG_FRONTKLAPPE                    (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_CODIERUNG_FRONTKLAPPE_UNIT               '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_FRONTKLAPPE_TYPE               unsigned char
        // The result returns whether the front flap is activated in the coding. 0 = not active 1 = active / Das Ergebnis
        // gibt zurück ob die Frontklappe in den Codierung aktiviert ist. 0 = Nicht aktiv 1 = Aktiv

    #define I3_RES_BDC_STAT_CODIERUNG_HECKKLAPPE                     (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_CODIERUNG_HECKKLAPPE_UNIT                '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_HECKKLAPPE_TYPE                unsigned char
        // The result returns whether the tailgate is activated in the coding. 0 = not active 1 = active / Das Ergebnis
        // gibt zurück ob die Heckklappe in den Codierung aktiviert ist. 0 = Nicht aktiv 1 = Aktiv

    #define I3_RES_BDC_STAT_CODIERUNG_HECKSCHEIBE                    (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_CODIERUNG_HECKSCHEIBE_UNIT               '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_HECKSCHEIBE_TYPE               unsigned char
        // The result returns whether the rear window is activated in the coding. 0 = not active 1 = active / Das
        // Ergebnis gibt zurück ob die Heckscheibe in den Codierung aktiviert ist. 0 = Nicht aktiv 1 = Aktiv

    #define I3_RES_BDC_STAT_CODIERUNG_MOTORHAUBE                     (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_CODIERUNG_MOTORHAUBE_UNIT                '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_MOTORHAUBE_TYPE                unsigned char
        // The result returns whether the bonnet is activated in the coding. 0 = not active 1 = active / Das Ergebnis
        // gibt zurück ob die Motorhaube in den Codierung aktiviert ist. 0 = Nicht aktiv 1 = Aktiv

    #define I3_RES_BDC_STAT_CODIERUNG_SPLITDOORS                     (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_CODIERUNG_SPLITDOORS_UNIT                '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_SPLITDOORS_TYPE                unsigned char
        // The result returns whether the split doors are activated in the coding. 0 = not active 1 = active / Das
        // Ergebnis gibt zurück ob die Split Doors in den Codierung aktiviert sind. 0 = Nicht aktiv 1 = Aktiv

// Skipping LAYERING_LIN_EINZELN on 0xDA62 which takes arguments

// Skipping TUERKONTAKT_BF on 0xDA77 which takes arguments

// Skipping TUERKONTAKT_BFH on 0xDA78 which takes arguments

// Skipping TUERKONTAKT_FA on 0xDA79 which takes arguments

// Skipping TUERKONTAKT_FAH on 0xDA7A which takes arguments

#define I3_PID_BDC_TUERKONTAKT_BFH_OBEN                              0xDA7B
        // STAT_TUERKONTAKT_BFH_OBEN / STAT_TUERKONTAKT_BFH_OBEN

    #define I3_RES_BDC_STAT_TUERKONTAKT_BFH_OBEN                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TUERKONTAKT_BFH_OBEN_UNIT                '0-n'
    #define I3_RES_BDC_STAT_TUERKONTAKT_BFH_OBEN_TYPE                unsigned char
        // STAT_TUERKONTAKT_BFH_OBEN / STAT_TUERKONTAKT_BFH_OBEN

// Skipping HECKKLAPPE_TASTER_AUSSEN on 0xDA7D which takes arguments

#define I3_PID_BDC_TUERKONTAKT_FAH_OBEN                              0xDA7E
        // The result contains the current state of the HW input, door contact, driver's door top rear. Note: For value 8
        // = contact not installed, the coding value CLI_REAR_DOOR_CONTACT_TOP_ASSEMBLED must be evaluated. / Das Result
        // enthält den aktuellen Zustand des HW-Eingang Türkontakt Fahrertür hinten oben. Hinweis: Für Wert  8 = Kontakt
        // nicht verbaut  muss der Codierwert CLI_REAR_DOOR_CONTACT_TOP_ASSEMBLED ausgewertet werden.

    #define I3_RES_BDC_STAT_TUERKONTAKT_FA_OBEN                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TUERKONTAKT_FA_OBEN_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_TUERKONTAKT_FA_OBEN_TYPE                 unsigned char
        // The result contains the current state of the HW input, door contact, driver's door top rear. Note: For value 8
        // = contact not installed, the coding value CLI_REAR_DOOR_CONTACT_TOP_ASSEMBLED must be evaluated. / Das Result
        // enthält den aktuellen Zustand des HW-Eingang Türkontakt Fahrertür hinten oben. Hinweis: Für Wert  8 = Kontakt
        // nicht verbaut  muss der Codierwert CLI_REAR_DOOR_CONTACT_TOP_ASSEMBLED ausgewertet werden.

// Skipping HECKSCHEIBE_TASTER on 0xDA80 which takes arguments

#define I3_PID_BDC_ZV_BEIFAHRER                                      0xDA81
        // Central locking status for passenger / Status Zentralverriegelung Beifahrer

    #define I3_RES_BDC_STAT_ZV_BF_ENTRIEGELT                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_BF_ENTRIEGELT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_BF_ENTRIEGELT_TYPE                    unsigned char
        // 0: Front passenger door lock not unlocked 1: Front passenger door lock unlocked / 0: Schloss Beifahrertuer
        // nicht entriegelt 1: Schloss Beifahrertuer entriegelt

    #define I3_RES_BDC_STAT_ZV_BF_VERRIEGELT                         (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_BF_VERRIEGELT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_BF_VERRIEGELT_TYPE                    unsigned char
        // 0: Lock front passenger door not locked 1: Lock front passenger door locked / 0: Schloss Beifahrertuer nicht
        // verriegelt 1: Schloss Beifahrertuer verriegelt

    #define I3_RES_BDC_STAT_ZV_BF_GESICHERT                          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ZV_BF_GESICHERT_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_ZV_BF_GESICHERT_TYPE                     unsigned char
        // 0: Passenger door lock not secured 1: Passenger door lock secured / 0: Schloss Beifahrertuer nicht gesichert
        // 1: Schloss Beifahrertuer gesichert

#define I3_PID_BDC_ZV_BEIFAHRER_HINTEN                               0xDA82
        // Central locking: status of the rear passenger / Zentralverriegelung: Status Beifahrer hinten

    #define I3_RES_BDC_STAT_ZV_BFH_ENTRIEGELT                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_BFH_ENTRIEGELT_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_ZV_BFH_ENTRIEGELT_TYPE                   unsigned char
        // 0: Rear passenger door lock not unlocked 1: Rear passenger door lock unlocked / 0: Schloss Beifahrertuer
        // hinten nicht entriegelt 1: Schloss Beifahrertuer hinten entriegelt

    #define I3_RES_BDC_STAT_ZV_BFH_VERRIEGELT                        (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_BFH_VERRIEGELT_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_ZV_BFH_VERRIEGELT_TYPE                   unsigned char
        // 0: Rear passenger door lock not locked 1: Rear passenger door lock locked / 0: Schloss Beifahrertuer hinten
        // nicht verriegelt 1: Schloss Beifahrertuer hinten verriegelt

    #define I3_RES_BDC_STAT_ZV_BFH_GESICHERT                         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ZV_BFH_GESICHERT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_BFH_GESICHERT_TYPE                    unsigned char
        // 0: Rear passenger door lock not secured 1: Rear passenger door lock secured / 0: Schloss Beifahrertuer hinten
        // nicht gesichert 1: Schloss Beifahrertuer hinten gesichert

#define I3_PID_BDC_ZV_FAHRER                                         0xDA83
        // Central locking driver status / Status Zentralverriegelung Fahrer

    #define I3_RES_BDC_STAT_ZV_FA_ENTRIEGELT                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_FA_ENTRIEGELT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_FA_ENTRIEGELT_TYPE                    unsigned char
        // 0: Driver's door lock not unlocked 1: Driver's door lock unlocked / 0: Schloss Fahrertuer nicht entriegelt 1:
        // Schloss Fahrertuer entriegelt

    #define I3_RES_BDC_STAT_ZV_FA_VERRIEGELT                         (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_FA_VERRIEGELT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_FA_VERRIEGELT_TYPE                    unsigned char
        // 0: Driver's door lock not locked 1: Driver's door lock locked / 0: Schloss Fahrertuer nicht verriegelt 1:
        // Schloss Fahrertuer verriegelt

    #define I3_RES_BDC_STAT_ZV_FA_GESICHERT                          (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ZV_FA_GESICHERT_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_ZV_FA_GESICHERT_TYPE                     unsigned char
        // 0: Driver's door lock not secured 1: Driver's door lock secured / 0: Schloss Fahrertuer nicht gesichert 1:
        // Schloss Fahrertuer gesichert

#define I3_PID_BDC_ZV_FAHRER_HINTEN                                  0xDA84
        // Central locking: status driver / Zentralverriegelung: Status Fahrer

    #define I3_RES_BDC_STAT_ZV_FAH_ENTRIEGELT                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_FAH_ENTRIEGELT_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_ZV_FAH_ENTRIEGELT_TYPE                   unsigned char
        // 0: Rear driver door lock not unlocked 1: Rear driver door lock unlocked / 0: Schloss Fahrertuer hinten nicht
        // entriegelt 1: Schloss Fahrertuer hinten entriegelt

    #define I3_RES_BDC_STAT_ZV_FAH_VERRIEGELT                        (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_FAH_VERRIEGELT_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_ZV_FAH_VERRIEGELT_TYPE                   unsigned char
        // 0: Rear driver door lock not locked 1: Rear driver door lock locked / 0: Schloss Fahrertuer hinten nicht
        // verriegelt 1: Schloss Fahrertuer hinten verriegelt

    #define I3_RES_BDC_STAT_ZV_FAH_GESICHERT                         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ZV_FAH_GESICHERT_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_ZV_FAH_GESICHERT_TYPE                    unsigned char
        // 0: Rear driver door lock not secured 1: Rear driver door lock secured / 0: Schloss Fahrertuer hinten nicht
        // gesichert 1: Schloss Fahrertuer hinten gesichert

#define I3_PID_BDC_ZV_HECKKLAPPE                                     0xDA85
        // Tailgate central locking status / Status Zentralverriegelung Heckklappe

    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_ENTRIEGELT_NR              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_ENTRIEGELT_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_ENTRIEGELT_NR_TYPE         unsigned char
        // 0: lock is not unlocked (not active); 1: lock is unlocked (active); 255: Signal invalid / implausible / 0:
        // Schloss ist nicht entriegelt (nicht aktiv ); 1: Schloss ist entriegelt (aktiv); 255: Signal ungültig /
        // unplausibel

    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_VERRIEGELT_NR              (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_VERRIEGELT_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_ZV_HECKKLAPPE_VERRIEGELT_NR_TYPE         unsigned char
        // 0: lock is not locked (not active); 1: lock is locked (active); 255: Signal invalid / implausible / 0: Schloss
        // ist nicht verriegelt (nicht aktiv ); 1: Schloss ist verriegelt (aktiv); 255: Signal ungültig / unplausibel

#define I3_PID_BDC_ZV_HECKSCHEIBE                                    0xDA86
        // Rear window central locking status / Status Zentralverriegelung Heckscheibe

    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_ENTRIEGELT_NR             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_ENTRIEGELT_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_ENTRIEGELT_NR_TYPE        unsigned char
        // 0: Rear window lock not unlocked 1: Rear window lock unlocked / 0: Schloss Heckscheibe nicht entriegelt 1:
        // Schloss Heckscheibe entriegelt

    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_VERRIEGELT_NR             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_VERRIEGELT_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_ZV_HECKSCHEIBE_VERRIEGELT_NR_TYPE        unsigned char
        // 0: Rear window lock not locked 1: Rear window lock locked / 0: Schloss Heckscheibe nicht verriegelt  1:
        // Schloss Heckscheibe verriegelt

#define I3_PID_BDC_ZV_GESAMT                                         0xDA87
        // Status of all ZV drives / Status aller ZV-Antriebe

    #define I3_RES_BDC_STAT_ZV_FA_NR                                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_ZV_FA_NR_UNIT                            '0-n'
    #define I3_RES_BDC_STAT_ZV_FA_NR_TYPE                            unsigned char
        // The result contains the current ZV status of the driver's door. / Das Result enthält den aktuellen ZV-Zustand
        // der Fahrertüre.

    #define I3_RES_BDC_STAT_ZV_BF_NR                                 (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ZV_BF_NR_UNIT                            '0-n'
    #define I3_RES_BDC_STAT_ZV_BF_NR_TYPE                            unsigned char
        // The result contains the current ZV status of the passenger door. / Das Result enthält den aktuellen ZV-Zustand
        // der Beifahrertüre.

    #define I3_RES_BDC_STAT_ZV_FAH_NR                                (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ZV_FAH_NR_UNIT                           '0-n'
    #define I3_RES_BDC_STAT_ZV_FAH_NR_TYPE                           unsigned char
        // The result contains the current ZV status of the rear driver's door. / Das Result enthält den aktuellen
        // ZV-Zustand der Fahrertüre hinten.

    #define I3_RES_BDC_STAT_ZV_BFH_NR                                (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_ZV_BFH_NR_UNIT                           '0-n'
    #define I3_RES_BDC_STAT_ZV_BFH_NR_TYPE                           unsigned char
        // The result contains the current ZV status of the rear passenger door. / Das Result enthält den aktuellen
        // ZV-Zustand der Beifahrertüre hinten.

// Skipping FRONTKLAPPE_TASTER on 0xDA89 which takes arguments

// Skipping CA_BEDIENSTELLEN on 0xDA8A which takes arguments

// Skipping HECKKLAPPE_KONTAKT on 0xDA92 which takes arguments

// Skipping HECKSCHEIBE_KONTAKT on 0xDA93 which takes arguments

// Skipping SCA_VORRAST_KONTAKT on 0xDA94 which takes arguments

#define I3_PID_BDC_ZV_KURZSCHLUSSABSCHALTUNG                         0xDA95
        // This job is used to read out the status of the permanent short-circuit shutdown of the central locking drives
        // of the tailgate and rear window. The short-circuit shutdown serves to protect the HW driver from overload.
        // Notes: - The job is called via the standard job STATUS_LESEN with the argument ZV_KURZSCHLUSSABSCHALTUNG - For
        // details on the process of short-circuit switch-off, see ZSG_BF_13070 / Dieser Job dient zum Auslesen des
        // Status der dauerhaften Kurzschlussabschaltung der ZV-Antriebe der Heckklappe und Heckscheibe. Die
        // Kurzschlussabschaltung dient zum Überlastschutz des HW-Treiber.  Hinweise: - Aufruf des Jobs erfolgt über
        // Standardjob STATUS_LESEN mit Argument ZV_KURZSCHLUSSABSCHALTUNG - Details zum Ablauf der
        // Kurzschlussabschaltung siehe ZSG_BF_13070

    #define I3_RES_BDC_STAT_HECKKLAPPE_KURZSCHLUSSABSCHALTUNG_AKTIV  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HECKKLAPPE_KURZSCHLUSSABSCHALTUNG_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_HECKKLAPPE_KURZSCHLUSSABSCHALTUNG_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the tailgate. / Das Result enthält
        // den Aktivierungsstatus der Kurzschlussabschaltung der Heckklappe.

    #define I3_RES_BDC_STAT_HECKSCHEIBE_KURZSCHLUSSABSCHALTUNG_AKTIV (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_HECKSCHEIBE_KURZSCHLUSSABSCHALTUNG_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_HECKSCHEIBE_KURZSCHLUSSABSCHALTUNG_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the rear window. / Das Result
        // enthält den Aktivierungsstatus der Kurzschlussabschaltung der Heckscheibe.

#define I3_PID_BDC_SPANNUNG_KLEMMEN                                  0xDAB3
        // Reading out analog voltage and current values at the CAS outputs and inputs. Notes: - The job is called via
        // the standard job STATUS_LESEN with the argument SPANNUNG_KLEMMEN. / Auslesen analoger Spannungs- und
        // Strom-Werte an den CAS Ausgängen und Eingängen. Hinweise:  - Aufruf des Jobs erfolgt über Standardjob
        // STATUS_LESEN mit Argument SPANNUNG_KLEMMEN.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_1_WERT               (RXBUF_UINT(0)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_1_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_1_WERT_TYPE          float
        // The result contains the voltage value of terminal 30B_1. / Das Result enthält den Spannungswert Klemme 30B_1.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_2_WERT               (RXBUF_UINT(2)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_2_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_2_WERT_TYPE          float
        // The result contains the voltage value of terminal 30B_2. / Das Result enthält den Spannungswert Klemme 30B_2.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_3_WERT               (RXBUF_UINT(4)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_3_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30B_3_WERT_TYPE          float
        // The result contains the voltage value of terminal 30B_3. / Das Result enthält den Spannungswert Klemme 30B_3.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15WUP                    (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15WUP_UNIT               '0/1'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15WUP_TYPE               unsigned short
        // The result contains the voltage value of terminal 15_WUP at the FEM output. Possible values: 1 = active, 0 =
        // not active / Das Result enthält den Spannungswert Klemme 15_WUP am FEM Ausgang. Mögliche Werte: 1 = Aktiv, 0 =
        // nicht aktiv

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N1_WERT                (RXBUF_UINT(8)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N1_WERT_UNIT           'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N1_WERT_TYPE           float
        // The result contains the voltage value of terminal 15_N1 at the FEM output. / Das Result enthält den
        // Spannungswert Klemme 15_N1 am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N2_WERT                (RXBUF_UINT(10)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N2_WERT_UNIT           'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15N2_WERT_TYPE           float
        // The result contains the voltage value of terminal 15_N2 at the FEM output. / Das Result enthält den
        // Spannungswert Klemme 15_N2 am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15_WERT                  (RXBUF_UINT(12)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15_WERT_UNIT             'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_15_WERT_TYPE             float
        // The result contains the voltage value at terminal 15 at the FEM output. / Das Result enthält den Spannungswert
        // Klemme 15 am FEM Ausgang.

    #define I3_RES_BDC_STAT_STROM_KLEMME_15_50_WERT                  (RXBUF_UINT(14)/1000.0f)
    #define I3_RES_BDC_STAT_STROM_KLEMME_15_50_WERT_UNIT             'A'
    #define I3_RES_BDC_STAT_STROM_KLEMME_15_50_WERT_TYPE             float
        // The result contains the current value at terminals 15 and 50 at the FEM output. / Das Result enthält den
        // Stromwert an Klemme 15 und 50 am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50_WERT                  (RXBUF_UINT(16)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50_WERT_UNIT             'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50_WERT_TYPE             float
        // The result contains the voltage value at terminal 50 at the FEM output. / Das Result enthält den Spannungswert
        // Klemme 50  am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50MSA_WERT               (RXBUF_UINT(18)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50MSA_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_50MSA_WERT_TYPE          float
        // The result contains the voltage value of terminal 50_MSA at the FEM output. / Das Result enthält den
        // Spannungswert Klemme 50_MSA am FEM Ausgang.

    #define I3_RES_BDC_STAT_STROM_LF_WERT                            (RXBUF_UINT(20)/1000.0f)
    #define I3_RES_BDC_STAT_STROM_LF_WERT_UNIT                       'A'
    #define I3_RES_BDC_STAT_STROM_LF_WERT_TYPE                       float
        // The result contains the current value at LF (CA antennas) at the FEM output. / Das Result enthält den
        // Stromwert an LF (CA-Antennen) am FEM Ausgang.

    #define I3_RES_BDC_STAT_DIAG_LF_WERT                             (RXBUF_UINT(22)/1000.0f)
    #define I3_RES_BDC_STAT_DIAG_LF_WERT_UNIT                        'V'
    #define I3_RES_BDC_STAT_DIAG_LF_WERT_TYPE                        float
        // The result contains the voltage value at the LF (CA antennas) at the FEM output. / Das Result enthält den
        // Spannungswert an LF (CA-Antennen) am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_31ELV_WERT               (RXBUF_UINT(24)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_31ELV_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_31ELV_WERT_TYPE          float
        // The result contains the voltage value at terminal 31ELV at the FEM output. / Das Result enthält den
        // Spannungswert Klemme 31ELV am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30ELV_WERT               (RXBUF_UINT(26)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30ELV_WERT_UNIT          'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30ELV_WERT_TYPE          float
        // The result contains the voltage value at terminal 30ELV at the FEM output. / Das Result enthält den
        // Spannungswert Klemme 30ELV am FEM Ausgang.

    #define I3_RES_BDC_STAT_SPANNUNG_INNENTEMPERATUR_WERT            (RXBUF_UINT(28)/1000.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_INNENTEMPERATUR_WERT_UNIT       'V'
    #define I3_RES_BDC_STAT_SPANNUNG_INNENTEMPERATUR_WERT_TYPE       float
        // The result contains the voltage value at the PTC / NTC in the control unit to determine the internal
        // temperature. / Das Result enthält den Spannungswert am PTC/NTC im Steuergerät zur Ermittlung der
        // Innentemperatur.

#define I3_PID_BDC_KEY_VALID_NR_AKTUELL                              0xDAB4
        // The result contains the number (according to the transponder table) of the currently valid key. Values: 0-19
        // key number, 255 currently not a valid key. / Das Result enthält die Nummer (gemäß Transpondertabelle) des
        // aktuell gültigen Schlüssel. Werte: 0-19 Schlüsselnummer, 255 momentan kein gültiger Schlüssel.

    #define I3_RES_BDC_STAT_KEY_VAILD_NR_AKTUELL                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KEY_VAILD_NR_AKTUELL_UNIT                '0-n'
    #define I3_RES_BDC_STAT_KEY_VAILD_NR_AKTUELL_TYPE                unsigned char
        // The result contains the number (according to the transponder table) of the currently valid key. Values: 0-19
        // key number, 255 currently not a valid key. / Das Result enthält die Nummer (gemäß Transpondertabelle) des
        // aktuell gültigen Schlüssel. Werte: 0-19 Schlüsselnummer, 255 momentan kein gültiger Schlüssel.

#define I3_PID_BDC_CA_TAGE_ER_LEITUNG                                0xDAB5
        // Reading out the respective status values of the analog unlocking lines from the outside door handle
        // electronics (TAGE) in the doors FT, BFT, FTH, BFTH. Notes: - The job is called via the standard job
        // STATUS_LESEN with the argument CA_TAGE_ER_LEITUNG / Auslesen der jeweiligen Statuswerte der analogen
        // Entriegeln-Leitungen von den Tür-Aussengriff-Elektroniken (TAGE) in den Türen FT, BFT, FTH, BFTH. Hinweise:  -
        // Aufruf des Jobs erfolgt über Standardjob STATUS_LESEN mit Argument CA_TAGE_ER_LEITUNG

    #define I3_RES_BDC_STAT_TAGE_ER_FT                               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TAGE_ER_FT_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_TAGE_ER_FT_TYPE                          unsigned char
        // The result contains the status of the line between the ZSG and the CA button / TAGE in the driver's door.
        // Notes: - Assignment via table TAB_CAS_CA_TAGE_ER_LEITUNG. / Das Result enthält den Status der Leitung zwischen
        // ZSG und CA-Taster/TAGE in der  Fahrertür. Hinweise: - Zuordnung über Tabelle TAB_CAS_CA_TAGE_ER_LEITUNG.

    #define I3_RES_BDC_STAT_TAGE_ER_BFT                              (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_TAGE_ER_BFT_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_TAGE_ER_BFT_TYPE                         unsigned char
        // The result contains the status of the line between the ZSG and the CA button / TAGE in the passenger door.
        // Notes: - Allocation via table TAB_CAS_CA_TAGE_ER_LEITUNG. / Das Result enthält den Status der Leitung zwischen
        // ZSG und CA-Taster/TAGE in der  Beifahrertür.. Hinweise: - Zuordnung über Tabelle TAB_CAS_CA_TAGE_ER_LEITUNG.

    #define I3_RES_BDC_STAT_TAGE_ER_FTH                              (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_TAGE_ER_FTH_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_TAGE_ER_FTH_TYPE                         unsigned char
        // The result contains the status of the line between the ZSG and the CA button / TAGE in the rear driver's door.
        // Notes: - Assignment via table TAB_CAS_CA_TAGE_ER_LEITUNG. / Das Result enthält den Status der Leitung zwischen
        // ZSG und CA-Taster/TAGE in der  Fahrertür hinten. Hinweise: - Zuordnung über Tabelle
        // TAB_CAS_CA_TAGE_ER_LEITUNG.

    #define I3_RES_BDC_STAT_TAGE_ER_BFTH                             (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_TAGE_ER_BFTH_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_TAGE_ER_BFTH_TYPE                        unsigned char
        // The result contains the status of the line between the ZSG and the CA button / TAGE in the rear passenger
        // door. Notes: - Assignment via table TAB_CAS_CA_TAGE_ER_LEITUNG. / Das Result enthält den Status der Leitung
        // zwischen ZSG und CA-Taster/TAGE in der  Beifahrertür hinten. Hinweise: - Zuordnung über Tabelle
        // TAB_CAS_CA_TAGE_ER_LEITUNG.

#define I3_PID_BDC_START_STOP_TASTER                                 0xDAB6
        // The result contains the current logical state of the start / stop button. / Das Result enthält den aktuellen
        // logischen Zustand des Start-Stopp-Tasters.

    #define I3_RES_BDC_STAT_TASTER_SST_AKTIV                         (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TASTER_SST_AKTIV_UNIT                    '0/1'
    #define I3_RES_BDC_STAT_TASTER_SST_AKTIV_TYPE                    unsigned char
        // The result contains the current logical state of the start / stop button. / Das Result enthält den aktuellen
        // logischen Zustand des Start-Stopp-Tasters.

// Skipping STEUERN_FAHRPROFIL on 0xDAB8 which takes arguments

// Skipping CAS_MONTAGEMODUS on 0xDAB9 which takes arguments

#define I3_PID_BDC_STATUS_KLEMMEN_VERHINDERER                        0xDABA
        // Reading out the internal reasons for preventing the terminal control state machine for changing terminals:
        // Switching on the KL15, switching off the KL15, switching on the KL50 Notes: - Only one reason is output at a
        // time, even if there are several reasons. - Depending on the terminal change considered, not all values from
        // the table TAB_CAS_KLEMMEN_VERHINDERER are possible. / Auslesen der internen Verhinderungsgründe der
        // Klemmensteuerungs-Statemachine für Klemmenwechsel:  Einschalten der KL15, Ausschalten der KL15, Einschalten
        // der KL50 Hinweise: - Es wird jeweils nur ein Hinderungsgrund ausgegeben, auch wenn mehrere Hinderungsgründe
        // vorliegen. - Abhängig vom betrachteten Klemmen-Wechsel sind jeweils nicht alle Werte aus der Tabelle
        // TAB_CAS_KLEMMEN_VERHINDERER möglich.

    #define I3_RES_BDC_STAT_KL15_EIN_VERHINDERER                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KL15_EIN_VERHINDERER_UNIT                '0-n'
    #define I3_RES_BDC_STAT_KL15_EIN_VERHINDERER_TYPE                unsigned char
        // The result contains the cause that currently prevents the KL15 from being switched on if a terminal change to
        // KL15 is requested via the StartStop button (SST) or via diagnosis. Notes: - Allocation takes place in
        // accordance with table 0 = No obstacle present 1 = Current key not valid 14 = ELV locked / Das Result enthält
        // die Ursache, die momentan ein Einschalten der KL15 verhindert, wenn eine Klemmenänderung zu KL15 über
        // StartStop-Taster (SST) oder über Diagnose angefordert würde. Hinweise: - Zuordnung erfolgt gemäß Tabelle 0 =
        // Kein Hinderungsgrund vorliegend  1 = Aktueller Schlüssel nicht gültig 14 = ELV verriegelt  

    #define I3_RES_BDC_STAT_KL15_AUS_VERHINDERER                     (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_KL15_AUS_VERHINDERER_UNIT                '0-n'
    #define I3_RES_BDC_STAT_KL15_AUS_VERHINDERER_TYPE                unsigned char
        // The result contains the cause that currently prevents the KL15 from switching off if a terminal change is
        // requested via the StartStop button (SST) or via diagnosis. Notes: - Allocation takes place according to table
        // 0 = No reason for hindrance present 3 = Speed of travel detected 4 = Speed signal invalid / Das Result enthält
        // die Ursache, die momentan ein Ausschalten der KL15 verhindert, wenn eine Klemmenänderung über StartStop-Taster
        // (SST) oder über Diagnose angefordert würde. Hinweise: - Zuordnung erfolgt gemäß Tabelle 0 = Kein
        // Hinderungsgrund vorliegend  3 = Geschwindigkeit Fahrt erkannt  4 = Geschwindigkeitsignal ungültig 

    #define I3_RES_BDC_STAT_KL50_EIN_VERHINDERER                     (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_KL50_EIN_VERHINDERER_UNIT                '0-n'
    #define I3_RES_BDC_STAT_KL50_EIN_VERHINDERER_TYPE                unsigned char
        // The result contains the cause that currently prevents activation of the KL50 if a terminal change is requested
        // via the StartStop button (SST), Telestart hand transmitter or via diagnosis. Notes: - Allocation takes place
        // according to table 0 = No obstacle present 1 = No valid key 5 = Brake not pressed 6 = Brake implausible 7 =
        // Clutch not pressed 8 = Clutch implausible 9 = Abort DME / DDE (engine running detected / no engine start
        // allowed via CAN ) 10 = frictional connection detected (P or N not inserted) 13 = assembly mode KL50 14 = ELV
        // locked / Das Result enthält die Ursache, die momentan ein Ansteuern der KL50 verhindert, wenn eine
        // Klemmenänderung über StartStop-Taster (SST), Telestarthandsender oder über Diagnose angefordert würde.
        // Hinweise: - Zuordnung erfolgt gemäß Tabelle 0 = Kein Hinderungsgrund vorliegend  1 = Kein gültiger Schlüssel 
        // 5 = Bremse nicht gedrückt  6 = Bremse unplausibel 7 = Kupplung nicht gedrückt  8 = Kupplung unplausibel  9 =
        // Abbruch DME/DDE (Motorlauf erkannt/Kein Motorstart erlaubt über CAN) 10 = Kraftschluss erkannt (P oder N nicht
        // eingelegt) 13 = Montagmodus KL50  14 = ELV verriegelt  

#define I3_PID_BDC_BUS_IN_DATUM_ZEIT                                 0xDABB
        // The job is used to read out the current time stamp (date and time) received by the combi. Notes: The job is
        // called via the standard job STATUS_LESEN with argument BUS_IN_DATUM_ZEIT - If a message is not received within
        // the expected time (timeout), the status invalid / no signal is returned in the corresponding results. - The
        // data come from the CAN message UHRZEIT_DATUM and RELATIVZEIT / Der Job dient zum Auslesen des aktuellen vom
        // Kombi empfangenen Zeitstempels (Datum und Zeit). Hinweise:  Aufruf des Jobs erfolgt über Standardjob
        // STATUS_LESEN mit Argument BUS_IN_DATUM_ZEIT - Wird eine Botschaft innerhalb der erwarteten Zeit nicht
        // empfangen (timeout), so wird der Status ungültig/kein Signal in den entsprechenden Results zurückgegeben. -
        // Die Daten stammen aus CAN-Nachricht UHRZEIT_DATUM und RELATIVZEIT

    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_STUNDEN_WERT                 (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_STUNDEN_WERT_TYPE            unsigned char
        // Hours: 0-23; 253 corresponds to -; 254 No answer; 255 signal invalid / Stunden: 0 - 23; 253 entspricht --; 254
        // Keine Angabe; 255 Signal ungültig

    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_MINUTEN_WERT                 (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_MINUTEN_WERT_TYPE            unsigned char
        // Minutes: 0 - 59; 253 corresponds to -; 254 No answer; 255 signal invalid / Minuten: 0 - 59; 253 entspricht --;
        // 254 Keine Angabe; 255 Signal ungültig

    #define I3_RES_BDC_STAT_BUS_IN_DATUM_TAG_WERT                    (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_BUS_IN_DATUM_TAG_WERT_TYPE               unsigned char
        // Day: 0 - 31; 255 signal invalid / Tag: 0 - 31; 255 Signal ungültig

    #define I3_RES_BDC_STAT_BUS_IN_DATUM_MONAT_WERT                  (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_BUS_IN_DATUM_MONAT_WERT_TYPE             unsigned char
        // Month: 1 - 12; 255 signal invalid / Monat: 1 - 12; 255 Signal ungültig

    #define I3_RES_BDC_STAT_BUS_IN_DATUM_JAHR_WERT                   (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_BUS_IN_DATUM_JAHR_WERT_TYPE              unsigned short
        // Year: 2000 - 9999; 65535 Signal invalid / Jahr: 2000 - 9999; 65535 Signal ungültig

    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_RELATIV_WERT                 (RXBUF_UINT32(6))
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_RELATIV_WERT_UNIT            's'
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_RELATIV_WERT_TYPE            unsigned long
        // Current relative time in seconds since 01/01/2000, seconds: 0 - 4.2 billion, 4294967295 invalid / Aktuelle
        // Relative Zeit in Sekunden seit 01.01.2000, Sekunden: 0 - 4,2 Millarden, 4294967295 ungültig

    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_TAGE_RELATIV_WERT            (RXBUF_UINT(10))
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_TAGE_RELATIV_WERT_UNIT       'd'
    #define I3_RES_BDC_STAT_BUS_IN_ZEIT_TAGE_RELATIV_WERT_TYPE       unsigned short
        // Current relative time in days since 01.01.2000; Days: 1 corresponds to 01/01/2000, 65535 corresponds to
        // invalid. / Aktuelle Relative Zeit in Tagen seit 01.01.2000; Tage: 1 entspricht 01.01.2000, 65535 entspricht
        // ungültig.

#define I3_PID_BDC_BUS_IN_DME1                                       0xDABC
        // The job is used to read out the values received via CAN from the engine management system (DME). Notes: The
        // job is called using the standard job STATUS_LESEN with argument BUS_IN_DME1. If a message is not received
        // within the expected time (timeout), the status invalid / no signal is returned. The data come from the CAN
        // messages data drive train 2 (DT_PT_2) and torque crankshaft 1 (TORQ_CRSH_1) / Der Job dient zum Auslesen der
        // über CAN empfangenen Werte von der Motorsteuerung (DME). Hinweise:  Aufruf des Jobs erfolgt über Standardjob
        // STATUS_LESEN mit Argument BUS_IN_DME1. Wird eine Botschaft innerhalb der erwarteten Zeit nicht empfangen
        // (timeout), so wird der Status ungültig/kein Signal zurückgegeben. Die Daten stammen aus den CAN-Nachrichten
        // Daten Antriebsstrang 2 (DT_PT_2) und Drehmoment Kurbelwelle 1 (TORQ_CRSH_1)

    #define I3_RES_BDC_STAT_BUS_IN_GANG                              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BUS_IN_GANG_UNIT                         '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_GANG_TYPE                         unsigned char
        // The result contains the current value for the gear (received via CAN). Notes: - The value is determined from
        // the CAN signal ST_GRSEL_DRV. - Allocation takes place according to table TAB_CAS_GANG. / Das Result enthält
        // den aktuellen Wert für den Gang (über CAN empfangen). Hinweise:  - Der Wert wird aus CAN-Signal ST_GRSEL_DRV
        // ermittelt. - Zuordnung erfolgt gemäß Tabelle TAB_CAS_GANG.

    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_LAEUFT                      (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_LAEUFT_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_LAEUFT_TYPE                 unsigned char
        // The result contains the current value (received via CAN) for engine running. Notes: - The value is determined
        // from bit 0 & 1 of the CAN signal ST_DRV_VEH. - Allocation takes place according to table TAB_CAS_MOTOR_STATUS
        // / Das Result enthält den aktuellen Wert (über CAN empfangen) für Motor läuft. Hinweise: - Der Wert wird
        // ermittelt aus Bit 0 & 1 des CAN-Signals ST_DRV_VEH. - Zuordnung erfolgt gemäß Tabelle TAB_CAS_MOTOR_STATUS

    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_FREIGABE                    (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_FREIGABE_UNIT               '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_MOTOR_FREIGABE_TYPE               unsigned char
        // The result contains the current value (received via CAN) for the motor enable. Note: - The value is determined
        // from the CAN signal RLS_ENGSTA. - Allocation takes place according to table TAB_CAS_MOTORSTART_FREIGABE / Das
        // Result enthält den aktuellen Wert (über CAN empfangen) für die Motor Freigabe. Hinweis: - Der Wert wird
        // ermittelt aus CAN-Signal RLS_ENGSTA. - Zuordnung erfolgt gemäß Tabelle TAB_CAS_MOTORSTART_FREIGABE

    #define I3_RES_BDC_STAT_BUS_IN_ANLASSER_SPERRE                   (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_BUS_IN_ANLASSER_SPERRE_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_ANLASSER_SPERRE_TYPE              unsigned char
        // The result contains the current value (received via CAN) for the starter lock. Note: - The value is determined
        // from the CAN signal ST_ILK_STRT_DRV. - Allocation takes place according to table TAB_CAS_MOTOR_ANLASSERSPERRE
        // / Das Result enthält den aktuellen Wert (über CAN empfangen) für die Anlassersperre. Hinweis: - Der Wert wird
        // ermittelt aus CAN-Signal ST_ILK_STRT_DRV. - Zuordnung erfolgt gemäß Tabelle TAB_CAS_MOTOR_ANLASSERSPERRE

    #define I3_RES_BDC_STAT_BUS_IN_KUPPLUNG                          (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_BUS_IN_KUPPLUNG_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_KUPPLUNG_TYPE                     unsigned char
        // The result contains the current value (received via CAN) for the clutch. Notes: - The value is determined from
        // the CAN signal ST_SW_CLT_DRV. - Allocation takes place according to table TAB_CAS_DIGITAL_EINGANG. Only the
        // values 0, 1 and 255 are returned. / Das Result enthält den aktuellen Wert (über CAN empfangen) für die
        // Kupplung. Hinweise: - Der Wert wird ermittelt aus CAN-Signal ST_SW_CLT_DRV. - Zuordnung erfolgt gemäß Tabelle
        // TAB_CAS_DIGITAL_EINGANG. Nur die Werte 0, 1 und 255 werden zurückgeliefert.

    #define I3_RES_BDC_STAT_BUS_IN_DREHZAHL_WERT                     (RXBUF_UINT(5)/4.0f)
    #define I3_RES_BDC_STAT_BUS_IN_DREHZAHL_WERT_UNIT                '1/min'
    #define I3_RES_BDC_STAT_BUS_IN_DREHZAHL_WERT_TYPE                float
        // The result contains the current value (received via CAN) for the speed. Notes: - The value is determined from
        // the CAN signal AVL_RPM_ENG_CRSH. - The SGBD divides the value from the telegram by 4, since the
        // AVL_RPM_ENG_CRSH signal is accurate to a quarter of a turn. / Das Result enthält den aktuellen Wert (über CAN
        // empfangen) für die Drehzahl. Hinweise: - Der Wert wird ermittelt aus CAN-Signal AVL_RPM_ENG_CRSH. - Der Wert
        // aus dem Telegramm wird von der SGBD durch 4 geteilt, da das Signal AVL_RPM_ENG_CRSH Viertel-Umdrehungs-genau
        // ist.

#define I3_PID_BDC_BUS_IN_DSC                                        0xDABD
        // The job is used to read out the values received via CAN from the digital stability control (DSC). Notes: The
        // job is called using the standard job STATUS_LESEN with the argument BUS_IN_DSC. If a message is not received
        // within the expected time (timeout), the status invalid / no signal is returned. The data come from CAN
        // messages, status stabilization DSC (ST_STAB_DSC) and vehicle speed (V_VEH) / Der Job dient zum Auslesen der
        // über CAN empfangenen Werte von der Digitalen Stabilitätskontrolle (DSC). Hinweise:  Aufruf des Jobs erfolgt
        // über Standardjob STATUS_LESEN mit Argument BUS_IN_DSC. Wird eine Botschaft innerhalb der erwarteten Zeit nicht
        // empfangen (timeout), so wird der Status ungültig/kein Signal zurückgegeben. Die Daten stammen aus
        // CAN-Nachrichten Status Stabilisierung DSC (ST_STAB_DSC) und Geschwindigkeit Fahrzeug (V_VEH)

    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_WERT                       (RXBUF_UINT(0)/64.0f)
    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_WERT_UNIT                  'km/h'
    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_WERT_TYPE                  float
        // The result contains the current value (received via CAN) for the speed. Notes: - The value is determined from
        // the signal V_VEH_COG. - Value range 0-350, Invalid 1023 - The raw value is divided by 64 by the SGBD, since
        // the V_VEH_COG signal is accurate to 64. / Das Result enthält den aktuellen Wert (über CAN empfangen) für die
        // Geschwindigkeit. Hinweise: - Der Wert wird ermittelt aus dem Signal V_VEH_COG. - Wertebereich 0-350, Ungültig
        // 1023 - Der Rohwert wird von der SGBD durch 64 geteilt, da das Signal V_VEH_COG 64-tel-genau ist.

    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_STATUS                     (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_STATUS_UNIT                '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_GESCHW_STATUS_TYPE                unsigned char
        // The result contains the current value (received via CAN) for the speed as status. Notes: - Allocation takes
        // place according to table TAB_CAS_GESCHW_STATUS - The value is determined from the signal DVCO_VEH. / Das
        // Result enthält den aktuellen Wert (über CAN empfangen) für die Geschwindigkeit als Status Hinweise: -
        // Zuordnung erfolgt gemäß Tabelle TAB_CAS_GESCHW_STATUS - Der Wert wird ermittelt aus dem Signal DVCO_VEH.

    #define I3_RES_BDC_STAT_BUS_IN_BREMSPEDAL                        (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_BUS_IN_BREMSPEDAL_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_BREMSPEDAL_TYPE                   unsigned char
        // The result contains the current value (received via CAN) for the position of the brake pedal. Notes: - CAN
        // signal Status_Bremsung_Fahrer (ST_BRG_DV), evaluation of the bit coding Activation_Bremssystem_Fahrer + total
        // signal invalid must take place in the CAS. - Allocation takes place according to table TAB_CAS_DIGITAL_EINGANG
        // / Das Result enthält den aktuellen Wert (über CAN empfangen) für die Stellung des Bremspedals. Hinweise: -
        // CAN-Signal Status_Bremsung_Fahrer (ST_BRG_DV), Auswertung der Bit-Kodierung Betätigung_Bremssystem_Fahrer +
        // Gesamtsignal ungültig muss im CAS erfolgen. - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG

// Skipping STEUERN_HISTORIE_30F_ABSCHALTUNG on 0xDABE which takes arguments

#define I3_PID_BDC_BUS_IN_FH                                         0xDABF
        // The job is used to read out the values received via CAN for the status of the individual window lifters (FT,
        // BFT, FTH, BFTH per door). Notes: The job is called using the standard job STATUS_LESEN with the argument
        // BUS_IN_FH. - If a message is not received within the expected time (timeout), the status invalid / no signal
        // is returned. - The data comes from the CAN messages POSITION_FH_BFT, POSITION_FH_BFTH, POSITION_FH_FAT and
        // POSITION_FH_FATH / Der Job dient zum Auslesen der über CAN empfangenen Werte für den Status der einzelnen
        // Fensterheber (je Tür FT,BFT,FTH,BFTH). Hinweise:  Aufruf des Jobs erfolgt über Standardjob STATUS_LESEN mit
        // Argument BUS_IN_FH. - Wird eine Botschaft innerhalb der erwarteten Zeit nicht empfangen (timeout), so wird der
        // Status ungültig/kein Signal zurückgegeben. - Die Daten stammen aus CAN-Nachricht POSITION_FH_BFT,
        // POSITION_FH_BFTH, POSITION_FH_FAT und POSITION_FH_FATH

    #define I3_RES_BDC_STAT_BUS_IN_FH_FT                             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_BUS_IN_FH_FT_UNIT                        '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_FH_FT_TYPE                        unsigned char
        // CAN signal for the driver's door window regulator status. Notes: - The content comes from the CAN signal
        // ST_PO_WRG_DRD. - Allocation takes place according to table TAB_CAS_FH_STATUS. / CAN-Signal Status Fensterheber
        // Fahrertür. Hinweise:  - Inhalt stammt aus CAN-Signal ST_PO_WRG_DRD. - Zuordnung erfolgt gemäß Tabelle
        // TAB_CAS_FH_STATUS.

    #define I3_RES_BDC_STAT_BUS_IN_FH_BFT                            (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_BUS_IN_FH_BFT_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_FH_BFT_TYPE                       unsigned char
        // CAN signal for the status of the passenger door window regulator. Notes: - Content from the CAN signal
        // ST_PO_WRG_PSD. - Allocation takes place according to table TAB_CAS_FH_STATUS. / CAN-Signal Status Fensterheber
        // Beifahrertür. Hinweise:  - Inhalt aus dem CAN-Signal ST_PO_WRG_PSD. - Zuordnung erfolgt gemäß Tabelle
        // TAB_CAS_FH_STATUS.

    #define I3_RES_BDC_STAT_BUS_IN_FH_FTH                            (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_BUS_IN_FH_FTH_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_FH_FTH_TYPE                       unsigned char
        // CAN signal for the status of the rear window regulator in the driver's door. Notes: - Content from the CAN
        // signal ST_PO_WRG_DVDR. - Allocation takes place according to table TAB_CAS_FH_STATUS. / CAN-Signal Status
        // Fensterheber Fahrertür hinten. Hinweise:  - Inhalt aus dem CAN-Signal ST_PO_WRG_DVDR. - Zuordnung erfolgt
        // gemäß Tabelle TAB_CAS_FH_STATUS.

    #define I3_RES_BDC_STAT_BUS_IN_FH_BFTH                           (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_BUS_IN_FH_BFTH_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_BUS_IN_FH_BFTH_TYPE                      unsigned char
        // CAN signal for the status of the window lifter, rear passenger door. Notes: - Content from the CAN signal
        // ST_PO_WRG_PSDR. - Allocation takes place according to table TAB_CAS_FH_STATUS. / CAN-Signal Status
        // Fensterheber Beifahrertür hinten. Hinweise: - Inhalt aus dem CAN-Signal ST_PO_WRG_PSDR. - Zuordnung erfolgt
        // gemäß Tabelle TAB_CAS_FH_STATUS.

// Skipping STEUERN_HISTORIE_KL30B_AKTIV on 0xDAC0 which takes arguments

// Skipping CA_TAGE_SPERRSTATUS on 0xDAC4 which takes arguments

#define I3_PID_BDC_CA_TAGE_STATUS                                    0xDACA
        // Reading out the respective sensor status of the outside door handle electronics (TAGE) in the doors FT, BFT,
        // FTH, BFTH. Notes: - The job is called via the standard job STATUS_LESEN with the argument CA_TAGE_STATUS /
        // Auslesen des jeweiligen Sensorstatus der Tür-Aussengriff-Elektroniken (TAGE) in den Türen FT, BFT, FTH, BFTH.
        // Hinweise:  - Aufruf des Jobs erfolgt über Standardjob STATUS_LESEN mit Argument CA_TAGE_STATUS

    #define I3_RES_BDC_STAT_TAGE_FT                                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_TAGE_FT_UNIT                             '0-n'
    #define I3_RES_BDC_STAT_TAGE_FT_TYPE                             unsigned char
        // The result contains the status of the CA button or the TAGE driver's door. Notes: - The assignment is made via
        // table TAB_CAS_CA_TAGE_STATUS / Das Result enthält den Status des CA-Tasters oder der TAGE Fahrertüre..
        // Hinweise: - Die Zuordnung erfolgt über Tabelle TAB_CAS_CA_TAGE_STATUS

    #define I3_RES_BDC_STAT_TAGE_BFT                                 (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_TAGE_BFT_UNIT                            '0-n'
    #define I3_RES_BDC_STAT_TAGE_BFT_TYPE                            unsigned char
        // The result contains the status of the CA button or the TAGE passenger door. Notes: - The assignment is made
        // via table TAB_CAS_CA_TAGE_STATUS / Das Result enthält den Status des CA-Tasters oder der TAGE Beifahrertüre..
        // Hinweise: - Die Zuordnung erfolgt über Tabelle TAB_CAS_CA_TAGE_STATUS

    #define I3_RES_BDC_STAT_TAGE_FTH                                 (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_TAGE_FTH_UNIT                            '0-n'
    #define I3_RES_BDC_STAT_TAGE_FTH_TYPE                            unsigned char
        // The result contains the status of the CA button or the TAGE back door on the driver's side. Notes: - The
        // assignment is made via table TAB_CAS_CA_TAGE_STATUS / Das Result enthält den Status des CA-Tasters oder der
        // TAGE Hintertüre Fahrerseite.. Hinweise: - Die Zuordnung erfolgt über Tabelle TAB_CAS_CA_TAGE_STATUS

    #define I3_RES_BDC_STAT_TAGE_BFTH                                (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_TAGE_BFTH_UNIT                           '0-n'
    #define I3_RES_BDC_STAT_TAGE_BFTH_TYPE                           unsigned char
        // The result contains the status of the CA button or the TAGE back door on the passenger side. Notes: - The
        // assignment is made via table TAB_CAS_CA_TAGE_STATUS / Das Result enthält den Status des CA-Tasters oder der
        // TAGE Hintertüre Beifahrerseite. Hinweise: - Die Zuordnung erfolgt über Tabelle TAB_CAS_CA_TAGE_STATUS

#define I3_PID_BDC_SPANNUNG_KLEMME_30L1                              0xDAD6
        // Voltage value at the control unit at terminal 30L (to one decimal place) Notes: - The SGBD divides the value
        // supplied by the control unit by 10 (one decimal place). / Spannungswert am Steuergerät an Klemme 30L (auf eine
        // Nachkommastelle genau) Hinweise: - Der vom Steuergerät gelieferte Wert wird von der SGBD durch 10 geteilt
        // (eine Nachkommastelle).

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L1_WERT                (RXBUF_SINT(0)/10.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L1_WERT_UNIT           'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L1_WERT_TYPE           float
        // Voltage value at the control unit at terminal 30L (to one decimal place) Notes: - The SGBD divides the value
        // supplied by the control unit by 10 (one decimal place). / Spannungswert am Steuergerät an Klemme 30L (auf eine
        // Nachkommastelle genau) Hinweise: - Der vom Steuergerät gelieferte Wert wird von der SGBD durch 10 geteilt
        // (eine Nachkommastelle).

#define I3_PID_BDC_SPANNUNG_KLEMME_30L2                              0xDAD7
        // Voltage value at the control unit at terminal 30L (to one decimal place) Notes: - The SGBD divides the value
        // supplied by the control unit by 10 (one decimal place). / Spannungswert am Steuergerät an Klemme 30L (auf eine
        // Nachkommastelle genau) Hinweise: - Der vom Steuergerät gelieferte Wert wird von der SGBD durch 10 geteilt
        // (eine Nachkommastelle).

    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L2_WERT                (RXBUF_SINT(0)/10.0f)
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L2_WERT_UNIT           'V'
    #define I3_RES_BDC_STAT_SPANNUNG_KLEMME_30L2_WERT_TYPE           float
        // Voltage value at the control unit at terminal 30L (to one decimal place) Notes: - The SGBD divides the value
        // supplied by the control unit by 10 (one decimal place). / Spannungswert am Steuergerät an Klemme 30L (auf eine
        // Nachkommastelle genau) Hinweise: - Der vom Steuergerät gelieferte Wert wird von der SGBD durch 10 geteilt
        // (eine Nachkommastelle).

#define I3_PID_BDC_KLEMMENSTEUERUNG_KURZSCHLUSSABSCHALTUNG           0xDB12
        // This job is used to read out the status of the permanent short-circuit shutdown of the HW drivers KL30B /
        // KL15N and KL30B-ACSM. The short-circuit shutdown is used to protect the hardware driver from overload. Notes:
        // - The job is called via the standard job STATUS_LESEN with the argument
        // KLEMMENSTEUERUNG_KURZSCHLUSSABSCHALTUNG - For details on the short-circuit shutdown process, see ZSG_BF_13070
        // / Dieser Job dient zum Auslesen des Status der dauerhaften Kurzschlussabschaltung der HW-Treiber KL30B/KL15N
        // und KL30B-ACSM. Die Kurzschlussabschaltung dient zum Überlastschutz der HW-Treiber.  Hinweise: - Aufruf des
        // Jobs erfolgt über Standardjob STATUS_LESEN mit Argument KLEMMENSTEUERUNG_KURZSCHLUSSABSCHALTUNG - Details zum
        // Ablauf der Kurzschlussabschaltung siehe ZSG_BF_13070

    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N1_AKTIV (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N1_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N1_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the HW driver KL15N1. / Das Result
        // enthält den Aktivierungsstatus der Kurzschlussabschaltung des HW-Treiber KL15N1.

    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N2_AKTIV (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N2_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_15N2_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the HW driver KL15N2. / Das Result
        // enthält den Aktivierungsstatus der Kurzschlussabschaltung des HW-Treiber KL15N2.

    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL30BACSM_AKTIV (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL30BACSM_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL30BACSM_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the HW driver KL30B-ACSM. / Das
        // Result enthält den Aktivierungsstatus der Kurzschlussabschaltung des HW-Treiber KL30B-ACSM.

    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL301_AKTIV (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL301_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL301_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the KL30B1 HW driver. / Das Result
        // enthält den Aktivierungsstatus der Kurzschlussabschaltung des HW-Treiber KL30B1.

    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL302_AKTIV (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL302_AKTIV_UNIT '0-n'
    #define I3_RES_BDC_STAT_KURZSCHLUSSABSCHALTUNG_TREIBER_KL302_AKTIV_TYPE unsigned char
        // The result contains the activation status of the short-circuit shutdown of the KL30B2 HW driver. / Das Result
        // enthält den Aktivierungsstatus der Kurzschlussabschaltung des HW-Treiber KL30B2.

#define I3_PID_BDC_HECKKLAPPENSENSOR                                 0xDB16
        // Current status of the tailgate sensor / Aktueller Zustand des Heckklappensensors

    #define I3_RES_BDC_STAT_HECKKLAPPENSENSOR                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HECKKLAPPENSENSOR_UNIT                   '0-n'
    #define I3_RES_BDC_STAT_HECKKLAPPENSENSOR_TYPE                   unsigned char
        // Current status of the tailgate sensor / Aktueller Zustand des Heckklappensensors

#define I3_PID_BDC_NACHLAUFZEIT_KLEMME_15N                           0xDB2D
        // The result contains the follow-up time of terminal 15N in seconds. / Das Result enthält die Nachlaufzeit der
        // Klemme 15N in Sekunden.

    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_15N_WERT             (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_15N_WERT_UNIT        's'
    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_15N_WERT_TYPE        unsigned short
        // The result contains the follow-up time of terminal 15N in seconds. / Das Result enthält die Nachlaufzeit der
        // Klemme 15N in Sekunden.

#define I3_PID_BDC_NACHLAUFZEIT_KLEMME_30B                           0xDB2E
        // The result contains the delay time of terminal 30B in seconds. / Das Result enthält die Nachlaufzeit der
        // Klemme 30B in Sekunden.

    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_30B_WERT             (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_30B_WERT_UNIT        's'
    #define I3_RES_BDC_STAT_NACHLAUFZEIT_KLEMME_30B_WERT_TYPE        unsigned short
        // The result contains the delay time of terminal 30B in seconds. / Das Result enthält die Nachlaufzeit der
        // Klemme 30B in Sekunden.

// Skipping ACC_TASTER on 0xDBEA which takes arguments

// Skipping ACC_TASTER_LED on 0xDBEB which takes arguments

// Skipping HO_INFO on 0xDC54 which takes arguments

#define I3_PID_BDC_STATUS_KLEMMEN                                    0xDC56
        // The result contains the status of the terminals in the CAS control unit. Notes: - Allocation takes place
        // according to table TAB_CAS_KLEMMENSTATUS. / Das Result enthält den Status der Klemmen im CAS-Steuergerät.
        // Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_KLEMMENSTATUS.

    #define I3_RES_BDC_STAT_KLEMMENSTATUS                            (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KLEMMENSTATUS_UNIT                       '0-n'
    #define I3_RES_BDC_STAT_KLEMMENSTATUS_TYPE                       unsigned char
        // The result contains the status of the terminals in the CAS control unit. Notes: - Allocation takes place
        // according to table TAB_CAS_KLEMMENSTATUS. / Das Result enthält den Status der Klemmen im CAS-Steuergerät.
        // Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_KLEMMENSTATUS.

#define I3_PID_BDC_STATUS_KL15_ABSCHALTUNG                           0xDC57
        // This job is used to read out the status of the automatic KL15 shutdown function (door open / closed, secure
        // ZV, OSFG). / Dieser Job dient zum Auslesen des Status der Funktion automatische KL15-Abschaltung (Tür auf/zu,
        // ZV sichern, OSFG).

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_UNIT          '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_TYPE          unsigned char
        // The result indicates whether shutdown is enabled by coding. Notes: - 0 = not active, 1 = active / Das Result
        // gibt an, ob Abschaltung per Codierung freigeschaltet ist. Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_OBDKOMMUNIKATION_AKTIV (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_OBDKOMMUNIKATION_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_OBDKOMMUNIKATION_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer OBD communication (OBD-relevant diagnostic communication
        // via D-CAN) is currently active. Notes: - 0 = not active, 1 = active / Das Result gibt an, ob der
        // Abschaltverhinderer OBD-Kommunikation (OBD-relevante Diagnosekommunikation über D-CAN) gerade aktiv ist.
        // Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_BREMSE_AKTIV         (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_BREMSE_AKTIV_UNIT    '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_BREMSE_AKTIV_TYPE    unsigned char
        // The result indicates whether the switch-off preventer brake pedal is currently active. Notes: - 0 = not
        // active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Bremspedal betätigt ist gerade aktiv.
        // Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MOTORLAUF_AKTIV      (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MOTORLAUF_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MOTORLAUF_AKTIV_TYPE unsigned char
        // The result indicates whether the shutdown preventer motor run is currently active. Note: - 0 = not active, 1 =
        // active / Das Result gibt an, ob der Abschaltverhinderer Motorlauf gerade aktiv ist. Hinweis: - 0=nicht aktiv,
        // 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_KUPPLUNG_AKTIV       (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_KUPPLUNG_AKTIV_UNIT  '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_KUPPLUNG_AKTIV_TYPE  unsigned char
        // The result indicates whether the switch-off preventer clutch pedal is currently active. Notes: - 0 = not
        // active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Kupplungspedal betätigt gerade aktiv ist.
        // Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ENERGIESPARMODE_AKTIV (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ENERGIESPARMODE_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ENERGIESPARMODE_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer energy mode active (FETRAFLA) is currently active. Note:
        // The KL15 shutdown is deactivated here due to the energy manager in the FEM. / Das Result gibt an, ob der
        // Abschaltverhinderer Energiemode aktiv(FETRAFLA) gerade aktiv ist. Hinweis: Die KL15-Abschaltung ist hier
        // aufgrund des Energymanager im FEM deaktiviert.

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_AKTIV (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_AKTIV_TYPE unsigned char
        // The result indicates whether the speed switch-off preventer is currently active. Notes: - 0 = not active, 1 =
        // active / Das Result gibt an, ob der Abschaltverhinderer Geschwindigkeit gerade aktiv ist. Hinweise: - 0=nicht
        // aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MSA_AKTIV            (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MSA_AKTIV_UNIT       '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_MSA_AKTIV_TYPE       unsigned char
        // MSA is currently (L6, L7) no switch-off preventer for the KL15. This result is only available as a lead and is
        // always filled with ¿0¿. / MSA ist aktuell (L6,L7) kein Abschaltverhinderer für die KL15. Dieses Result ist nur
        // als Vorhalt vorhanden und wird immer mit ¿0¿ befüllt.

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ABBLENDLICHT_AKTIV   (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ABBLENDLICHT_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_ABBLENDLICHT_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer dipped beam is currently active. Notes: - 0 = not
        // active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Abblendlicht gerade aktiv ist. Hinweise: -
        // 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_WAEHLHEBEL_IN_N_AKTIV (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_WAEHLHEBEL_IN_N_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_WAEHLHEBEL_IN_N_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer selector lever in N is currently active (car wash
        // function). Notes: - 0 = not active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Wählhebel in N
        // gerade aktiv ist (Waschstrassen-Funktion). Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_DIAGNOSE_AKTIV       (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_DIAGNOSE_AKTIV_UNIT  '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_DIAGNOSE_AKTIV_TYPE  unsigned char
        // The result indicates whether the shutdown prevention diagnosis (speed threshold set) is currently active.
        // Notes: - 0 = not active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Diagnose
        // (Geschwindigkeitsschwelle gesetzt) gerade aktiv ist. Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FLA_MODE             (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FLA_MODE_UNIT        '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FLA_MODE_TYPE        unsigned char
        // This result is only available as a lead and is always filled with 0. / Dieses Result ist nur als Vorhalt
        // vorhanden und wird immer mit 0 befüllt.

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_AKTIV                (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_AKTIV_UNIT           '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_AKTIV_TYPE           unsigned char
        // The result indicates whether at least one switch-off preventer is currently active. Notes: - 0 = no switch-off
        // preventer active - 1 = at least one switch-off preventer active / Das Result gibt an, ob mindestens ein
        // Abschaltverhinderer gerade aktiv ist. Hinweise: - 0=kein Abschaltverhinderer aktiv - 1=mindestens ein
        // Abschaltverhinderer aktiv

    #define I3_RES_BDC_STAT_AUTOMATISCHE_ABSCHALTUNG_DURCHGEFUEHRT   (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_AUTOMATISCHE_ABSCHALTUNG_DURCHGEFUEHRT_UNIT '0/1'
    #define I3_RES_BDC_STAT_AUTOMATISCHE_ABSCHALTUNG_DURCHGEFUEHRT_TYPE unsigned char
        // The result indicates whether the last KL15 shutdown was an automatic KL15 shutdown or not. Notes: - The value
        // is set to active as soon as an autom. KL15 shutdown has been carried out. - The value is reset to not active
        // as soon as a non-automatic KL15 switch-off (e.g. via SST) has been carried out. 0 = automatic KL15 switch-off
        // was not carried out 1 = automatic KL15 switch-off was carried out / Das Result gibt an, ob die letzte
        // KL15-Abschaltung  eine automatische KL15-Abschaltung war oder nicht. Hinweise: - Der Wert wird auf aktiv
        // gesetzt, sobald eine autom. KL15-Abschaltung durchgeführt wurde. - Der Wert wird auf nicht aktiv rückgesetzt,
        // sobald eine nicht-automatische KL15-Abschaltung (z.B. per SST) durchgeführt wurde. 0 = automatische
        // KL15-Abschaltung wurde nicht durchgeführt 1 = automatische KL15-Abschaltung wurde durchgeführt

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_PRAESENTATIONSMODUS_AKTIV (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_PRAESENTATIONSMODUS_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_PRAESENTATIONSMODUS_AKTIV_TYPE unsigned char
        // The result indicates whether the shutdown preventer presentation mode (CAS assembly mode) is currently active.
        // Notes: - 0 = not active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer
        // Präsentationsmodus(CAS-Montagemodus) gerade aktiv ist. Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_UNPLAUSIBEL_AKTIV (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_UNPLAUSIBEL_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GESCHWINDIGKEIT_UNPLAUSIBEL_AKTIV_TYPE unsigned char
        // The result indicates whether the speed implausible switch-off preventer (CAS has received an implausible speed
        // value via both the HW input and CAN) is currently active. Notes: - 0 = not active, 1 = active / Das Result
        // gibt an, ob der Abschaltverhinderer Geschwindigkeit unplausibel (CAS hat sowohl über HW-Eingang als auch CAN
        // einen unplausiblen Geschwindigkeitswert erhalten) gerade aktiv ist. Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FREMDLADUNG_HYBRID_AKTIV (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FREMDLADUNG_HYBRID_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_FREMDLADUNG_HYBRID_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer for external charging is currently active in hybrid
        // vehicles. Notes: - 0 = not active, 1 = active / Das Result gibt an, ob der Abschaltverhinderer Fremdladung bei
        // Hybridfahrzeugen gerade aktiv ist. Hinweise: - 0=nicht aktiv, 1=aktiv

    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GURT_FAHRER_GESTECKT_AKTIV (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GURT_FAHRER_GESTECKT_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_ABSCHALTVERHINDERER_GURT_FAHRER_GESTECKT_AKTIV_TYPE unsigned char
        // The result indicates whether the switch-off preventer seat belt driver is currently active. Notes: - 0 = no
        // shutdown performed, 1 = shutdown performed. / Das Result gibt an, ob der Abschaltverhinderer Gurt Fahrer
        // gesteckt gerade aktiv ist. Hinweise: - 0=keine Abschaltung durchgeführt, 1=Abschaltung durchgeführt.

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_GURT_AKTIV    (RXBUF_UCHAR(18))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_GURT_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_GURT_AKTIV_TYPE unsigned char
        // The result indicates whether the KL15 is switched off by opening the driver's seat belt by coding. / Das
        // Result gibt an, ob Abschaltung der KL15 durch Öffnen Fahrergurt per Codierung freigeschaltet ist.

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_KLAPPENWECHSEL_AKTIV (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_KLAPPENWECHSEL_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_KLAPPENWECHSEL_AKTIV_TYPE unsigned char
        // The result indicates whether shutdown of the KL15 by opening / closing the door is enabled by coding. / Das
        // Result gibt an, ob Abschaltung der KL15 durch Tür auf/zu per Codierung freigeschaltet ist.

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_OSFG_ERREICHT_AKTIV (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_OSFG_ERREICHT_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_OSFG_ERREICHT_AKTIV_TYPE unsigned char
        // The result indicates whether shutdown of KL15 by reaching the OSFG (upper startability limit) is enabled by
        // coding. / Das Result gibt an, ob Abschaltung der KL15 durch Erreichen der OSFG (Obere Startfähigkeitsgrenze)
        // per Codierung freigeschaltet ist.

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_TIMEOUT_OSFG_AKTIV (RXBUF_UCHAR(21))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_TIMEOUT_OSFG_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_TIMEOUT_OSFG_AKTIV_TYPE unsigned char
        // The result indicates whether shutdown of the KL15 is enabled by coding due to OSFG with or without timeout. /
        // Das Result gibt an, ob Abschaltung der KL15 wegen OSFG mit oder ohne Timeout per Codierung freigeschaltet ist.

    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_ZV_SICHERN_AKTIV (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_ZV_SICHERN_AKTIV_UNIT '0/1'
    #define I3_RES_BDC_STAT_CODIERUNG_KL15_ABSCHALTUNG_ZV_SICHERN_AKTIV_TYPE unsigned char
        // The result indicates whether shutdown of the KL15 is enabled by ZV Secure by coding. Notes: - 0 = not active,
        // 1 = active / Das Result gibt an, ob Abschaltung der KL15 durch ZV Sichern per Codierung freigeschaltet ist.
        // Hinweise: - 0=nicht aktiv, 1=aktiv

#define I3_PID_BDC_ANSTEUERUNG_KL30F_HINTEN                          0xDC5A
        // This job is used to read out the status of the FEM outputs for controlling the KL30F rear. Notes: The job is
        // called via the standard job STATUS_LESEN with the argument ANSTEUERUNG_KL30F_HINTEN / Dieser Job dient zum
        // Auslesen des Zustands der FEM-Ausgänge zum Ansteuern der KL30F Hinten. Hinweise: Aufruf des Jobs erfolgt über
        // Standardjob STATUS_LESEN mit Argument ANSTEUERUNG_KL30F_HINTEN

    #define I3_RES_BDC_STAT_KL30F_HINTEN_AN                          (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_KL30F_HINTEN_AN_UNIT                     '0-n'
    #define I3_RES_BDC_STAT_KL30F_HINTEN_AN_TYPE                     unsigned char
        // The result contains the current state of the HW output for switching on the KL30F rear. / Das Result enthält
        // den aktuellen Zustand des HW-Ausgangs zum Einschalten der KL30F hinten.

    #define I3_RES_BDC_STAT_KL30F_HINTEN_AUS                         (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_KL30F_HINTEN_AUS_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_KL30F_HINTEN_AUS_TYPE                    unsigned char
        // The result contains the current state of the HW output for switching off the KL30F rear. / Das Result enthält
        // den aktuellen Zustand des HW-Ausgangs zum Ausschalten der KL30F hinten.

// Skipping START_STOP_TASTER_SENSOREN on 0xDC60 which takes arguments

#define I3_PID_BDC_BREMSLICHT_SCHALTER                               0xDC61
        // The result contains the current status of the brake light switch / Das Result enthält den aktuellen Zustand
        // des Bremslichtschalters

    #define I3_RES_BDC_STAT_SCHALTER_BREMSLICHT_AKTIV                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SCHALTER_BREMSLICHT_AKTIV_UNIT           '0-n'
    #define I3_RES_BDC_STAT_SCHALTER_BREMSLICHT_AKTIV_TYPE           unsigned char
        // The result contains the current status of the brake light switch / Das Result enthält den aktuellen Zustand
        // des Bremslichtschalters

#define I3_PID_BDC_KUPPL_PN_SCHALTER                                 0xDC63
        // The result contains the current status of the clutch switch (manual gearbox) or PN signal (automatic gearbox)
        // from the EGS. Notes: - Allocation takes place according to table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält
        // den aktuellen Zustand des Kupplungsschalters (Manuelles Getriebe) oder PN-Signal (Automatikgetriebe) vom EGS.
        // Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

    #define I3_RES_BDC_STAT_SCHALTER_KUPPL_PN_AKTIV                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SCHALTER_KUPPL_PN_AKTIV_UNIT             '0-n'
    #define I3_RES_BDC_STAT_SCHALTER_KUPPL_PN_AKTIV_TYPE             unsigned char
        // The result contains the current status of the clutch switch (manual gearbox) or PN signal (automatic gearbox)
        // from the EGS. Notes: - Allocation takes place according to table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält
        // den aktuellen Zustand des Kupplungsschalters (Manuelles Getriebe) oder PN-Signal (Automatikgetriebe) vom EGS.
        // Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

// Skipping CENTERLOCK_TASTER on 0xDC64 which takes arguments

#define I3_PID_BDC_MOTORHAUBE_SCHALTER                               0xDC65
        // The result contains the current status of the engine hood contact input. Notes: - Allocation takes place
        // according to table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält den aktuellen Zustand des Eingangs
        // Motorhaubenkontakt. Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

    #define I3_RES_BDC_STAT_SCHALTER_MOTORHAUBE_AKTIV                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SCHALTER_MOTORHAUBE_AKTIV_UNIT           '0-n'
    #define I3_RES_BDC_STAT_SCHALTER_MOTORHAUBE_AKTIV_TYPE           unsigned char
        // The result contains the current status of the engine hood contact input. Notes: - Allocation takes place
        // according to table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält den aktuellen Zustand des Eingangs
        // Motorhaubenkontakt. Hinweise: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

#define I3_PID_BDC_HOTEL_SCHALTER                                    0xDC66
        // The result contains the current status of the HOTEL switch input. Note: - Allocation takes place according to
        // table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält den aktuellen Zustand des Eingangs HOTEL-Schalters.
        // Hinweis: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

    #define I3_RES_BDC_STAT_SCHALTER_HOTEL_AKTIV                     (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SCHALTER_HOTEL_AKTIV_UNIT                '0-n'
    #define I3_RES_BDC_STAT_SCHALTER_HOTEL_AKTIV_TYPE                unsigned char
        // The result contains the current status of the HOTEL switch input. Note: - Allocation takes place according to
        // table TAB_CAS_DIGITAL_EINGANG. / Das Result enthält den aktuellen Zustand des Eingangs HOTEL-Schalters.
        // Hinweis: - Zuordnung erfolgt gemäß Tabelle TAB_CAS_DIGITAL_EINGANG.

// Skipping MSA_TASTER on 0xDC67 which takes arguments

// Skipping TASTER_SICHERN_HECKKL on 0xDC68 which takes arguments

// Skipping HECKKLAPPE_TASTER_OEFFNEN_INNEN on 0xDC69 which takes arguments

// Skipping SARAH on 0xDC83 which takes arguments

// Skipping SARAH_TASTER on 0xDC84 which takes arguments

// Skipping SARAH_TASTER_LED on 0xDC85 which takes arguments

#define I3_PID_BDC_READHWMODIFICATIONINDEX                           0xF152
        // This service is only used if there has been a minor hardware change to the control unit that has not led to a
        // change in the part number or the hardware SGBM IDs. Such a change cannot be diagnosed from the outside, so
        // this service was introduced for this. / Dieser Service kommt nur zum Einsatz, wenn es eine geringfügige
        // Hardwareänderung an dem Steuergerät gegeben hat, die nicht zu einer Änderung der Sachnummer bzw. der Hardware
        // SGBM-IDs geführt hat. Eine solche Änderung ist von außen nicht diagnostizierbar, daher wurde dieser Dienst
        // dafür eingeführt.

    #define I3_RES_BDC_STAT_HW_MODIFICATION_INDEX_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_HW_MODIFICATION_INDEX_WERT_UNIT          'HEX'
    #define I3_RES_BDC_STAT_HW_MODIFICATION_INDEX_WERT_TYPE          unsigned char
        // Index of hardware modification: FF: Not supported index / Index of hardware modification:  FF: Not supported
        // index

    // BF_22_F152_SUPPLIERINFO is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Supplier info tab / Tab Supplierinfo
            // STAT_HWMODEL: Mask: 0xC0 - hardware model
            // STAT_SUPPLIERINFOFIELD: Mask: 0x3F - supplierInfo
    #define I3_RES_BDC_BF_22_F152_SUPPLIERINFO                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_BF_22_F152_SUPPLIERINFO_UNIT                  'Bit'
    #define I3_RES_BDC_BF_22_F152_SUPPLIERINFO_TYPE                  unsigned char
        // Supplier info tab / Tab Supplierinfo

#define I3_PID_BDC_LWR_STATISTIK                                     0x2302
        // Reading out the statistics about the duration of the respective load status depending on the total system time
        // with active low beam and compares the values between the variants 1 HSS and 2 HSS / Auslesen der Statistik
        // über die Dauer des jeweiligen Beladungszustandes in Abhängigkeit der Gesamtsystemzeit mit aktivem Ablendlicht
        // und gleicht die Werte zwischen den Varianten 1 HSS und 2 HSS ab

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_AL_AKTIV_WERT            (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_AL_AKTIV_WERT_TYPE       unsigned long
        // Total system time with active low beam / Gesamtsystemzeit mit aktivem Abblendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0000_WERT                (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0000_WERT_TYPE           unsigned short
        // Only driver + low beam / Nur Fahrer + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0001_WERT                (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0001_WERT_TYPE           unsigned short
        // Driver with trailer + low beam / Fahrer mit Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1000_WERT                (RXBUF_UINT(8))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1000_WERT_TYPE           unsigned short
        // Driver and passenger + low beam / Fahrer und Beifahrer + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1001_WERT                (RXBUF_UINT(10))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1001_WERT_TYPE           unsigned short
        // Driver and passenger with trailer + low beam / Fahrer und Beifahrer mit Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1010_WERT                (RXBUF_UINT(12))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1010_WERT_TYPE           unsigned short
        // Driver, co-driver, 1 person in the rear + vent light / Fahrer, Beifahrer, 1 Pers in Fond + Ablentlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1100_WERT                (RXBUF_UINT(14))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1100_WERT_TYPE           unsigned short
        // Driver, passenger, 2 people in the rear + low beam / Fahrer, Beifahrer, 2 Pers in Fond + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1110_WERT                (RXBUF_UINT(16))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1110_WERT_TYPE           unsigned short
        // Driver, passenger, 3 people in the rear + low beam / Fahrer, Beifahrer, 3 Pers in Fond + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1011_WERT                (RXBUF_UINT(18))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1011_WERT_TYPE           unsigned short
        // Driver, passenger, 1 person in the rear with trailer + low beam / Fahrer, Beifahrer, 1 Pers in Fond mit
        // Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1101_WERT                (RXBUF_UINT(20))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1101_WERT_TYPE           unsigned short
        // Driver, passenger, 2 people in the rear with trailer + low beam / Fahrer, Beifahrer, 2 Pers in Fond mit
        // Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1111_WERT                (RXBUF_UINT(22))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_1111_WERT_TYPE           unsigned short
        // Driver, co-driver, 3 people in the rear with trailer + low beam / Fahrer, Beifahrer, 3 Pers in Fond mit
        // Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0010_WERT                (RXBUF_UINT(24))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0010_WERT_TYPE           unsigned short
        // Driver, 1 person in the rear + vent / Fahrer, 1 Pers in Fond + Ablentlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0100_WERT                (RXBUF_UINT(26))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0100_WERT_TYPE           unsigned short
        // Driver, 2 people in the rear + low beam / Fahrer, 2 Pers in Fond + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0110_WERT                (RXBUF_UINT(28))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0110_WERT_TYPE           unsigned short
        // Driver, 3 people in the rear + low beam / Fahrer, 3 Pers in Fond + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0011_WERT                (RXBUF_UINT(30))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0011_WERT_TYPE           unsigned short
        // Driver, 1 person in the rear with trailer + vent / Fahrer, 1 Pers in Fond mit Anhänger + Ablentlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0101_WERT                (RXBUF_UINT(32))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0101_WERT_TYPE           unsigned short
        // Driver, 2 people in the rear with trailer + low beam / Fahrer, 2 Pers in Fond mit Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0111_WERT                (RXBUF_UINT(34))
    #define I3_RES_BDC_STAT_BETRIEBSMINUTEN_0111_WERT_TYPE           unsigned short
        // Driver, 3 people in the rear with trailer + low beam / Fahrer, 3 Pers in Fond mit Anhänger + Ablendlicht

    #define I3_RES_BDC_STAT_ANZAHL_GES_WERT                          (RXBUF_UINT32(36))
    #define I3_RES_BDC_STAT_ANZAHL_GES_WERT_TYPE                     unsigned long
        // Total situation counter / Gesamt Situationszähler

    #define I3_RES_BDC_STAT_ANZAHL_GES_KL_20_WERT                    (RXBUF_UINT(40))
    #define I3_RES_BDC_STAT_ANZAHL_GES_KL_20_WERT_TYPE               unsigned short
        // No matter or under -20m / Leuchtweite egal oder unter -20m

    #define I3_RES_BDC_STAT_ANZAHL_GES_KL_10_WERT                    (RXBUF_UINT(42))
    #define I3_RES_BDC_STAT_ANZAHL_GES_KL_10_WERT_TYPE               unsigned short
        // Lighting range between -20m and -10m (included) / Leuchtweite zwischen -20m und -10m (inklusive)

    #define I3_RES_BDC_STAT_ANZAHL_GES_GR_10_WERT                    (RXBUF_UINT(44))
    #define I3_RES_BDC_STAT_ANZAHL_GES_GR_10_WERT_TYPE               unsigned short
        // Lighting range between 10m (included) and 20m. / Leuchtweite zwischen 10m (inklusive) und 20m.

    #define I3_RES_BDC_STAT_ANZAHL_GES_GR_20_WERT                    (RXBUF_UINT(46))
    #define I3_RES_BDC_STAT_ANZAHL_GES_GR_20_WERT_TYPE               unsigned short
        // Lighting range higher or no matter than 20m. / Leuchtweite höher oder egal als 20m.

    #define I3_RES_BDC_STAT_ANZAHL_AL_WERT                           (RXBUF_UINT32(48))
    #define I3_RES_BDC_STAT_ANZAHL_AL_WERT_TYPE                      unsigned long
        // Night situation counter / Nacht Situationszähler

    #define I3_RES_BDC_STAT_ANZAHL_AL_KL_20_WERT                     (RXBUF_UINT(52))
    #define I3_RES_BDC_STAT_ANZAHL_AL_KL_20_WERT_TYPE                unsigned short
        // No matter or under -20m / Leuchtweite egal oder unter -20m

    #define I3_RES_BDC_STAT_ANZAHL_AL_KL_10_WERT                     (RXBUF_UINT(54))
    #define I3_RES_BDC_STAT_ANZAHL_AL_KL_10_WERT_TYPE                unsigned short
        // Lighting range between -20m and -10m (included) / Leuchtweite zwischen -20m und -10m (inklusive)

    #define I3_RES_BDC_STAT_ANZAHL_AL_GR_10_WERT                     (RXBUF_UINT(56))
    #define I3_RES_BDC_STAT_ANZAHL_AL_GR_10_WERT_TYPE                unsigned short
        // Lighting range between 10m (included) and 20m. / Leuchtweite zwischen 10m (inklusive) und 20m.

    #define I3_RES_BDC_STAT_ANZAHL_AL_GR_20_WERT                     (RXBUF_UINT(58))
    #define I3_RES_BDC_STAT_ANZAHL_AL_GR_20_WERT_TYPE                unsigned short
        // Lighting range higher or no matter than 20m. / Leuchtweite höher oder egal als 20m.

#define I3_PID_BDC_COUNT_NSC_MIRRORHEATING_ACTIVATIONS               0x2303
        // Number of activations of ASP heating due to NSC / Anzahl der Aktivierungen der ASP-Heizung aufgrund NSC

    #define I3_RES_BDC_STAT_ANZAHL_AKTIVIERUNGEN_ASP_NSC_WERT        (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_ANZAHL_AKTIVIERUNGEN_ASP_NSC_WERT_TYPE   unsigned short
        // Number of activations of ASP heating due to NSC / Anzahl der Aktivierungen der ASP-Heizung aufgrund NSC

// Skipping RESET_COUNT_NSC_MIRRORHEATING_ACTIVATIONS on 0x2304 which takes arguments

// Skipping _STEUERN_LEUCHTENAUSGANG_DIGITAL on 0x4501 which takes arguments

// Skipping _RESET_BETRIEBSDAUER on 0x4506 which takes arguments

#define I3_PID_BDC__LWR_DIAG                                         0x4507
        // Diagnosis of the LWR / Diagnose der LWR

    #define I3_RES_BDC_STAT_LWR_ENABLE                               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_LWR_ENABLE_UNIT                          '0/1'
    #define I3_RES_BDC_STAT_LWR_ENABLE_TYPE                          unsigned char
        // LWR activated / deactivated / LWR aktiviert / deaktiviert

    #define I3_RES_BDC_STAT_LWR_SPUL_ERR_STOP                        (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_LWR_SPUL_ERR_STOP_UNIT                   '0/1'
    #define I3_RES_BDC_STAT_LWR_SPUL_ERR_STOP_TYPE                   unsigned char
        // no motor stop in case of problems with the coil test / kein Motorstop bei Problemen mit der Spulenprüfung

    #define I3_RES_BDC_STAT_LWR_SPUL_EINTR                           (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_LWR_SPUL_EINTR_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_LWR_SPUL_EINTR_TYPE                      unsigned char
        // no error entry in case of problems with the coil test / kein Fehlereintrag bei Problemen mit der Spulenprüfung

    #define I3_RES_BDC_STAT_SP_PRUEF_AKTIV                           (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_SP_PRUEF_AKTIV_UNIT                      '0/1'
    #define I3_RES_BDC_STAT_SP_PRUEF_AKTIV_TYPE                      unsigned char
        // Coil check activated / Spulenprüfung aktiviert

    #define I3_RES_BDC_STAT_LWR_DIAGNOSE_PARAM_WERT                  (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_LWR_DIAGNOSE_PARAM_WERT_TYPE             unsigned char
        // Coil test: Limit value characteristic offset / Spulenprüfung: Grenzwertkennlinie  Offset 

    #define I3_RES_BDC_STAT_LWR_DIAGNOSE_PARAM_A_WERT                (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_LWR_DIAGNOSE_PARAM_A_WERT_TYPE           unsigned char
        // Coil test: Limit value characteristic slope / Spulenprüfung: Grenzwertkennlinie  Steigung 

    #define I3_RES_BDC_STAT_LWR_CHECKGRENZE_WERT                     (RXBUF_UCHAR(6)/10.0f)
    #define I3_RES_BDC_STAT_LWR_CHECKGRENZE_WERT_UNIT                'V'
    #define I3_RES_BDC_STAT_LWR_CHECKGRENZE_WERT_TYPE                float
        // LWR test limit / LWR-Prüfgrenze

    #define I3_RES_BDC_STAT_LWR_PRUEF_SPANNUNG_WERT                  (RXBUF_UCHAR(7)/10.0f)
    #define I3_RES_BDC_STAT_LWR_PRUEF_SPANNUNG_WERT_UNIT             'V'
    #define I3_RES_BDC_STAT_LWR_PRUEF_SPANNUNG_WERT_TYPE             float
        // Diagnosis of LWR coil test: measured value voltage / Diagnose LWR Spulenprüfung: Messwert Spannung

    #define I3_RES_BDC_STAT_LWR_DIAG_HEAT_TIME_WERT                  (RXBUF_UCHAR(8)*512.0f)
    #define I3_RES_BDC_STAT_LWR_DIAG_HEAT_TIME_WERT_UNIT             's'
    #define I3_RES_BDC_STAT_LWR_DIAG_HEAT_TIME_WERT_TYPE             float
        // Lwr-Diag-Heat-Time / Lwr-Diag-Heat-Time

    #define I3_RES_BDC_STAT_LWR_DIAG_COOL_TIME_WERT                  (RXBUF_UCHAR(9)*512.0f)
    #define I3_RES_BDC_STAT_LWR_DIAG_COOL_TIME_WERT_UNIT             's'
    #define I3_RES_BDC_STAT_LWR_DIAG_COOL_TIME_WERT_TYPE             float
        // Lwr-Diag-Cool-Time / Lwr-Diag-Cool-Time

    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_HOT                      (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_HOT_UNIT                 '0/1'
    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_HOT_TYPE                 unsigned char
        // Status detection headlights: hot = 1, cold = 0 / Zustandserkennung Scheinwerfer: hot = 1, cold  = 0

    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_THERMO_TIMER_WERT        (RXBUF_UINT(11)/2.0f)
    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_THERMO_TIMER_WERT_UNIT   's'
    #define I3_RES_BDC_STAT_LWR_FRONT_LIGHT_THERMO_TIMER_WERT_TYPE   float
        // Timer headlight thermal model / Timer Scheinwerfer Thermomodell

#define I3_PID_BDC__LICHT_UEBERSPANNUNGSCOUNTER                      0x4508
        // Total number of light overvoltage counter activations / Anzahl Licht Überspannungscounter Aktivierungen
        // insgesamt

    #define I3_RES_BDC_STAT_LICHT_UESPANNUNG_COUNTER_WERT            (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_LICHT_UESPANNUNG_COUNTER_WERT_TYPE       unsigned short
        // Total number of light overvoltage counter activations / Anzahl Licht Überspannungscounter Aktivierungen
        // insgesamt

// Skipping _LICHT_12H_TIMER on 0x4509 which takes arguments

// Skipping _RESET_LICHT_UEBERSPANNUNGSCOUNTER on 0x4523 which takes arguments

#define I3_PID_BDC__ZV_KURZSCHLUSSABSCHALTUNG_ZAEHLER                0x4700
        // DID for reading out the counters for the permanent short-circuit shutdown of the central locking drives,
        // tailgate and rear window / DID zum Auslesen der Zähler der dauerhaften Kurzschlussabschaltung der ZV-Antriebe
        // Heckklappe und Heckscheibe

    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_COUNT_MAX_WERT        (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_COUNT_MAX_WERT_TYPE   unsigned long
        // The result contains the current count for the short-circuits to ground detected so far. Valid values: 0 -
        // 100000 = current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result
        // enthält den aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse. Gültige Werte: 0 -
        // 100000 = Aktueller Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_KS_RESTARTS_WERT      (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off Valid
        // values: 0 - 254 = current counter value for reclosing attempts 255 = signal invalid / implausible / Das Result
        // enthält die Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus Gültige
        // Werte: 0 - 254 = Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_KS_KL15_CYCLES_WERT   (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_HECKKLAPPE_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of resets that have already been carried out for short-circuit shutdown
        // by KL15. Valid values: 0 - 254 = current counter value for the number of resets already carried out for
        // short-circuit shutdown 255 = signal invalid / implausible / Das Result enthält den aktuelle Anzahl an bereits
        // durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein. Gültige Werte: 0 - 254 = Aktueller Zählerwert
        // für die Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_COUNT_MAX_WERT       (RXBUF_UINT32(6))
    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_COUNT_MAX_WERT_TYPE  unsigned long
        // The result contains the current count for the short-circuits to ground detected so far. Valid values: ¿0 -
        // 100000 = current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result
        // enthält den aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse. Gültige Werte: ¿  0 -
        // 100000 =Aktueller Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_KS_RESTARTS_WERT     (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off Valid
        // values: 0 - 254 = current counter value for reclosing attempts 255 = signal invalid / implausible / Das Result
        // enthält die Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus Gültige
        // Werte: 0 - 254 = Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_KS_KL15_CYCLES_WERT  (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_HECKSCHEIBE_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of resets that have already been carried out for short-circuit shutdown
        // by KL15. Valid values: 0 - 254 = current counter value for the number of resets already carried out for
        // short-circuit shutdown 255 = signal invalid / implausible / Das Result enthält den aktuelle Anzahl an bereits
        // durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein. Gültige Werte: 0 - 254 = Aktueller Zählerwert
        // für die Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_KODIERUNG_RESTARTS_WERT                  (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_KODIERUNG_RESTARTS_WERT_TYPE             unsigned char
        // The result contains the maximum value that can be coded for restart attempts in cycle KL15 on -> KL15 off ->
        // KL15 on. Valid values: 0 - 254 = maximum value for the restart attempts 255 = signal invalid / implausible /
        // Das Result enthält den codierbaren maximalen Wert an Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus ->
        // KL15 ein. Gültige Werte: 0 - 254 = maximaler Wert für die Wiedereinschaltversuche 255 = Signal ungültig /
        // unplausibel

    #define I3_RES_BDC_STAT_KODIERUNG_KL15_CYCLES_WERT               (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_KODIERUNG_KL15_CYCLES_WERT_TYPE          unsigned char
        // The result contains the codable maximum value of resets of the short-circuit shutdown by KL15. Valid values: 0
        // - 254 = maximum value for the resets of the short-circuit disconnection 255 = invalid / implausible / Das
        // Result enthält den codierbaren maximalen Wert an Resets des Kurzschlussabschaltung durch KL15 ein. Gültige
        // Werte: 0 - 254 = maximaler Wert für die Resets der Kurzschlussabschaltung 255 = Ungültig / unplausibel

// Skipping _INNENBELEUCHTUNG_PWM on 0x4800 which takes arguments

#define I3_PID_BDC__INNENBELEUCHTUNG_DAUERAUS                        0x4801
        // STAT_INNENLICHT_IB_1_DAUER_AUS / STAT_INNENLICHT_IB_1_DAUER_AUS

    #define I3_RES_BDC_STAT_INNENLICHT_IB_1_DAUER_AUS                (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_INNENLICHT_IB_1_DAUER_AUS_UNIT           '0/1'
    #define I3_RES_BDC_STAT_INNENLICHT_IB_1_DAUER_AUS_TYPE           unsigned char
        // STAT_INNENLICHT_IB_1_DAUER_AUS / STAT_INNENLICHT_IB_1_DAUER_AUS

#define I3_PID_BDC__SARAH_STATISTIK                                  0x4910
        // Information on SARAH user behavior / Informationen zum SARAH Benutzerverhalten

    #define I3_RES_BDC_STAT_FAHRDAUER_WERT                           (RXBUF_UINT(0)*10.0f/60.0f)
    #define I3_RES_BDC_STAT_FAHRDAUER_WERT_UNIT                      'h'
    #define I3_RES_BDC_STAT_FAHRDAUER_WERT_TYPE                      float
        // Accumulated driving time (trips <10 min are discarded) / Akkumulierte Fahrzeit (Fahrten < 10 min werden
        // verworfen)

    #define I3_RES_BDC_STAT_FAHRZYKLEN_WERT                          (RXBUF_UINT(2))
    #define I3_RES_BDC_STAT_FAHRZYKLEN_WERT_UNIT                     'Counts'
    #define I3_RES_BDC_STAT_FAHRZYKLEN_WERT_TYPE                     unsigned short
        // Number of driving cycles> 10 min / Anzahl der Fahrzyklen > 10 min

    #define I3_RES_BDC_STAT_SARAH_TASTER_WERT                        (RXBUF_UINT(4))
    #define I3_RES_BDC_STAT_SARAH_TASTER_WERT_UNIT                   'Counts'
    #define I3_RES_BDC_STAT_SARAH_TASTER_WERT_TYPE                   unsigned short
        // Number of SARAH key presses / Anzahl SARAH Tastendrücke

    #define I3_RES_BDC_STAT_SARAH_CONFIG_WERT                        (RXBUF_UINT(6))
    #define I3_RES_BDC_STAT_SARAH_CONFIG_WERT_UNIT                   'Counts'
    #define I3_RES_BDC_STAT_SARAH_CONFIG_WERT_TYPE                   unsigned short
        // Number of SARAH configurations / Anzahl der SARAH Konfigurationen

    #define I3_RES_BDC_STAT_SARAH_CONFIG_DIREKT_WERT                 (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_SARAH_CONFIG_DIREKT_WERT_UNIT            'Counts'
    #define I3_RES_BDC_STAT_SARAH_CONFIG_DIREKT_WERT_TYPE            unsigned char
        // Number of SARAH configurations via the settings menu (last key operation more than 5 minutes ago) / Anzahl der
        // SARAH Konfigurationen über Einstellungsmenu (letzte Tastenbedienung mehr als 5 min zurückliegend)

    #define I3_RES_BDC_STAT_RESERVE1_WERT                            (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_RESERVE1_WERT_TYPE                       unsigned char
        // reserve / Reserve

    #define I3_RES_BDC_STAT_RESERVE2_WERT                            (RXBUF_UINT(10))
    #define I3_RES_BDC_STAT_RESERVE2_WERT_TYPE                       unsigned short
        // reserve / Reserve

    #define I3_RES_BDC_STAT_RESERVE3_WERT                            (RXBUF_UINT(12))
    #define I3_RES_BDC_STAT_RESERVE3_WERT_TYPE                       unsigned short
        // reserve / Reserve

    #define I3_RES_BDC_STAT_RESERVE4_WERT                            (RXBUF_UINT(14))
    #define I3_RES_BDC_STAT_RESERVE4_WERT_TYPE                       unsigned short
        // reserve / Reserve

    #define I3_RES_BDC_STAT_RESERVE5_WERT                            (RXBUF_UINT(16))
    #define I3_RES_BDC_STAT_RESERVE5_WERT_TYPE                       unsigned short
        // reserve / Reserve

    #define I3_RES_BDC_STAT_RESERVE6_WERT                            (RXBUF_UINT(18))
    #define I3_RES_BDC_STAT_RESERVE6_WERT_TYPE                       unsigned short
        // reserve / Reserve

#define I3_PID_BDC__STATUS_BASESTATION                               0x4E07
        // The result contains the 6 bytes of raw data from the base station register. / Das Ergebnis enthält die 6 Byte
        // Rohdaten der Basestation-Register.

    // Can't yet generate code for STAT_BASESTATION_RAW_WERT_DATA of type data[6] at offset 0. But we account for the 6 bytes
        // The result contains the 6 bytes of raw data from the base station register. / Das Ergebnis enthält die 6 Byte
        // Rohdaten der Basestation-Register.

#define I3_PID_BDC_IBS_WAKEUP_GRUND                                  0x4F0E
        // The result contains the last wake-up reason from the IBS stored in the FEM. / Das Result enthält den im FEM
        // gespeicherten letzten Wakeupgrund vom IBS.

    #define I3_RES_BDC_STAT_IBS_WAKEUP                               (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_IBS_WAKEUP_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_IBS_WAKEUP_TYPE                          unsigned char
        // The result contains the last wake-up reason from the IBS stored in the FEM. / Das Result enthält den im FEM
        // gespeicherten letzten Wakeupgrund vom IBS.

#define I3_PID_BDC__STATUS_DFZ_SK                                    0x5001
        // The result contains the secret key of the DFZ. 16 byte hexadecimal value / Das Ergebnis enthält die Secret Key
        // des DFZ. 16 Byte Hexadezimaler Wert

    // Can't process STAT_DFZ_SK_WERT - don't know type string (*** this will mean all the following offsets are wrong!!! ****)

// Skipping _DFZ_MODUS on 0x5002 which takes arguments

#define I3_PID_BDC__STATUS_DFZ_GUELTIGKEIT                           0x5003
        // The result contains the value of the DFZ validity counter. 0-255 / Das Result enthält den Wert des DFZ
        // Gültigkeitszählers. 0-255

    #define I3_RES_BDC_STAT_DFZ_GUELTIGKEITSZAEHLER_WERT             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_DFZ_GUELTIGKEITSZAEHLER_WERT_TYPE        unsigned char
        // The result contains the value of the DFZ validity counter. 0-255 / Das Result enthält den Wert des DFZ
        // Gültigkeitszählers. 0-255

// Skipping _STEUERN_FBD_EMPFAENGER on 0x5007 which takes arguments

#define I3_PID_BDC__KLEMMENSTEUERUNG_KURZSCHLUSSABSCHALTUNG_ZAEHLER  0x5020
        // This job is used to read out the counter values and coding parameters for the permanent short-circuit shutdown
        // of the KL30B / KL15N and KL30B-ACSM drivers. The short-circuit shutdown serves to protect the HW driver from
        // overload. / Dieser Job dient zum Auslesen der Zählerwerte und Kodierparameter der dauerhaften
        // Kurzschlussabschaltung der Treiber KL30B/KL15N und KL30B-ACSM. Die Kurzschlussabschaltung dient zum
        // Überlastschutz des HW-Treiber.

    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_COUNT_MAX_WERT      (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_COUNT_MAX_WERT_TYPE unsigned long
        // The result contains the current count for the previously detected short circuits to ground of the KL15N1
        // driver. Note: ¿The start value is 100000 and is decremented by 1 for each SW or HW-related short circuit
        // detected (see also request ZSG_BF_13075). If the value 0 is reached, the output is permanently deactivated and
        // cannot be reset using terminal switching or a diagnostic job. -> SG exchange necessary. 0 - 100000 = current
        // counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result enthält den
        // aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse des Treibers KL15N1. Hinweis:  ¿  
        // Startwert ist 100000 und wird pro SW- oder HW-mäßigem erkanntem Kurzschluss um 1 dekrementiert (Siehe hierzu
        // auch Anforderung ZSG_BF_13075).Wird der Wert 0 erreicht, so wird der Ausgang dauerhaft deaktiviert kann weder
        // mittels Klemmenschalten noch per Diagnosejob zurückgesetzt werden. -> SG-Tausch nötig.  0 - 100000 =Aktueller
        // Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_KS_RESTARTS_WERT    (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off of
        // driver KL15N1. Note: After a short circuit is detected (on the software or hardware side), the driver is
        // reactivated as often as the maximum defined by the coding. Afterwards, a terminal change KL15 off -> KL15 on
        // is necessary in order to restart the restart attempts (see requirements ZSG_BF_13096 and ZSG_BF_13097) 0 - 254
        // = current counter value for the restart attempts 255 = signal invalid / implausible / Das Result enthält die
        // Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus des Treibers KL15N1. 
        // Hinweis:  Nach erkanntem Kurzschluss (SW- oder HW-seitig) wird der Treiber so oft wieder aktiviert, wie
        // maximal per Codierung definiert. Danach ist ein Klemmenwechsel KL15 aus -> KL15 ein nötig, um die
        // Wiedereinschaltversuche erneut zu starten (Siehe hierzu Anfoderungen ZSG_BF_13096 und ZSG_BF_13097) 0 - 254 =
        // Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_KS_KL15_CYCLES_WERT (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_TREIBER_15N1_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of already performed resets of the short-circuit shutdown by KL15 on of
        // the driver KL15N1. Note: The coding defines how often the short-circuit switch-off can be reset by switching
        // terminal 15. (See requirements ZSG_BF_13098) 0 - 254 = Current counter value for the number of resets already
        // carried out for short-circuit shutdown 255 = Signal invalid / implausible / Das Result enthält den aktuelle
        // Anzahl an bereits durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein des Treibers KL15N1. 
        // Hinweis:  Per Kodierung ist festgelegt wie oft die Kurzschlussabschaltung durch Schalten der Klemme 15
        // zurückgesetzt werden kann. (Siehe hierzu Anfoderungen ZSG_BF_13098) 0 - 254 = Aktueller Zählerwert für die
        // Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_COUNT_MAX_WERT      (RXBUF_UINT32(6))
    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_COUNT_MAX_WERT_TYPE unsigned long
        // The result contains the current counter status for the previously detected short circuits to ground of the
        // KL15N2 driver. Note: The start value is 100000 and is decremented by 1 for each SW or HW-related short circuit
        // detected (see also requirement ZSG_BF_13075). If the value 0 is reached, the output is permanently deactivated
        // and cannot be reset using terminal switching or a diagnostic job. -> SG exchange necessary. 0 - 100000 =
        // current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result enthält
        // den aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse des Treibers KL15N2. Hinweis:  
        // Startwert ist 100000 und wird pro SW- oder HW-mäßigem erkanntem Kurzschluss um 1 dekrementiert (Siehe hierzu
        // auch Anforderung ZSG_BF_13075).Wird der Wert 0 erreicht, so wird der Ausgang dauerhaft deaktiviert kann weder
        // mittels Klemmenschalten noch per Diagnosejob zurückgesetzt werden. -> SG-Tausch nötig. 0 - 100000 =Aktueller
        // Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_KS_RESTARTS_WERT    (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off of
        // driver KL15N2. Note: After a short circuit is detected (on the software or hardware side), the driver is
        // reactivated as often as the maximum defined by the coding. Afterwards, a terminal change KL15 off -> KL15 on
        // is necessary in order to restart the restart attempts (see requirements ZSG_BF_13096 and ZSG_BF_13097) 0 - 254
        // = current counter value for the restart attempts 255 = signal invalid / implausible / Das Result enthält die
        // Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus des Treibers KL15N2. 
        // Hinweis:  Nach erkanntem Kurzschluss (SW- oder HW-seitig) wird der Treiber so oft wieder aktiviert, wie
        // maximal per Codierung definiert. Danach ist ein Klemmenwechsel KL15 aus -> KL15 ein nötig, um die
        // Wiedereinschaltversuche erneut zu starten (Siehe hierzu Anfoderungen ZSG_BF_13096 und ZSG_BF_13097) 0 - 254 =
        // Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_KS_KL15_CYCLES_WERT (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_TREIBER_15N2_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of already performed resets of the short-circuit shutdown by KL15 on of
        // the driver KL15N2. Note: The coding defines how often the short-circuit switch-off can be reset by switching
        // terminal 15. (See requirements ZSG_BF_13098) 0 - 254 = Current counter value for the number of resets already
        // carried out for short-circuit shutdown 255 = Signal invalid / implausible / Das Result enthält den aktuelle
        // Anzahl an bereits durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein des Treibers KL15N2. 
        // Hinweis:  Per Kodierung ist festgelegt wie oft die Kurzschlussabschaltung durch Schalten der Klemme 15
        // zurückgesetzt werden kann. (Siehe hierzu Anfoderungen ZSG_BF_13098) 0 - 254 = Aktueller Zählerwert für die
        // Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_COUNT_MAX_WERT (RXBUF_UINT32(12))
    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_COUNT_MAX_WERT_TYPE unsigned long
        // The result contains the current counter status for the previously detected short circuits to ground of the
        // KL30B-ACSM driver. Note: ¿The start value is 100000 and is decremented by 1 for each SW or HW-related short
        // circuit detected (see also request ZSG_BF_13075). If the value 0 is reached, the output is permanently
        // deactivated and cannot be reset using terminal switching or a diagnostic job. -> SG exchange necessary. 0 -
        // 100000 = current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result
        // enthält den aktuellen Zählerstand für die bisher erkannten Kurzschlüsse gegen Masse des Treibers KL30B-ACSM.
        // Hinweis:  ¿   Startwert ist 100000 und wird pro SW- oder HW-mäßigem erkanntem Kurzschluss um 1 dekrementiert
        // (Siehe hierzu auch Anforderung ZSG_BF_13075).Wird der Wert 0 erreicht, so wird der Ausgang dauerhaft
        // deaktiviert kann weder mittels Klemmenschalten noch per Diagnosejob zurückgesetzt werden. -> SG-Tausch nötig.
        // 0 - 100000 =Aktueller Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_KS_RESTARTS_WERT (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off of the
        // KL30B-ACSM driver. Note: After a short circuit is detected (on the software or hardware side), the driver is
        // reactivated as often as the maximum defined by the coding. Afterwards, a terminal change KL15 off -> KL15 on
        // is necessary in order to restart the restart attempts (see requirements ZSG_BF_13096 and ZSG_BF_13097). 0 -
        // 254 = current counter value for the restart attempts 255 = signal invalid / implausible / Das Result enthält
        // die Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus des Treibers
        // KL30B-ACSM.  Hinweis:  Nach erkanntem Kurzschluss (SW- oder HW-seitig) wird der Treiber so oft wieder
        // aktiviert, wie maximal per Codierung definiert. Danach ist ein Klemmenwechsel KL15 aus -> KL15 ein nötig, um
        // die Wiedereinschaltversuche erneut zu starten (Siehe hierzu Anfoderungen ZSG_BF_13096 und ZSG_BF_13097). 0 -
        // 254 = Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_KS_KL15_CYCLES_WERT (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_TREIBER_KL30BACSM_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of already performed resets of the short-circuit shutdown by KL15 on
        // the KL30B-ACSM driver. Note: The coding defines how often the short-circuit switch-off can be reset by
        // switching terminal 15. (See requirements ZSG_BF_13098) 0 - 254 = Current counter value for the number of
        // resets already carried out for short-circuit shutdown 255 = Signal invalid / implausible / Das Result enthält
        // den aktuelle Anzahl an bereits durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein des Treibers
        // KL30B-ACSM.  Hinweis:  Per Kodierung ist festgelegt wie oft die Kurzschlussabschaltung durch Schalten der
        // Klemme 15 zurückgesetzt werden kann. (Siehe hierzu Anfoderungen ZSG_BF_13098) 0 - 254 = Aktueller Zählerwert
        // für die Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_COUNT_MAX_WERT    (RXBUF_UINT32(18))
    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_COUNT_MAX_WERT_TYPE unsigned long
        // The result contains the current counter status for the previously recognized short circuits to ground of the
        // KL30B-1 driver. Note: The start value is 100000 and is decremented by 1 for each SW or HW-related short
        // circuit detected (see also requirement ZSG_BF_13075). If the value 0 is reached, the output is permanently
        // deactivated and cannot be reset using terminal switching or a diagnostic job. -> SG exchange necessary. 0 -
        // 100000 = current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result
        // enthält den aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse des Treibers KL30B-1.
        // Hinweis:   Startwert ist 100000 und wird pro SW- oder HW-mäßigem erkanntem Kurzschluss um 1 dekrementiert
        // (Siehe hierzu auch Anforderung ZSG_BF_13075).Wird der Wert 0 erreicht, so wird der Ausgang dauerhaft
        // deaktiviert kann weder mittels Klemmenschalten noch per Diagnosejob zurückgesetzt werden. -> SG-Tausch nötig.
        // 0 - 100000 =Aktueller Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_KS_RESTARTS_WERT  (RXBUF_UCHAR(22))
    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out so far in cycle KL15 on -> KL15 off of
        // driver KL30B-1. Note: After a short circuit is detected (on the software or hardware side), the driver is
        // reactivated as often as the maximum defined by the coding. Afterwards, a terminal change KL15 off -> KL15 on
        // is necessary in order to restart the restart attempts (see requirements ZSG_BF_13096 and ZSG_BF_13097) 0 - 254
        // = current counter value for the restart attempts 255 = signal invalid / implausible / Das Result enthält die
        // Anzahl der bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus des Treibers KL30B-1. 
        // Hinweis:  Nach erkanntem Kurzschluss (SW- oder HW-seitig) wird der Treiber so oft wieder aktiviert, wie
        // maximal per Codierung definiert. Danach ist ein Klemmenwechsel KL15 aus -> KL15 ein nötig, um die
        // Wiedereinschaltversuche erneut zu starten (Siehe hierzu Anfoderungen ZSG_BF_13096 und ZSG_BF_13097) 0 - 254 =
        // Aktueller Zählerwert für die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_KS_KL15_CYCLES_WERT (RXBUF_UCHAR(23))
    #define I3_RES_BDC_STAT_TREIBER_KL30B1_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of already performed resets of the short-circuit shutdown by KL15 on of
        // the KL30B-1 driver. Note: The coding defines how often the short-circuit switch-off can be reset by switching
        // terminal 15. (See requirements ZSG_BF_13098) 0 - 254 = Current counter value for the number of resets already
        // carried out for short-circuit shutdown 255 = Signal invalid / implausible / Das Result enthält den aktuelle
        // Anzahl an bereits durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein des Treibers KL30B-1. 
        // Hinweis:  Per Kodierung ist festgelegt wie oft die Kurzschlussabschaltung durch Schalten der Klemme 15
        // zurückgesetzt werden kann. (Siehe hierzu Anfoderungen ZSG_BF_13098) 0 - 254 = Aktueller Zählerwert für die
        // Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_COUNT_MAX_WERT    (RXBUF_UINT32(24))
    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_COUNT_MAX_WERT_TYPE unsigned long
        // The result contains the current counter status for the previously recognized short circuits to ground of the
        // KL30B-2 driver. Note: The start value is 100000 and is decremented by 1 for each SW or HW-related short
        // circuit detected (see also requirement ZSG_BF_13075). If the value 0 is reached, the output is permanently
        // deactivated and cannot be reset using terminal switching or a diagnostic job. -> SG exchange necessary. 0 -
        // 100000 = current counter value for the restart attempts FFFFFFFFh = signal invalid / implausible / Das Result
        // enthält den aktuellen Zählerstand für die  bisher erkannten Kurzschlüsse gegen Masse des Treibers KL30B-2.
        // Hinweis:   Startwert ist 100000 und wird pro SW- oder HW-mäßigem erkanntem Kurzschluss um 1 dekrementiert
        // (Siehe hierzu auch Anforderung ZSG_BF_13075).Wird der Wert 0 erreicht, so wird der Ausgang dauerhaft
        // deaktiviert kann weder mittels Klemmenschalten noch per Diagnosejob zurückgesetzt werden. -> SG-Tausch nötig.
        // 0 - 100000 =Aktueller Zählerwert für die Wiedereinschaltversuche FFFFFFFFh = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_KS_RESTARTS_WERT  (RXBUF_UCHAR(28))
    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_KS_RESTARTS_WERT_TYPE unsigned char
        // The result contains the number of reconnection attempts carried out in cycle KL15 on -> KL15 off of driver
        // KL30B-2. Note: After a short circuit is detected (on the software or hardware side), the driver is reactivated
        // as often as the maximum defined by the coding. Afterwards, a terminal change KL15 off -> KL15 on is necessary
        // in order to restart the restart attempts (see requirements ZSG_BF_13096 and ZSG_BF_13097) 0 - 254 = current
        // counter value for the restart attempts 255 = signal invalid / implausible / Das Result enthält die Anzahl der
        // bisher durchgeführten Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus des Treibers KL30B-2.  Hinweis: 
        // Nach erkanntem Kurzschluss (SW- oder HW-seitig) wird der Treiber so oft wieder aktiviert, wie maximal per
        // Codierung definiert. Danach ist ein Klemmenwechsel KL15 aus -> KL15 ein nötig, um die Wiedereinschaltversuche
        // erneut zu starten (Siehe hierzu Anfoderungen ZSG_BF_13096 und ZSG_BF_13097) 0 - 254 = Aktueller Zählerwert für
        // die Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_KS_KL15_CYCLES_WERT (RXBUF_UCHAR(29))
    #define I3_RES_BDC_STAT_TREIBER_KL30B2_ZAEHLER_KS_KL15_CYCLES_WERT_TYPE unsigned char
        // The result contains the current number of already performed resets of the short-circuit shutdown by KL15 on
        // the KL30B-2 driver. Note: The coding defines how often the short-circuit switch-off can be reset by switching
        // terminal 15. (See requirements ZSG_BF_13098) 0 - 254 = Current counter value for the number of resets already
        // carried out for short-circuit shutdown 255 = Signal invalid / implausible / Das Result enthält den aktuelle
        // Anzahl an bereits durchgeführten Resets des Kurzschlussabschaltung durch KL15 ein des Treibers KL30B-2. 
        // Hinweis:  Per Kodierung ist festgelegt wie oft die Kurzschlussabschaltung durch Schalten der Klemme 15
        // zurückgesetzt werden kann. (Siehe hierzu Anfoderungen ZSG_BF_13098) 0 - 254 = Aktueller Zählerwert für die
        // Anzahl an bereits durchgeführten Resets der Kurzschlussabschaltung 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_KODIERUNG_RESTARTS_WERT_0X5020           (RXBUF_UCHAR(30))
    #define I3_RES_BDC_STAT_KODIERUNG_RESTARTS_WERT_0X5020_TYPE      unsigned char
        // The result contains the maximum value that can be coded for restart attempts in cycle KL15 on -> KL15 off ->
        // KL15 on. Note: The content corresponds to the coding SCD_RESTART (see requirements ZSG_BF_13073) 0 - 254 =
        // maximum value for the restart attempts 255 = signal invalid / implausible / Das Result enthält den codierbaren
        // maximalen Wert an Wiedereinschaltversuche im Zyklus KL15 ein -> KL15 aus -> KL15 ein.  Hinweis: Inhalt
        // entspricht der Codierung SCD_RESTART (Siehe hierzu Anfoderungen ZSG_BF_13073) 0 - 254 = maximaler Wert für die
        // Wiedereinschaltversuche 255 = Signal ungültig / unplausibel

    #define I3_RES_BDC_STAT_KODIERUNG_KL15_CYCLES_WERT_0X5020        (RXBUF_UCHAR(31))
    #define I3_RES_BDC_STAT_KODIERUNG_KL15_CYCLES_WERT_0X5020_TYPE   unsigned char
        // The result contains the codable maximum value of resets of the short-circuit shutdown by KL15. Note: The
        // content corresponds to the coding SCD_KL15_CYCLES (see requirements ZSG_BF_13073) 0 - 254 = maximum value for
        // the resets of the short-circuit shutdown 255 = invalid / implausible / Das Result enthält den codierbaren
        // maximalen Wert an Resets des Kurzschlussabschaltung durch KL15 ein.  Hinweis: Inhalt entspricht der Codierung
        // SCD_KL15_CYCLES (Siehe hierzu Anfoderungen ZSG_BF_13073) 0 - 254 = maximaler Wert für die Resets der
        // Kurzschlussabschaltung 255 = Ungültig / unplausibel

#define I3_PID_BDC__ECUMA_INTERN                                     0x5101
        // Diagnostic job status-EcuMA-internal / Diagnosejob Status-EcuMA-intern

    #define I3_RES_BDC_STAT_ECUMA_LAST_HW_WAKEUP_ID_WERT             (RXBUF_UINT32(0))
    #define I3_RES_BDC_STAT_ECUMA_LAST_HW_WAKEUP_ID_WERT_TYPE        unsigned long
        // ECUMA_LAST_HW_WAKEUP_ID / ECUMA_LAST_HW_WAKEUP_ID

    #define I3_RES_BDC_STAT_ECUMA_LAST_SW_WAKEUP_ID                  (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_ECUMA_LAST_SW_WAKEUP_ID_UNIT             '0-n'
    #define I3_RES_BDC_STAT_ECUMA_LAST_SW_WAKEUP_ID_TYPE             unsigned char
        // ECUMA_LAST_SW_WAKEUP_ID / ECUMA_LAST_SW_WAKEUP_ID

    #define I3_RES_BDC_STAT_ECUMA_LAST_BUS_WAKEUP_ID                 (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_ECUMA_LAST_BUS_WAKEUP_ID_UNIT            '0-n'
    #define I3_RES_BDC_STAT_ECUMA_LAST_BUS_WAKEUP_ID_TYPE            unsigned char
        // ECUMA_LAST_BUS_WAKEUP_ID / ECUMA_LAST_BUS_WAKEUP_ID

    #define I3_RES_BDC_STAT_ECUMA_LAST_RESET_ID                      (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_ECUMA_LAST_RESET_ID_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_ECUMA_LAST_RESET_ID_TYPE                 unsigned char
        // ECUMA_LAST_RESET_ID / ECUMA_LAST_RESET_ID

    #define I3_RES_BDC_STAT_ECUMA_CAN_WAKEUP_ID_WERT                 (RXBUF_UINT(7))
    #define I3_RES_BDC_STAT_ECUMA_CAN_WAKEUP_ID_WERT_TYPE            unsigned short
        // ECUMA_CAN_WAKEUP_ID / ECUMA_CAN_WAKEUP_ID

    #define I3_RES_BDC_STAT_RESERVED_WERT                            (RXBUF_UINT32(9))
    #define I3_RES_BDC_STAT_RESERVED_WERT_TYPE                       unsigned long
        // RESERVED / RESERVED

// Skipping _ECUMA_DISABLE_WAKESRC on 0x5108 which takes arguments

#define I3_PID_BDC__ECUMA_SLEEP_MODE_NRC                             0x5109
        // contains the response to sleep mode / beinhaltet den Response auf Sleep Mode

    #define I3_RES_BDC_STAT_SLEEP_MODE_NRC                           (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_SLEEP_MODE_NRC_UNIT                      '0-n'
    #define I3_RES_BDC_STAT_SLEEP_MODE_NRC_TYPE                      unsigned char
        // contains the response to sleep mode / beinhaltet den Response auf Sleep Mode

#define I3_PID_BDC_HW_INFO_PROVIDER                                  0x510A
        // Hardware code / Hardware Code

    #define I3_RES_BDC_STAT_HW_VERSION                               (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_HW_VERSION_UNIT                          '0-n'
    #define I3_RES_BDC_STAT_HW_VERSION_TYPE                          unsigned short
        // Hardware code / Hardware Code

#define I3_PID_BDC__JTAGLOCK                                         0x510B
        // use diagnosis job ReadJtagLockStatus. / use diagnosis job ReadJtagLockStatus.

    #define I3_RES_BDC_STAT_NORMAL_LOCK_STATE                        (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_NORMAL_LOCK_STATE_UNIT                   '0/1'
    #define I3_RES_BDC_STAT_NORMAL_LOCK_STATE_TYPE                   unsigned char
        // Jtag normal lock status. (0x00 ¿jtag is unlocked; 0x01 ¿jtag is locked) / Jtag normal lock status. (0x00 ¿
        // jtag is unlocked; 0x01 ¿ jtag is locked)

    #define I3_RES_BDC_STAT_PERMANENT_LOCK_STATE                     (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_PERMANENT_LOCK_STATE_UNIT                '0/1'
    #define I3_RES_BDC_STAT_PERMANENT_LOCK_STATE_TYPE                unsigned char
        // Jtag permanent lock status. (0x00 ¿permanent lock not done; 0x01 ¿permanent lock done) / Jtag permanent lock
        // status. (0x00 ¿ permanent lock not done; 0x01 ¿ permanent lock done)

#define I3_PID_BDC_READ_PULLUP_REF_RESFUEL_TANK_0                    0x5DBE
        // represents resistance value for tank left / represents resistance value for tank left

    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_LEFT_WERT        (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_LEFT_WERT_UNIT   'Ohm'
    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_LEFT_WERT_TYPE   unsigned short
        // represents resistance value for tank left / represents resistance value for tank left

#define I3_PID_BDC_READ_PULLUP_REF_RESFUEL_TANK_1                    0x5DBF
        // represents resistance value for tank right / represents resistance value for tank right

    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_RIGHT_WERT       (RXBUF_UINT(0))
    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_RIGHT_WERT_UNIT  'Ohm'
    #define I3_RES_BDC_STAT_PULLUP_REF_RESFUEL_TANK_RIGHT_WERT_TYPE  unsigned short
        // represents resistance value for tank right / represents resistance value for tank right

// Skipping _FH_STATISTIKZAEHLER_LOESCHEN on 0x6000 which takes arguments

// Skipping _FH_FA_THERMOMONITOR_AKTIV on 0x6004 which takes arguments

// Skipping _FH_BF_THERMOMONITOR_AKTIV on 0x6005 which takes arguments

// Skipping _FH_FAH_THERMOMONITOR_AKTIV on 0x6006 which takes arguments

// Skipping _FH_BFH_THERMOMONITOR_AKTIV on 0x6007 which takes arguments

#define I3_PID_BDC__FH_FA_STATISTIKZAEHLER_LESEN                     0x6020
        // Data statistic counter driver's side. STAT_FA_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_FA_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_FA_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_FA_DENORMIERUNG_MANUELL_WERT; STAT_FA_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_FA_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_FA_REVERSIERER_NORMAL_MODUS_WERT; STAT_FA_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_FA_ABBRUCH_MOTORLAUF_BK_WERT; STAT_FA_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_SHORT_DROP_WERT; STAT_FA_LONG_STROKE_WERT;
        // STAT_FA_OPERATIONS_LOW_TEMP_WERT; STAT_FA_REVERSALS_LOW_TEMP_WERT;
        // STAT_FA_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_FA_SHORT_DROP_BELOW_ZERO_DEGREES_WERT; / Daten
        // Statistikzaehler Fahrerseite. STAT_FA_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_FA_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_FA_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_FA_DENORMIERUNG_MANUELL_WERT; STAT_FA_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_FA_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_FA_REVERSIERER_NORMAL_MODUS_WERT; STAT_FA_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_FA_ABBRUCH_MOTORLAUF_BK_WERT; STAT_FA_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_SHORT_DROP_WERT; STAT_FA_LONG_STROKE_WERT;
        // STAT_FA_OPERATIONS_LOW_TEMP_WERT; STAT_FA_REVERSALS_LOW_TEMP_WERT;
        // STAT_FA_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_FA_SHORT_DROP_BELOW_ZERO_DEGREES_WERT;

    // Can't yet generate code for STAT_STATISTIKZAEHLER_FH_FA_DATA of type data[64] at offset 0. But we account for the 64 bytes
        // Data statistic counter driver's side. STAT_FA_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_FA_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_FA_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_FA_DENORMIERUNG_MANUELL_WERT; STAT_FA_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_FA_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_FA_REVERSIERER_NORMAL_MODUS_WERT; STAT_FA_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_FA_ABBRUCH_MOTORLAUF_BK_WERT; STAT_FA_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_SHORT_DROP_WERT; STAT_FA_LONG_STROKE_WERT;
        // STAT_FA_OPERATIONS_LOW_TEMP_WERT; STAT_FA_REVERSALS_LOW_TEMP_WERT;
        // STAT_FA_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_FA_SHORT_DROP_BELOW_ZERO_DEGREES_WERT; / Daten
        // Statistikzaehler Fahrerseite. STAT_FA_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_FA_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_FA_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_FA_DENORMIERUNG_MANUELL_WERT; STAT_FA_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_FA_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_FA_REVERSIERER_NORMAL_MODUS_WERT; STAT_FA_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_FA_ABBRUCH_MOTORLAUF_BK_WERT; STAT_FA_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_FA_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_FA_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_FA_SHORT_DROP_WERT; STAT_FA_LONG_STROKE_WERT;
        // STAT_FA_OPERATIONS_LOW_TEMP_WERT; STAT_FA_REVERSALS_LOW_TEMP_WERT;
        // STAT_FA_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_FA_SHORT_DROP_BELOW_ZERO_DEGREES_WERT;

#define I3_PID_BDC__FH_BF_STATISTIKZAEHLER_LESEN                     0x6021
        // Data statistics counter on passenger side. STAT_BF_NACHNORMIERUNG_AUTOMATISCH_VERT;
        // STAT_BF_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_BF_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_BF_DENORMIERUNG_MANUELL_WERT; STAT_BF_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_BF_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_BF_REVERSIERER_NORMAL_MODUS_WERT; STAT_BF_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_BF_ABBRUCH_MOTORLAUF_BK_WERT; STAT_BF_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_SHORT_DROP_WERT; STAT_BF_LONG_STROKE_WERT;
        // STAT_BF_OPERATIONS_LOW_TEMP_WERT; STAT_BF_REVERSALS_LOW_TEMP_WERT;
        // STAT_BF_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_BF_SHORT_DROP_BELOW_ZERO_DEGREES_WERT; / Daten
        // Statistikzaehler Beifahrerseite. STAT_BF_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_BF_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_BF_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_BF_DENORMIERUNG_MANUELL_WERT; STAT_BF_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_BF_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_BF_REVERSIERER_NORMAL_MODUS_WERT; STAT_BF_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_BF_ABBRUCH_MOTORLAUF_BK_WERT; STAT_BF_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_SHORT_DROP_WERT; STAT_BF_LONG_STROKE_WERT;
        // STAT_BF_OPERATIONS_LOW_TEMP_WERT; STAT_BF_REVERSALS_LOW_TEMP_WERT;
        // STAT_BF_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_BF_SHORT_DROP_BELOW_ZERO_DEGREES_WERT;

    // Can't yet generate code for STAT_STATISTIKZAEHLER_FH_BF_DATA of type data[64] at offset 0. But we account for the 64 bytes
        // Data statistics counter on passenger side. STAT_BF_NACHNORMIERUNG_AUTOMATISCH_VERT;
        // STAT_BF_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_BF_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_BF_DENORMIERUNG_MANUELL_WERT; STAT_BF_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_BF_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_BF_REVERSIERER_NORMAL_MODUS_WERT; STAT_BF_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_BF_ABBRUCH_MOTORLAUF_BK_WERT; STAT_BF_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_SHORT_DROP_WERT; STAT_BF_LONG_STROKE_WERT;
        // STAT_BF_OPERATIONS_LOW_TEMP_WERT; STAT_BF_REVERSALS_LOW_TEMP_WERT;
        // STAT_BF_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_BF_SHORT_DROP_BELOW_ZERO_DEGREES_WERT; / Daten
        // Statistikzaehler Beifahrerseite. STAT_BF_NACHNORMIERUNG_AUTOMATISCH_WERT;
        // STAT_BF_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT; STAT_BF_NACHNORMIERUNG_DIAGNOSE_WERT;
        // STAT_BF_DENORMIERUNG_MANUELL_WERT; STAT_BF_VERFAHREN_EMERGENCY_CLOSE_WERT; STAT_BF_VERFAHREN_PANIC_CLOSE_WERT;
        // STAT_BF_REVERSIERER_NORMAL_MODUS_WERT; STAT_BF_REVERSIERER_EMERGENCY_MODUS_WERT;
        // STAT_BF_ABBRUCH_MOTORLAUF_BK_WERT; STAT_BF_MANUAL_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT; STAT_BF_MANUAL_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT;
        // STAT_BF_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT; STAT_BF_SHORT_DROP_WERT; STAT_BF_LONG_STROKE_WERT;
        // STAT_BF_OPERATIONS_LOW_TEMP_WERT; STAT_BF_REVERSALS_LOW_TEMP_WERT;
        // STAT_BF_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT; STAT_BF_SHORT_DROP_BELOW_ZERO_DEGREES_WERT;

#define I3_PID_BDC__FH_FAH_STATISTIKZAEHLER_LESEN                    0x6022
        // Driver's side rear STAT_FAH_NACHNORMIERUNG_AUTOMATISCH_WERT STAT_FAH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT
        // STAT_FAH_NACHNORMIERUNG_DIAGNOSE_WERT STAT_FAH_DENORMIERUNG_MANUELL_WERT
        // STAT_FAH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_FAH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_FAH_REVERSIERER_NORMAL_MODUS_WERT STAT_FAH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_FAH_ABBRUCH_MOTORLAUF_BK_WERT STAT_FAH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_SHORT_DROP_WERT STAT_FAH_LONG_STROKE_WERT
        // STAT_FAH_OPERATIONS_LOW_TEMP_WERT STAT_FAH_REVERSALS_LOW_TEMP_WERT
        // STAT_FAH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_FAH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_FAH_RESERVE_WERT / Fahrerseite Hinten STAT_FAH_NACHNORMIERUNG_AUTOMATISCH_WERT
        // STAT_FAH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT STAT_FAH_NACHNORMIERUNG_DIAGNOSE_WERT
        // STAT_FAH_DENORMIERUNG_MANUELL_WERT STAT_FAH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_FAH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_FAH_REVERSIERER_NORMAL_MODUS_WERT STAT_FAH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_FAH_ABBRUCH_MOTORLAUF_BK_WERT STAT_FAH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_SHORT_DROP_WERT STAT_FAH_LONG_STROKE_WERT
        // STAT_FAH_OPERATIONS_LOW_TEMP_WERT STAT_FAH_REVERSALS_LOW_TEMP_WERT
        // STAT_FAH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_FAH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_FAH_RESERVE_WERT

    // Can't yet generate code for STAT_STATISTIKZAEHLER_FH_FAH_DATA of type data[64] at offset 0. But we account for the 64 bytes
        // Driver's side rear STAT_FAH_NACHNORMIERUNG_AUTOMATISCH_WERT STAT_FAH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT
        // STAT_FAH_NACHNORMIERUNG_DIAGNOSE_WERT STAT_FAH_DENORMIERUNG_MANUELL_WERT
        // STAT_FAH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_FAH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_FAH_REVERSIERER_NORMAL_MODUS_WERT STAT_FAH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_FAH_ABBRUCH_MOTORLAUF_BK_WERT STAT_FAH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_SHORT_DROP_WERT STAT_FAH_LONG_STROKE_WERT
        // STAT_FAH_OPERATIONS_LOW_TEMP_WERT STAT_FAH_REVERSALS_LOW_TEMP_WERT
        // STAT_FAH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_FAH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_FAH_RESERVE_WERT / Fahrerseite Hinten STAT_FAH_NACHNORMIERUNG_AUTOMATISCH_WERT
        // STAT_FAH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT STAT_FAH_NACHNORMIERUNG_DIAGNOSE_WERT
        // STAT_FAH_DENORMIERUNG_MANUELL_WERT STAT_FAH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_FAH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_FAH_REVERSIERER_NORMAL_MODUS_WERT STAT_FAH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_FAH_ABBRUCH_MOTORLAUF_BK_WERT STAT_FAH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_FAH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_FAH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_FAH_SHORT_DROP_WERT STAT_FAH_LONG_STROKE_WERT
        // STAT_FAH_OPERATIONS_LOW_TEMP_WERT STAT_FAH_REVERSALS_LOW_TEMP_WERT
        // STAT_FAH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_FAH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_FAH_RESERVE_WERT

#define I3_PID_BDC__FH_BFH_STATISTIKZAEHLER_LESEN                    0x6023
        // Passenger side rear STAT_BFH_NACHNORMIERUNG_AUTOMATISCH_WERT STAT_BFH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT
        // STAT_BFH_NACHNORMIERUNG_DIAGNOSE_WERT STAT_BFH_DENORMIERUNG_MANUELL_WERT
        // STAT_BFH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_BFH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_BFH_REVERSIERER_NORMAL_MODUS_WERT STAT_BFH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_BFH_ABBRUCH_MOTORLAUF_BK_WERT STAT_BFH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_SHORT_DROP_WERT STAT_BFH_LONG_STROKE_WERT
        // STAT_BFH_OPERATIONS_LOW_TEMP_WERT STAT_BFH_REVERSALS_LOW_TEMP_WERT
        // STAT_BFH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_BFH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_BFH_RESERVE_WERT / Beifahrerseite hinten STAT_BFH_NACHNORMIERUNG_AUTOMATISCH_WERT
        // STAT_BFH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT STAT_BFH_NACHNORMIERUNG_DIAGNOSE_WERT
        // STAT_BFH_DENORMIERUNG_MANUELL_WERT STAT_BFH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_BFH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_BFH_REVERSIERER_NORMAL_MODUS_WERT STAT_BFH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_BFH_ABBRUCH_MOTORLAUF_BK_WERT STAT_BFH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_SHORT_DROP_WERT STAT_BFH_LONG_STROKE_WERT
        // STAT_BFH_OPERATIONS_LOW_TEMP_WERT STAT_BFH_REVERSALS_LOW_TEMP_WERT
        // STAT_BFH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_BFH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_BFH_RESERVE_WERT

    // Can't yet generate code for STAT_STATISTIKZAEHLER_FH_BFH_DATA of type data[64] at offset 0. But we account for the 64 bytes
        // Passenger side rear STAT_BFH_NACHNORMIERUNG_AUTOMATISCH_WERT STAT_BFH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT
        // STAT_BFH_NACHNORMIERUNG_DIAGNOSE_WERT STAT_BFH_DENORMIERUNG_MANUELL_WERT
        // STAT_BFH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_BFH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_BFH_REVERSIERER_NORMAL_MODUS_WERT STAT_BFH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_BFH_ABBRUCH_MOTORLAUF_BK_WERT STAT_BFH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_SHORT_DROP_WERT STAT_BFH_LONG_STROKE_WERT
        // STAT_BFH_OPERATIONS_LOW_TEMP_WERT STAT_BFH_REVERSALS_LOW_TEMP_WERT
        // STAT_BFH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_BFH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_BFH_RESERVE_WERT / Beifahrerseite hinten STAT_BFH_NACHNORMIERUNG_AUTOMATISCH_WERT
        // STAT_BFH_NACHNORMIERUNG_MANUELL_UNBEWUSST_WERT STAT_BFH_NACHNORMIERUNG_DIAGNOSE_WERT
        // STAT_BFH_DENORMIERUNG_MANUELL_WERT STAT_BFH_VERFAHREN_EMERGENCY_CLOSE_WERT STAT_BFH_VERFAHREN_PANIC_CLOSE_WERT
        // STAT_BFH_REVERSIERER_NORMAL_MODUS_WERT STAT_BFH_REVERSIERER_EMERGENCY_MODUS_WERT
        // STAT_BFH_ABBRUCH_MOTORLAUF_BK_WERT STAT_BFH_MANUAL_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_LOW_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_LOW_SPEED_WERT STAT_BFH_MANUAL_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_MANUAL_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_AUTOMATIC_OPEN_DURING_HIGH_SPEED_WERT
        // STAT_BFH_AUTOMATIC_CLOSE_DURING_HIGH_SPEED_WERT STAT_BFH_SHORT_DROP_WERT STAT_BFH_LONG_STROKE_WERT
        // STAT_BFH_OPERATIONS_LOW_TEMP_WERT STAT_BFH_REVERSALS_LOW_TEMP_WERT
        // STAT_BFH_SHORT_DROP_BELOW_MINUS_TEN_DEGREES_WERT STAT_BFH_SHORT_DROP_BELOW_ZERO_DEGREES_WERT
        // STAT_BFH_RESERVE_WERT

// Skipping _FH_FREIGABE_AKTIV on 0x6030 which takes arguments

// Skipping _FH_DENORMIERUNGS_LOGGER_LOESCHEN_FRONT on 0x6038 which takes arguments

// Skipping _FH_DENORMIERUNGS_LOGGER_LOESCHEN_REAR on 0x6039 which takes arguments

#define I3_PID_BDC__FH_DENORMIERUNGS_LOGGER_LESEN_FRONT              0x603A
        // DID for the implementation of the job header of the same name for the front windows. / DID für die
        // Implementierung des gleichnamigen Jobheaders für die vorderen Fenster.

    #define I3_RES_BDC_STAT_FA_DENORM_ZAEHLER_WERT                   (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FA_DENORM_ZAEHLER_WERT_UNIT              'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_ZAEHLER_WERT_TYPE              unsigned char
        // The denormalization frequency is incremented with each denormalization / Die Denormierh¿ufigkeit wird bei
        // jeder Denormierung inkrementiert

    #define I3_RES_BDC_STAT_FA_DENORM_1_URSACHE_NR                   (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FA_DENORM_1_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FA_DENORM_1_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FA_DENORM_1_POS_HALL_WERT                (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_FA_DENORM_1_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_1_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FA_DENORM_1_KM_WERT                      (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FA_DENORM_1_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_1_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FA_RESERVED_1_WERT                       (RXBUF_UINT(8))
    #define I3_RES_BDC_STAT_FA_RESERVED_1_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FA_DENORM_2_URSACHE_NR                   (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_FA_DENORM_2_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FA_DENORM_2_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FA_DENORM_2_POS_HALL_WERT                (RXBUF_SINT(11))
    #define I3_RES_BDC_STAT_FA_DENORM_2_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_2_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FA_DENORM_2_KM_WERT                      (RXBUF_UINT32(13))
    #define I3_RES_BDC_STAT_FA_DENORM_2_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_2_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FA_RESERVED_2_WERT                       (RXBUF_UINT(17))
    #define I3_RES_BDC_STAT_FA_RESERVED_2_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FA_DENORM_3_URSACHE_NR                   (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_FA_DENORM_3_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FA_DENORM_3_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FA_DENORM_3_POS_HALL_WERT                (RXBUF_SINT(20))
    #define I3_RES_BDC_STAT_FA_DENORM_3_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_3_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FA_DENORM_3_KM_WERT                      (RXBUF_UINT32(22))
    #define I3_RES_BDC_STAT_FA_DENORM_3_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_3_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FA_RESERVED_3_WERT                       (RXBUF_UINT(26))
    #define I3_RES_BDC_STAT_FA_RESERVED_3_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FA_DENORM_4_URSACHE_NR                   (RXBUF_UCHAR(28))
    #define I3_RES_BDC_STAT_FA_DENORM_4_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FA_DENORM_4_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FA_DENORM_4_POS_HALL_WERT                (RXBUF_SINT(29))
    #define I3_RES_BDC_STAT_FA_DENORM_4_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_4_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FA_DENORM_4_KM_WERT                      (RXBUF_UINT32(31))
    #define I3_RES_BDC_STAT_FA_DENORM_4_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_4_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FA_RESERVED_4_WERT                       (RXBUF_UINT(35))
    #define I3_RES_BDC_STAT_FA_RESERVED_4_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FA_DENORM_5_URSACHE_NR                   (RXBUF_UCHAR(37))
    #define I3_RES_BDC_STAT_FA_DENORM_5_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_FA_DENORM_5_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FA_DENORM_5_POS_HALL_WERT                (RXBUF_SINT(38))
    #define I3_RES_BDC_STAT_FA_DENORM_5_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_5_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FA_DENORM_5_KM_WERT                      (RXBUF_UINT32(40))
    #define I3_RES_BDC_STAT_FA_DENORM_5_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_FA_DENORM_5_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FA_RESERVED_5_WERT                       (RXBUF_UINT(44))
    #define I3_RES_BDC_STAT_FA_RESERVED_5_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BF_DENORM_ZAEHLER_WERT                   (RXBUF_UCHAR(46))
    #define I3_RES_BDC_STAT_BF_DENORM_ZAEHLER_WERT_UNIT              'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_ZAEHLER_WERT_TYPE              unsigned char
        // The denormalization frequency is incremented with each denormalization / Die Denormierh¿ufigkeit wird bei
        // jeder Denormierung inkrementiert

    #define I3_RES_BDC_STAT_BF_DENORM_1_URSACHE_NR                   (RXBUF_UCHAR(47))
    #define I3_RES_BDC_STAT_BF_DENORM_1_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BF_DENORM_1_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BF_DENORM_1_POS_HALL_WERT                (RXBUF_SINT(48))
    #define I3_RES_BDC_STAT_BF_DENORM_1_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_1_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BF_DENORM_1_KM_WERT                      (RXBUF_UINT32(50))
    #define I3_RES_BDC_STAT_BF_DENORM_1_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_1_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BF_RESERVED_1_WERT                       (RXBUF_UINT(54))
    #define I3_RES_BDC_STAT_BF_RESERVED_1_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BF_DENORM_2_URSACHE_NR                   (RXBUF_UCHAR(56))
    #define I3_RES_BDC_STAT_BF_DENORM_2_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BF_DENORM_2_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BF_DENORM_2_POS_HALL_WERT                (RXBUF_SINT(57))
    #define I3_RES_BDC_STAT_BF_DENORM_2_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_2_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BF_DENORM_2_KM_WERT                      (RXBUF_UINT32(59))
    #define I3_RES_BDC_STAT_BF_DENORM_2_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_2_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BF_RESERVED_2_WERT                       (RXBUF_UINT(63))
    #define I3_RES_BDC_STAT_BF_RESERVED_2_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BF_DENORM_3_URSACHE_NR                   (RXBUF_UCHAR(65))
    #define I3_RES_BDC_STAT_BF_DENORM_3_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BF_DENORM_3_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BF_DENORM_3_POS_HALL_WERT                (RXBUF_SINT(66))
    #define I3_RES_BDC_STAT_BF_DENORM_3_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_3_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BF_DENORM_3_KM_WERT                      (RXBUF_UINT32(68))
    #define I3_RES_BDC_STAT_BF_DENORM_3_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_3_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BF_RESERVED_3_WERT                       (RXBUF_UINT(72))
    #define I3_RES_BDC_STAT_BF_RESERVED_3_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BF_DENORM_4_URSACHE_NR                   (RXBUF_UCHAR(74))
    #define I3_RES_BDC_STAT_BF_DENORM_4_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BF_DENORM_4_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BF_DENORM_4_POS_HALL_WERT                (RXBUF_SINT(75))
    #define I3_RES_BDC_STAT_BF_DENORM_4_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_4_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BF_DENORM_4_KM_WERT                      (RXBUF_UINT32(77))
    #define I3_RES_BDC_STAT_BF_DENORM_4_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_4_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BF_RESERVED_4_WERT                       (RXBUF_UINT(81))
    #define I3_RES_BDC_STAT_BF_RESERVED_4_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BF_DENORM_5_URSACHE_NR                   (RXBUF_UCHAR(83))
    #define I3_RES_BDC_STAT_BF_DENORM_5_URSACHE_NR_UNIT              '0-n'
    #define I3_RES_BDC_STAT_BF_DENORM_5_URSACHE_NR_TYPE              unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BF_DENORM_5_POS_HALL_WERT                (RXBUF_SINT(84))
    #define I3_RES_BDC_STAT_BF_DENORM_5_POS_HALL_WERT_UNIT           'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_5_POS_HALL_WERT_TYPE           short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BF_DENORM_5_KM_WERT                      (RXBUF_UINT32(86))
    #define I3_RES_BDC_STAT_BF_DENORM_5_KM_WERT_UNIT                 'Ink'
    #define I3_RES_BDC_STAT_BF_DENORM_5_KM_WERT_TYPE                 unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BF_RESERVED_5_WERT                       (RXBUF_UINT(90))
    #define I3_RES_BDC_STAT_BF_RESERVED_5_WERT_TYPE                  unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

#define I3_PID_BDC__FH_DENORMIERUNGS_LOGGER_LESEN_REAR               0x603B
        // DID for the implementation of the job header of the same name for the rear windows / DID für die
        // Implementierung des gleichnamigen Jobheaders für die hinteren Fenster

    #define I3_RES_BDC_STAT_FAH_DENORM_ZAEHLER_WERT                  (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FAH_DENORM_ZAEHLER_WERT_UNIT             'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_ZAEHLER_WERT_TYPE             unsigned char
        // The denormalization frequency is incremented with each denormalization / Die Denormierh¿ufigkeit wird bei
        // jeder Denormierung inkrementiert

    #define I3_RES_BDC_STAT_FAH_DENORM_1_URSACHE_NR                  (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FAH_DENORM_1_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FAH_DENORM_1_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FAH_DENORM_1_POS_HALL_WERT               (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_FAH_DENORM_1_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_1_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FAH_DENORM_1_KM_WERT                     (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FAH_DENORM_1_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_1_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FAH_RESERVED_1_WERT                      (RXBUF_UINT(8))
    #define I3_RES_BDC_STAT_FAH_RESERVED_1_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FAH_DENORM_2_URSACHE_NR                  (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_FAH_DENORM_2_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FAH_DENORM_2_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FAH_DENORM_2_POS_HALL_WERT               (RXBUF_SINT(11))
    #define I3_RES_BDC_STAT_FAH_DENORM_2_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_2_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FAH_DENORM_2_KM_WERT                     (RXBUF_UINT32(13))
    #define I3_RES_BDC_STAT_FAH_DENORM_2_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_2_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FAH_RESERVED_2_WERT                      (RXBUF_UINT(17))
    #define I3_RES_BDC_STAT_FAH_RESERVED_2_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FAH_DENORM_3_URSACHE_NR                  (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_FAH_DENORM_3_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FAH_DENORM_3_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FAH_DENORM_3_POS_HALL_WERT               (RXBUF_SINT(20))
    #define I3_RES_BDC_STAT_FAH_DENORM_3_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_3_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FAH_DENORM_3_KM_WERT                     (RXBUF_UINT32(22))
    #define I3_RES_BDC_STAT_FAH_DENORM_3_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_3_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FAH_RESERVED_3_WERT                      (RXBUF_UINT(26))
    #define I3_RES_BDC_STAT_FAH_RESERVED_3_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FAH_DENORM_4_URSACHE_NR                  (RXBUF_UCHAR(28))
    #define I3_RES_BDC_STAT_FAH_DENORM_4_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FAH_DENORM_4_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FAH_DENORM_4_POS_HALL_WERT               (RXBUF_SINT(29))
    #define I3_RES_BDC_STAT_FAH_DENORM_4_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_4_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FAH_DENORM_4_KM_WERT                     (RXBUF_UINT32(31))
    #define I3_RES_BDC_STAT_FAH_DENORM_4_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_4_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FAH_RESERVED_4_WERT                      (RXBUF_UINT(35))
    #define I3_RES_BDC_STAT_FAH_RESERVED_4_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_FAH_DENORM_5_URSACHE_NR                  (RXBUF_UCHAR(37))
    #define I3_RES_BDC_STAT_FAH_DENORM_5_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_FAH_DENORM_5_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_FAH_DENORM_5_POS_HALL_WERT               (RXBUF_SINT(38))
    #define I3_RES_BDC_STAT_FAH_DENORM_5_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_5_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_FAH_DENORM_5_KM_WERT                     (RXBUF_UINT32(40))
    #define I3_RES_BDC_STAT_FAH_DENORM_5_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_FAH_DENORM_5_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_FAH_RESERVED_5_WERT                      (RXBUF_UINT(44))
    #define I3_RES_BDC_STAT_FAH_RESERVED_5_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BFH_DENORM_ZAEHLER_WERT                  (RXBUF_UCHAR(46))
    #define I3_RES_BDC_STAT_BFH_DENORM_ZAEHLER_WERT_UNIT             'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_ZAEHLER_WERT_TYPE             unsigned char
        // The denormalization frequency is incremented with each denormalization / Die Denormierh¿ufigkeit wird bei
        // jeder Denormierung inkrementiert

    #define I3_RES_BDC_STAT_BFH_DENORM_1_URSACHE_NR                  (RXBUF_UCHAR(47))
    #define I3_RES_BDC_STAT_BFH_DENORM_1_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_BFH_DENORM_1_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BFH_DENORM_1_POS_HALL_WERT               (RXBUF_SINT(48))
    #define I3_RES_BDC_STAT_BFH_DENORM_1_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_1_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BFH_DENORM_1_KM_WERT                     (RXBUF_UINT32(50))
    #define I3_RES_BDC_STAT_BFH_DENORM_1_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_1_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BFH_RESERVED_1_WERT                      (RXBUF_UINT(54))
    #define I3_RES_BDC_STAT_BFH_RESERVED_1_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BFH_DENORM_2_URSACHE_NR                  (RXBUF_UCHAR(56))
    #define I3_RES_BDC_STAT_BFH_DENORM_2_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_BFH_DENORM_2_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BFH_DENORM_2_POS_HALL_WERT               (RXBUF_SINT(57))
    #define I3_RES_BDC_STAT_BFH_DENORM_2_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_2_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BFH_DENORM_2_KM_WERT                     (RXBUF_UINT32(59))
    #define I3_RES_BDC_STAT_BFH_DENORM_2_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_2_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BFH_RESERVED_2_WERT                      (RXBUF_UINT(63))
    #define I3_RES_BDC_STAT_BFH_RESERVED_2_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BFH_DENORM_3_URSACHE_NR                  (RXBUF_UCHAR(65))
    #define I3_RES_BDC_STAT_BFH_DENORM_3_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_BFH_DENORM_3_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BFH_DENORM_3_POS_HALL_WERT               (RXBUF_SINT(66))
    #define I3_RES_BDC_STAT_BFH_DENORM_3_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_3_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BFH_DENORM_3_KM_WERT                     (RXBUF_UINT32(68))
    #define I3_RES_BDC_STAT_BFH_DENORM_3_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_3_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BFH_RESERVED_3_WERT                      (RXBUF_UINT(72))
    #define I3_RES_BDC_STAT_BFH_RESERVED_3_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BFH_DENORM_4_URSACHE_NR                  (RXBUF_UCHAR(74))
    #define I3_RES_BDC_STAT_BFH_DENORM_4_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_BFH_DENORM_4_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BFH_DENORM_4_POS_HALL_WERT               (RXBUF_SINT(75))
    #define I3_RES_BDC_STAT_BFH_DENORM_4_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_4_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BFH_DENORM_4_KM_WERT                     (RXBUF_UINT32(77))
    #define I3_RES_BDC_STAT_BFH_DENORM_4_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_4_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BFH_RESERVED_4_WERT                      (RXBUF_UINT(81))
    #define I3_RES_BDC_STAT_BFH_RESERVED_4_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

    #define I3_RES_BDC_STAT_BFH_DENORM_5_URSACHE_NR                  (RXBUF_UCHAR(83))
    #define I3_RES_BDC_STAT_BFH_DENORM_5_URSACHE_NR_UNIT             '0-n'
    #define I3_RES_BDC_STAT_BFH_DENORM_5_URSACHE_NR_TYPE             unsigned char
        // Cause of denormalization. / Ursache der Denormierung.

    #define I3_RES_BDC_STAT_BFH_DENORM_5_POS_HALL_WERT               (RXBUF_SINT(84))
    #define I3_RES_BDC_STAT_BFH_DENORM_5_POS_HALL_WERT_UNIT          'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_5_POS_HALL_WERT_TYPE          short
        // Specification of the hall increments (2-byte) / Angabe der Hallinkremente (2-Byte)

    #define I3_RES_BDC_STAT_BFH_DENORM_5_KM_WERT                     (RXBUF_UINT32(86))
    #define I3_RES_BDC_STAT_BFH_DENORM_5_KM_WERT_UNIT                'Ink'
    #define I3_RES_BDC_STAT_BFH_DENORM_5_KM_WERT_TYPE                unsigned long
        // Mileage (3-byte) / Kilometerstand (3-Byte)

    #define I3_RES_BDC_STAT_BFH_RESERVED_5_WERT                      (RXBUF_UINT(90))
    #define I3_RES_BDC_STAT_BFH_RESERVED_5_WERT_TYPE                 unsigned short
        // Implementation in the SW-C MT / Umsetzung in der SW-C MT

// Skipping _FH_REVERSIER_LOGGER_LOESCHEN_FRONT on 0x603C which takes arguments

// Skipping _FH_REVERSIER_LOGGER_LOESCHEN_REAR on 0x603D which takes arguments

#define I3_PID_BDC__FH_REVERSIER_LOGGER_LESEN_FRONT                  0x603E
        // DID for the implementation of the job header of the same name for the front windows / DID für die
        // Implementierung des gleichnamigen Jobheaders für die vorderen Fenster

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_ZAEHLER_WERT              (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_ZAEHLER_WERT_UNIT         'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_ZAEHLER_WERT_TYPE         unsigned char
        // The reversing frequency is incremented with each reversing / Die Reversierhaeufigkeit wird bei jedem Reversier
        // inkrementiert

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_URSACHE_NR              (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_POS_HALL_WERT           (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_KM_WERT                 (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_ATEMP_WERT              (RXBUF_SCHAR(8))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_SPANNUNG_WERT           (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(10))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_URSACHE_NR              (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_POS_HALL_WERT           (RXBUF_SINT(13))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_KM_WERT                 (RXBUF_UINT32(15))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_ATEMP_WERT              (RXBUF_SCHAR(19))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_SPANNUNG_WERT           (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(21))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_URSACHE_NR              (RXBUF_UCHAR(23))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_POS_HALL_WERT           (RXBUF_SINT(24))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_KM_WERT                 (RXBUF_UINT32(26))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_ATEMP_WERT              (RXBUF_SCHAR(30))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_SPANNUNG_WERT           (RXBUF_UCHAR(31))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(32))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_URSACHE_NR              (RXBUF_UCHAR(34))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_POS_HALL_WERT           (RXBUF_SINT(35))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_KM_WERT                 (RXBUF_UINT32(37))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_ATEMP_WERT              (RXBUF_SCHAR(41))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_SPANNUNG_WERT           (RXBUF_UCHAR(42))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(43))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_URSACHE_NR              (RXBUF_UCHAR(45))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_POS_HALL_WERT           (RXBUF_SINT(46))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_KM_WERT                 (RXBUF_UINT32(48))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_ATEMP_WERT              (RXBUF_SCHAR(52))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_SPANNUNG_WERT           (RXBUF_UCHAR(53))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(54))
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FA_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_ZAEHLER_WERT              (RXBUF_UCHAR(56))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_ZAEHLER_WERT_UNIT         'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_ZAEHLER_WERT_TYPE         unsigned char
        // The reversing frequency is incremented with each reversing / Die Reversierhaeufigkeit wird bei jedem Reversier
        // inkrementiert

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_URSACHE_NR              (RXBUF_UCHAR(57))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_POS_HALL_WERT           (RXBUF_SINT(58))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_KM_WERT                 (RXBUF_UINT32(60))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_ATEMP_WERT              (RXBUF_SCHAR(64))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_SPANNUNG_WERT           (RXBUF_UCHAR(65))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(66))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_URSACHE_NR              (RXBUF_UCHAR(68))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_POS_HALL_WERT           (RXBUF_SINT(69))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_KM_WERT                 (RXBUF_UINT32(71))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_ATEMP_WERT              (RXBUF_SCHAR(75))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_SPANNUNG_WERT           (RXBUF_UCHAR(76))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(77))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_URSACHE_NR              (RXBUF_UCHAR(79))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_POS_HALL_WERT           (RXBUF_SINT(80))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_KM_WERT                 (RXBUF_UINT32(82))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_ATEMP_WERT              (RXBUF_SCHAR(86))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_SPANNUNG_WERT           (RXBUF_UCHAR(87))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(88))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_URSACHE_NR              (RXBUF_UCHAR(90))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_POS_HALL_WERT           (RXBUF_SINT(91))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_KM_WERT                 (RXBUF_UINT32(93))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_ATEMP_WERT              (RXBUF_SCHAR(97))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_SPANNUNG_WERT           (RXBUF_UCHAR(98))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(99))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_URSACHE_NR              (RXBUF_UCHAR(101))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_URSACHE_NR_UNIT         '0-n'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_URSACHE_NR_TYPE         unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_POS_HALL_WERT           (RXBUF_SINT(102))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_POS_HALL_WERT_UNIT      'Ink'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_POS_HALL_WERT_TYPE      short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_KM_WERT                 (RXBUF_UINT32(104))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_KM_WERT_UNIT            'km'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_KM_WERT_TYPE            unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_ATEMP_WERT              (RXBUF_SCHAR(108))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_ATEMP_WERT_UNIT         '°C'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_ATEMP_WERT_TYPE         char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_SPANNUNG_WERT           (RXBUF_UCHAR(109))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_SPANNUNG_WERT_UNIT      'V'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_SPANNUNG_WERT_TYPE      unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_GESCHWINDIGKEIT_WERT    (RXBUF_UINT(110))
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BF_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

#define I3_PID_BDC__FH_REVERSIER_LOGGER_LESEN_REAR                   0x603F
        // DID for the implementation of the job header of the same name for the rear windows / DID für die
        // Implementierung des gleichnamigen Jobheaders für die hinteren Fenster

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_ZAEHLER_WERT             (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_ZAEHLER_WERT_UNIT        'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_ZAEHLER_WERT_TYPE        unsigned char
        // The reversing frequency is incremented with each reversing / Die Reversierhaeufigkeit wird bei jedem Reversier
        // inkrementiert

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_URSACHE_NR             (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_POS_HALL_WERT          (RXBUF_SINT(2))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_KM_WERT                (RXBUF_UINT32(4))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_ATEMP_WERT             (RXBUF_SCHAR(8))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_SPANNUNG_WERT          (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(10))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_URSACHE_NR             (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_POS_HALL_WERT          (RXBUF_SINT(13))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_KM_WERT                (RXBUF_UINT32(15))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_ATEMP_WERT             (RXBUF_SCHAR(19))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_SPANNUNG_WERT          (RXBUF_UCHAR(20))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(21))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_URSACHE_NR             (RXBUF_UCHAR(23))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_POS_HALL_WERT          (RXBUF_SINT(24))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_KM_WERT                (RXBUF_UINT32(26))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_ATEMP_WERT             (RXBUF_SCHAR(30))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_SPANNUNG_WERT          (RXBUF_UCHAR(31))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(32))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_URSACHE_NR             (RXBUF_UCHAR(34))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_POS_HALL_WERT          (RXBUF_SINT(35))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_KM_WERT                (RXBUF_UINT32(37))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_ATEMP_WERT             (RXBUF_SCHAR(41))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_SPANNUNG_WERT          (RXBUF_UCHAR(42))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(43))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_URSACHE_NR             (RXBUF_UCHAR(45))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_POS_HALL_WERT          (RXBUF_SINT(46))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_KM_WERT                (RXBUF_UINT32(48))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_ATEMP_WERT             (RXBUF_SCHAR(52))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_SPANNUNG_WERT          (RXBUF_UCHAR(53))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(54))
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_FAH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_ZAEHLER_WERT             (RXBUF_UCHAR(56))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_ZAEHLER_WERT_UNIT        'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_ZAEHLER_WERT_TYPE        unsigned char
        // The reversing frequency is incremented with each reversing / Die Reversierhaeufigkeit wird bei jedem Reversier
        // inkrementiert

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_URSACHE_NR             (RXBUF_UCHAR(57))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_POS_HALL_WERT          (RXBUF_SINT(58))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_KM_WERT                (RXBUF_UINT32(60))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_ATEMP_WERT             (RXBUF_SCHAR(64))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_SPANNUNG_WERT          (RXBUF_UCHAR(65))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(66))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_1_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_URSACHE_NR             (RXBUF_UCHAR(68))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_POS_HALL_WERT          (RXBUF_SINT(69))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_KM_WERT                (RXBUF_UINT32(71))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_ATEMP_WERT             (RXBUF_SCHAR(75))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_SPANNUNG_WERT          (RXBUF_UCHAR(76))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(77))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_2_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_URSACHE_NR             (RXBUF_UCHAR(79))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_POS_HALL_WERT          (RXBUF_SINT(80))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_KM_WERT                (RXBUF_UINT32(82))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_ATEMP_WERT             (RXBUF_SCHAR(86))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_SPANNUNG_WERT          (RXBUF_UCHAR(87))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(88))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_3_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_URSACHE_NR             (RXBUF_UCHAR(90))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_POS_HALL_WERT          (RXBUF_SINT(91))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_KM_WERT                (RXBUF_UINT32(93))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_ATEMP_WERT             (RXBUF_SCHAR(97))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_SPANNUNG_WERT          (RXBUF_UCHAR(98))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(99))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_4_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_URSACHE_NR             (RXBUF_UCHAR(101))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_URSACHE_NR_UNIT        '0-n'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_URSACHE_NR_TYPE        unsigned char
        // Reversal cause (1 byte); Create a list with standardized values and then an area that can be occupied by the
        // supplier. / Reversier-Ursache (1Byte); Liste erstellen mit vereinheitlichten Werten und nachfolgend einem
        // Bereich der vom Lieferanten belegt werden kann.

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_POS_HALL_WERT          (RXBUF_SINT(102))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_POS_HALL_WERT_UNIT     'Ink'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_POS_HALL_WERT_TYPE     short
        // Specification of hall increments / Angabe Hallinkremente

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_KM_WERT                (RXBUF_UINT32(104))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_KM_WERT_UNIT           'km'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_KM_WERT_TYPE           unsigned long
        // Indication of mileage / Angabe Kilometerstand

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_ATEMP_WERT             (RXBUF_SCHAR(108))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_ATEMP_WERT_UNIT        '°C'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_ATEMP_WERT_TYPE        char
        // Outside temperature (from CAN signal) / Aussentemperatur (aus CAN-Signal)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_SPANNUNG_WERT          (RXBUF_UCHAR(109))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_SPANNUNG_WERT_UNIT     'V'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_SPANNUNG_WERT_TYPE     unsigned char
        // Operating voltage (output to FH drive) / Betriebsspannung (Ausgang zu FH-Antrieb)

    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT   (RXBUF_UINT(110))
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_UNIT 'km/h'
    #define I3_RES_BDC_STAT_BFH_REVERSIEREN_5_GESCHWINDIGKEIT_WERT_TYPE unsigned short
        // Vehicle speed (coding analogue to CAN signal) / Fahrzeuggeschwindigkeit (Codierung analog CAN-Signal)

// Skipping _FH_MOTORSTOP_LOGGER_LOESCHEN_FRONT on 0x6040 which takes arguments

// Skipping _FH_MOTORSTOP_LOGGER_LOESCHEN_REAR on 0x6041 which takes arguments

#define I3_PID_BDC__FH_MOTORSTOP_LOGGER_LESEN_FRONT                  0x6042
        // DID to implement the job header _FH_MOTORSTOP_LOGGER_LESEN for the front windows / DID zur Umsetzung des
        // Jobheaders _FH_MOTORSTOP_LOGGER_LESEN für die vorderen Fenster

    #define I3_RES_BDC_STAT_FA_STOPREASON_1_NR                       (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FA_STOPREASON_1_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_1_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_2_NR                       (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FA_STOPREASON_2_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_2_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_3_NR                       (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FA_STOPREASON_3_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_3_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_4_NR                       (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FA_STOPREASON_4_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_4_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_5_NR                       (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_FA_STOPREASON_5_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_5_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_6_NR                       (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_FA_STOPREASON_6_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_6_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_7_NR                       (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_FA_STOPREASON_7_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_7_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_8_NR                       (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_FA_STOPREASON_8_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_8_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_9_NR                       (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_FA_STOPREASON_9_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_9_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FA_STOPREASON_10_NR                      (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_FA_STOPREASON_10_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FA_STOPREASON_10_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_1_NR                       (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_BF_STOPREASON_1_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_1_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_2_NR                       (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_BF_STOPREASON_2_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_2_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_3_NR                       (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_BF_STOPREASON_3_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_3_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_4_NR                       (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_BF_STOPREASON_4_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_4_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_5_NR                       (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_BF_STOPREASON_5_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_5_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_6_NR                       (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_BF_STOPREASON_6_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_6_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_7_NR                       (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_BF_STOPREASON_7_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_7_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_8_NR                       (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_BF_STOPREASON_8_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_8_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_9_NR                       (RXBUF_UCHAR(18))
    #define I3_RES_BDC_STAT_BF_STOPREASON_9_NR_UNIT                  '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_9_NR_TYPE                  unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BF_STOPREASON_10_NR                      (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_BF_STOPREASON_10_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BF_STOPREASON_10_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

#define I3_PID_BDC__FH_MOTORSTOP_LOGGER_LESEN_REAR                   0x6043
        // DID to implement the job header _FH_MOTORSTOP_LOGGER_LESEN for the rear window / DID zur Umsetzung des
        // Jobheaders _FH_MOTORSTOP_LOGGER_LESEN für die hinteren Fenster

    #define I3_RES_BDC_STAT_FAH_STOPREASON_1_NR                      (RXBUF_UCHAR(0))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_1_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_1_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_2_NR                      (RXBUF_UCHAR(1))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_2_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_2_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_3_NR                      (RXBUF_UCHAR(2))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_3_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_3_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_4_NR                      (RXBUF_UCHAR(3))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_4_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_4_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_5_NR                      (RXBUF_UCHAR(4))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_5_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_5_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_6_NR                      (RXBUF_UCHAR(5))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_6_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_6_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_7_NR                      (RXBUF_UCHAR(6))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_7_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_7_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_8_NR                      (RXBUF_UCHAR(7))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_8_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_8_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_9_NR                      (RXBUF_UCHAR(8))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_9_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_9_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_FAH_STOPREASON_10_NR                     (RXBUF_UCHAR(9))
    #define I3_RES_BDC_STAT_FAH_STOPREASON_10_NR_UNIT                '0-n'
    #define I3_RES_BDC_STAT_FAH_STOPREASON_10_NR_TYPE                unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_1                         (RXBUF_UCHAR(10))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_1_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_1_TYPE                    unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_2                         (RXBUF_UCHAR(11))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_2_UNIT                    '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_2_TYPE                    unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_3_NR                      (RXBUF_UCHAR(12))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_3_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_3_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_4_NR                      (RXBUF_UCHAR(13))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_4_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_4_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_5_NR                      (RXBUF_UCHAR(14))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_5_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_5_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_6_NR                      (RXBUF_UCHAR(15))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_6_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_6_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_7_NR                      (RXBUF_UCHAR(16))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_7_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_7_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_8_NR                      (RXBUF_UCHAR(17))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_8_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_8_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_9_NR                      (RXBUF_UCHAR(18))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_9_NR_UNIT                 '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_9_NR_TYPE                 unsigned char
        // Reason for the engine stop / Grund des Motorstops

    #define I3_RES_BDC_STAT_BFH_STOPREASON_10_NR                     (RXBUF_UCHAR(19))
    #define I3_RES_BDC_STAT_BFH_STOPREASON_10_NR_UNIT                '0-n'
    #define I3_RES_BDC_STAT_BFH_STOPREASON_10_NR_TYPE                unsigned char
        // Reason for the engine stop / Grund des Motorstops

// Skipping _FH_NORMIERUNG_LOESCHEN_FRONT on 0x604A which takes arguments

// Skipping _FH_NORMIERUNG_LOESCHEN_REAR on 0x604B which takes arguments

// Skipping _FH_KENNLINIE_LOESCHEN_FRONT on 0x604C which takes arguments

// Skipping _FH_KENNLINIE_LOESCHEN_REAR on 0x604D which takes arguments

// Skipping _STEUERN_DFZ_ALARM on 0xF002 which takes arguments

#define I3_PID_BDC__STEUERN_DFZ_VERBINDUNGSENDE                      0xF003
        // The job to terminate an HDLC connection (Disconnect). Note: The FBD receiver is reset to the low data rate. /
        // Der Job zum Beenden einer HDLC-Verbindung (Disconnect). Hinweis: Der FBD-Empfänger wird wieder auf niedrige
        // Datenrate zurückgesetzt.

#define I3_PID_BDC__ECU_HW_RESET                                     0xF005
        // STEUERN__ECU_HW_RESET / STEUERN__ECU_HW_RESET

// Skipping _SENSE_LESEN on 0xF100 which takes arguments

#define I3_PID_BDC__LWR_STATISTIK_RESET                              0xF105
        // Resetting data stored in NV-RAM regarding LWR statistics. / Zurücksetzen im NV-RAM abgelegten Daten bezüglich
        // LWR Statistik.

// Skipping _FH_DEBUG_OUTPUT_KONF on 0xF200 which takes arguments

// Skipping _FH_VERFAHREN_ZEIT_FRONT on 0xF206 which takes arguments

// Skipping _FH_VERFAHREN_ZEIT_REAR on 0xF207 which takes arguments

// Skipping _FH_DEBUG_OUTPUT_KONF_FRONT on 0xF208 which takes arguments

// Skipping _FH_DEBUG_OUTPUT_KONF_REAR on 0xF209 which takes arguments
