
//
// Warning: don't edit - generated by generate_ecu_code.pl processing ../dev/dsc_i1.json: DSC 29: Dynamic stability controller
// This generated code  makes it easier to process CANBUS messages from the DSC ecu in a BMW i3
//

#define I3_ECU_DSC_TX                                                0x06F129
#define I3_ECU_DSC_RX                                                0x0629F1

#define I3_PID_DSC_FS_LOESCHEN_PERMANENT                             0x1060
        // Job to delete the permanent DTCs / Job zum Löschen der Permanent-DTCs

#define I3_PID_DSC_FEHLERSPEICHER_ENDE_WERKSABLAUF                   0x1061
        // Deletion of individual errors and permanent DTCs prevented / Löschen von Einzelfehlern und Permanent-DTCs
        // unterbindet

    #define I3_RES_DSC_STAT_FS_ENDE_WABL                             (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_FS_ENDE_WABL_UNIT                        '0/1'
    #define I3_RES_DSC_STAT_FS_ENDE_WABL_TYPE                        unsigned char
        // 0: Locked (deletion of individual errors and PDTCs is prevented) 1: Unlocked (deletion of individual errors
        // and PDTCs is not prevented) / 0: Verriegelt (loeschen von Einzelfehlern und PDTCs wird unterbunden) 1:
        // Entriegelt (loeschen von Einzelfehlern und PDTCs wird nicht unterbunden)

#define I3_PID_DSC_START_ADAPTIVDATEN_RUECKSETZEN                    0xA051
        // Start and status reset adaptive data / Start und Status Ruecksetzen Adaptivdaten

    #define I3_RES_DSC_STAT_ROUTINE_STATUS                           (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_TYPE                      unsigned char
        // Execution status / Ausführungsstatus

#define I3_PID_DSC_STEUERN_AX_AY_ABGLEICH                            0xA052
        // Start and status comparison of accelerometers / Starten und Status Abgleich Beschleunigungssensoren

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA052                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA052_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA052_TYPE               unsigned char
        // Execution status / Ausführungsstatus

#define I3_PID_DSC_START_ADAPTIVDATEN_WERKSMODUS                     0xA053
        // Start and status standardization adaptive data / Starten und Status Standardisierung Adaptivdaten

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA053                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA053_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA053_TYPE               unsigned char
        // Execution status / Ausführungsstatus

#define I3_PID_DSC_STEUERN_ADAPTIVDATEN_SLW_RESET                    0xA05B
        // Start and status total steering angle reset / Start und Status Summenlenkwinkel Reset

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA05B                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA05B_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA05B_TYPE               unsigned char
        // Execution status / Ausführungsstatus

    #define I3_RES_DSC_STAT_DATEN_SCHREIBEN_AKTIV_NR                 (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_DATEN_SCHREIBEN_AKTIV_NR_UNIT            '0-n'
    #define I3_RES_DSC_STAT_DATEN_SCHREIBEN_AKTIV_NR_TYPE            unsigned char
        // Information as to whether the adaptive data is being written. / Information ob der Schreibvorgang der
        // Adaptivdaten läuft.

// Skipping DSC_ENTLUEFTUNG on 0xA061 which takes arguments

// Skipping DSC_VENTILE_PULS on 0xA064 which takes arguments

// Skipping RADDREHZAHLSENSORPRUEFUNG on 0xA065 which takes arguments

// Skipping DSC_PUMPENFUNKTIONSPRUEFUNG on 0xA066 which takes arguments

// Skipping BPWS_INITIALISIERUNG on 0xA067 which takes arguments

#define I3_PID_DSC_RPA_RESET_STATISTIK                               0xA068
        // Reset RPA learning data statistics / Reset RPA Lerndaten Statistik

// Skipping DSC_VAKUUMBEFUELLUNG on 0xA06D which takes arguments

#define I3_PID_DSC_DSC_DRUCKSENSOREN_KALIBRIERUNG                    0xA070
        // Starting and stopping calibration of DSC pressure sensors / Starten und Stoppen Kalibrierung DSC Drucksensoren

#define I3_PID_DSC_RPA_RESET_STANDARDISIERUNG                        0xA074
        // Reset RPA standardization / Reset RPA Standardisierung

#define I3_PID_DSC_DAC_RESET                                         0xA087
        // Reset of the learning values for the Driver Attention Control (drowsiness detection) / Reset der Lernwerte für
        // die Driver Attention Control (Müdigkeitserkennung)

#define I3_PID_DSC_DAC_AUSLOESUNG                                    0xA088
        // Triggering of a drowsiness warning from Driver Attention Control / Auslösung einer Müdigkeitswarnung der
        // Driver Attention Control

// Skipping VENTILE_KALIBRIERUNG on 0xA08F which takes arguments

#define I3_PID_DSC_IPB_LED                                           0xA123
        // The service switches the IPB switch LED on / off and outputs the LED status. / Der Service schaltet die IPB
        // Switch LED ein-/aus und gibt den LED Zustand aus.

    #define I3_RES_DSC_STAT_IPB_LED_ZUSTAND                          (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_IPB_LED_ZUSTAND_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_IPB_LED_ZUSTAND_TYPE                     unsigned char
        // 0- LED off, 1-LED on / 0- LED aus, 1-LED an

#define I3_PID_DSC_FLM_RESET                                         0xA130
        // Field Load Manager (FLM) data / Field Load Manager (FLM) Daten

    #define I3_RES_DSC_STAT_FLM_RESET                                (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_FLM_RESET_UNIT                           '0-n'
    #define I3_RES_DSC_STAT_FLM_RESET_TYPE                           unsigned char
        // Execution status / Ausführungsstatus

// Skipping EPB_ACTION_REQUEST on 0xA193 which takes arguments

#define I3_PID_DSC_EXTERNE_ANFORDERUNG_GKU_IPB_ZAEHLER_RUECKSETZEN   0xA1AA
        // Reset counter for transfer by external request gear / Zaehler fuer Uebernahmen durch externe Anforderung
        // Getriebe ruecksetzen

#define I3_PID_DSC_EXTERNE_ANFORDERUNG_EPB_ZAEHLER_RUECKSETZEN       0xA1BE
        // Reset counter for external request gear / Zähler für externe Anforderung Getriebe rücksetzen

#define I3_PID_DSC_DSC_PUMPENFUNKTIONSTEST                           0xA222
        // Starting, stopping and status function test pump / Starten, Stoppen und Status Funktionstest Pumpe

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA222                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA222_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XA222_TYPE               unsigned char
        // Execution status / Ausführungsstatus

    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_LEERLAUF_WERT             (RXBUF_UINT(1)/100.0f)
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_LEERLAUF_WERT_UNIT        '%'
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_LEERLAUF_WERT_TYPE        float
        // Pump output during circulation (idling without resistance, no active brake pressure build-up) / Pumpenleistung
        // während Kreisförderung (Leerlauf ohne Wiederstand, kein aktiver Bremsdruckaufbau)

    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_1_WERT              (RXBUF_UINT(3)/100.0f)
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_1_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_1_WERT_TYPE         float
        // Pump output during load against the isolating valve in the primary brake circuit / Pumpenleistung während
        // Belastung gegen das Trennventil im primären Bremskreis

    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_2_WERT              (RXBUF_UINT(5)/100.0f)
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_2_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_PUMPENLEISTUNG_KREIS_2_WERT_TYPE         float
        // Pump output during load against the isolating valve in the secondary brake circuit / Pumpenleistung während
        // Belastung gegen das Trennventil im sekundären Bremskreis

#define I3_PID_DSC_STEUERN_ANTI_POWER_HOP_FUNKTION_ZAEHLER_RUECKSETZEN 0xA2A2
        // This diagnostic job can be used to reset the counter of the anti-power HOP function. / Mit diesem Diagnosejob
        // kann der Zaehler der Anti-Power-HOP-Funktion zurückgesetzt werden.

// Skipping EMF_VERFAHREN on 0xA803 which takes arguments

#define I3_PID_DSC_STEUERN_EEPROM_SCHREIBEN                          0xAB5B
        // Start and status of saving learning data / Start und Status Abspeichern Lerndaten

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XAB5B                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XAB5B_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XAB5B_TYPE               unsigned char
        // Execution status / Ausführungsstatus

    #define I3_RES_DSC_STAT_EEPROM_SICHERN_NR                        (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_EEPROM_SICHERN_NR_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_EEPROM_SICHERN_NR_TYPE                   unsigned char
        // Status of the EEPROM backup 0 = backup successful 1 = backup running / Status der EEPROM Sicherung 
        // 0=Sicherung erfolgreich 1= Sicherung läuft

#define I3_PID_DSC_START_ADAPTIVDATEN_WERKSMODUS_2                   0xABA3
        // Initialization of the learning values of the self-steering behavior function. / Initialisierung der Lernwerte
        // der Funktion  Eigenlenkverhalten .

    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XABA3                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XABA3_UNIT               '0-n'
    #define I3_RES_DSC_STAT_ROUTINE_STATUS_0XABA3_TYPE               unsigned char
        // Execution status / Ausführungsstatus

#define I3_PID_DSC_GMK_DATEN                                         0xD09A
        // Reading out GMK data / Auslesen GMK Daten

    #define I3_RES_DSC_STAT_ZUSTAND_IST_GMK_WERT                     (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ZUSTAND_IST_GMK_WERT_TYPE                unsigned char
        // Actual status of the GMK function (depending on the qualifiers of the inputs) / Ist-Zustand der GMK-Funktion
        // (abhängig von Qualifiern der Eingänge)

    #define I3_RES_DSC_STAT_ZUSTAND_SOLL_GMK_WERT                    (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_ZUSTAND_SOLL_GMK_WERT_TYPE               unsigned char
        // Target state of the GMK function / Soll-Zustand der GMK-Funktion

    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_EPS_WERT                   (RXBUF_SCHAR(2)/100.0f)
    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_EPS_WERT_UNIT              'Nm'
    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_EPS_WERT_TYPE              float
        // Offset motor torque, which the EPS additively superimposes on its own motor torque / Offset-Motormoment, das
        // die EPS dem eigenen Motormoment additiv überlagert

    #define I3_RES_DSC_STAT_OFFSET_EPS_QUALIFIER_WERT                (RXBUF_UCHAR(3))
    #define I3_RES_DSC_STAT_OFFSET_EPS_QUALIFIER_WERT_TYPE           unsigned char
        // Setpoint qualifier for offset motor torque (2 = implement; 14 = do not implement) / Sollwert-Qualifier zum
        // OffsetMotormoment (2 = umsetzen; 14 = nicht umsetzen)

    #define I3_RES_DSC_STAT_FUNKTION_GMK_CODIERUNG_EIN               (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_FUNKTION_GMK_CODIERUNG_EIN_UNIT          '0/1'
    #define I3_RES_DSC_STAT_FUNKTION_GMK_CODIERUNG_EIN_TYPE          unsigned char
        // GMK function (1 = coded in; 0 = coded out) / GMK-Funktion (1 = eincodiert; 0 = auscodiert)

    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_GMK_EPS_WERT               (RXBUF_SCHAR(5)/100.0f)
    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_GMK_EPS_WERT_UNIT          'Nm'
    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_GMK_EPS_WERT_TYPE          float
        // Offset engine torque that the EPS has to provide due to the GMK function / Offset-Motormoment, welches die EPS
        // aufgrund der GMK Funktion zu stellen hat

    #define I3_RES_DSC_STAT_LENKUNG_VERBAUT_FAHRZEUG_WERT            (RXBUF_UCHAR(6))
    #define I3_RES_DSC_STAT_LENKUNG_VERBAUT_FAHRZEUG_WERT_TYPE       unsigned char
        // Data record EPS without IAS (1..yes, 0..no) / Datensatz EPS ohne IAS (1..ja,0..nein)

    #define I3_RES_DSC_STAT_EPS_FAKT_MOM_SERVICE_QUALIFIER_WERT      (RXBUF_UCHAR(7))
    #define I3_RES_DSC_STAT_EPS_FAKT_MOM_SERVICE_QUALIFIER_WERT_TYPE unsigned char
        // Service qualifier of the EPS for the implementation of the factors and the offset motor torque (everything OK
        // if 32 or 33) / Service-Qualifier der EPS für Umsetzung der Faktoren und des Offset-Motormoments (alles i.O
        // wenn 32 od 33)

    #define I3_RES_DSC_STAT_FUNKTION_GBR_KENNLINIE_NUMMER_WERT       (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_FUNKTION_GBR_KENNLINIE_NUMMER_WERT_TYPE  unsigned char
        // active GBR characteristic set / aktiver GBR Kennliniensatz

#define I3_PID_DSC_STATUS_BREMSPEDALWINKELSENSOR                     0xD0D2
        // Brake pedal travel sensor / Bremspedalwegsensor

    #define I3_RES_DSC_STAT_WEG_IST_SENSOR1_WERT                     (RXBUF_SINT(0)/100.0f)
    #define I3_RES_DSC_STAT_WEG_IST_SENSOR1_WERT_UNIT                'mm'
    #define I3_RES_DSC_STAT_WEG_IST_SENSOR1_WERT_TYPE                float
        // Current pedal travel (based on WEG_NULLPUNKT_IST) / aktueller Pedalweg (bezogen auf WEG_NULLPUNKT_IST)

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR1_WERT          (RXBUF_SINT(2)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR1_WERT_UNIT     'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR1_WERT_TYPE     float
        // Initialization of the pedal zero point / Initialisierung Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR1_WERT           (RXBUF_SINT(4)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR1_WERT_UNIT      'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR1_WERT_TYPE      float
        // current pedal zero point / aktueller Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR1_WERT             (RXBUF_SINT(6)/100.0f)
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR1_WERT_UNIT        'mm'
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR1_WERT_TYPE        float
        // Current pedal free travel (use of hydraulics based on WEG_NULLPUNKT_IST) / aktueller Pedal Leerweg (Einsatz
        // Hydraulik bezogen auf WEG_NULLPUNKT_IST)

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR2_WERT          (RXBUF_SINT(8)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR2_WERT_UNIT     'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_SENSOR2_WERT_TYPE     float
        // Initialization of the pedal zero point / Initialisierung Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR2_WERT           (RXBUF_SINT(10)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR2_WERT_UNIT      'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_SENSOR2_WERT_TYPE      float
        // current pedal zero point / aktueller Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR2_WERT             (RXBUF_SINT(12)/100.0f)
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR2_WERT_UNIT        'mm'
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_SENSOR2_WERT_TYPE        float
        // Current pedal free travel (use of hydraulics based on WEG_NULLPUNKT_IST) / aktueller Pedal Leerweg (Einsatz
        // Hydraulik bezogen auf WEG_NULLPUNKT_IST)

#define I3_PID_DSC_CBS_BREMSE_DETAILS                                0xD272
        // CBS data of the brakes / CBS-Daten der Bremsen

    #define I3_RES_DSC_STAT_VA_IDENT_WERT                            (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_VA_IDENT_WERT_TYPE                       unsigned char
        // Identification as VA -> value = 0x02 / Identifikation als VA -> Wert = 0x02

    #define I3_RES_DSC_STAT_VA_S_SIGNAL_WERT                         (RXBUF_UINT(1)*100.0f)
    #define I3_RES_DSC_STAT_VA_S_SIGNAL_WERT_UNIT                    'km'
    #define I3_RES_DSC_STAT_VA_S_SIGNAL_WERT_TYPE                    float
        // km reading with sensor signal / km-Stand bei Sensorsignal

    #define I3_RES_DSC_STAT_VA_S_WECHSEL_WERT                        (RXBUF_UINT(3)*100.0f)
    #define I3_RES_DSC_STAT_VA_S_WECHSEL_WERT_UNIT                   'km'
    #define I3_RES_DSC_STAT_VA_S_WECHSEL_WERT_TYPE                   float
        // Km reading at the last pad change / km-Stand bei letztem Belagwechsel

    #define I3_RES_DSC_STAT_VA_S_REST_ORIG_WERT                      (RXBUF_UINT(5))
    #define I3_RES_DSC_STAT_VA_S_REST_ORIG_WERT_UNIT                 'km'
    #define I3_RES_DSC_STAT_VA_S_REST_ORIG_WERT_TYPE                 unsigned short
        // Remaining distance without min- u. max restriction / Restlaufstrecke ohne min- u. max-Beschränkung

    #define I3_RES_DSC_STAT_VA_S_MIN_WERT                            (RXBUF_UINT(7))
    #define I3_RES_DSC_STAT_VA_S_MIN_WERT_UNIT                       'km'
    #define I3_RES_DSC_STAT_VA_S_MIN_WERT_TYPE                       unsigned short
        // minimum remaining distance / minimale Restlaufstrecke

    #define I3_RES_DSC_STAT_VA_S_MAX_WERT                            (RXBUF_UINT(9))
    #define I3_RES_DSC_STAT_VA_S_MAX_WERT_UNIT                       'km'
    #define I3_RES_DSC_STAT_VA_S_MAX_WERT_TYPE                       unsigned short
        // maximum remaining distance / maximale Restlaufstrecke

    #define I3_RES_DSC_STAT_VA_S_REST_WERT                           (RXBUF_UINT32(11))
    #define I3_RES_DSC_STAT_VA_S_REST_WERT_UNIT                      'km'
    #define I3_RES_DSC_STAT_VA_S_REST_WERT_TYPE                      unsigned long
        // Remaining distance / Restlaufstrecke

    #define I3_RES_DSC_STAT_VA_S_GESAMT_1_WERT                       (RXBUF_UINT32(15))
    #define I3_RES_DSC_STAT_VA_S_GESAMT_1_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_VA_S_GESAMT_1_WERT_TYPE                  unsigned long
        // 1. Extrapolation of total running distance / 1. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_VA_S_GESAMT_2_WERT                       (RXBUF_UINT32(19))
    #define I3_RES_DSC_STAT_VA_S_GESAMT_2_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_VA_S_GESAMT_2_WERT_TYPE                  unsigned long
        // 2. Extrapolation of total running distance / 2. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_VA_S_GESAMT_3_WERT                       (RXBUF_UINT32(23))
    #define I3_RES_DSC_STAT_VA_S_GESAMT_3_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_VA_S_GESAMT_3_WERT_TYPE                  unsigned long
        // 3. Extrapolation of total running distance / 3. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_VA_SZ_WERT                               (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_VA_SZ_WERT_TYPE                          unsigned char
        // Service counter / Servicezähler

    // BF_VA_FLAG_BVA is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield state of the BVA sensor / Bitfield Zustand BVA-Sensor
            // STAT_VA_FLAG_BVA: Mask: 0x01 - BVA sensor status: 0 = BVA sensor not looped through, 1 = BVA sensor looped through
    #define I3_RES_DSC_BF_VA_FLAG_BVA                                (RXBUF_UCHAR(28))
    #define I3_RES_DSC_BF_VA_FLAG_BVA_UNIT                           'Bit'
    #define I3_RES_DSC_BF_VA_FLAG_BVA_TYPE                           unsigned char
        // Bitfield state of the BVA sensor / Bitfield Zustand BVA-Sensor

    // BF_VA_RESET_VERHINDERER_1 is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield reset prevention / Bitfield Resetverhinderer
            // STAT_VA_DATUM_UHRZEIT_GUELTIG_BEI_RESET: Mask: 0x01 - Date_Uhrzeit_gueltig_bei_reset 1. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_KM_STAND_GUELTIG_BEI_RESET: Mask: 0x02 - KM_Stand_gueltig_bei_reset 2nd reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_VIN_GUELTIG_BEI_RESET: Mask: 0x04 - VIN_gueltig_bei_reset 3rd reset inhibitor: 0 = statement does not apply, 1 = statement applies
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_1                     (RXBUF_UCHAR(29))
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_1_UNIT                'Bit'
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_1_TYPE                unsigned char
        // Bitfield reset prevention / Bitfield Resetverhinderer

    // BF_VA_RESET_VERHINDERER_2 is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield reset prevention / Bitfield Resetverhinderer
            // STAT_VA_BBV_SENSOR_NICHT_GEST_BEI_RESET: Mask: 0x01 - BBV_Sensor_nicht_angesteckt_bei_reset 4. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_BBV_SENSOR_FEHLER_BEI_RESET: Mask: 0x02 - BBV_Sensor_Fehler_bei_reset 5. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_VORDRUCK_BEI_RESET: Mask: 0x04 - Vordruck_bei_reset 6. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_EMF_ANGEZ_BEI_RESET: Mask: 0x08 - EMF_ drawn_bei_reset 7. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_KOMM_FEHLER_EMF_BEI_RESET: Mask: 0x10 - Communication error_mit_EMF_bei_reset 8. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_GESCHW_BEI_RESET: Mask: 0x20 - Velocity_bei_reset 9. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_VA_AKTIVER_DRUCKAUFBAU_BEI_RESET: Mask: 0x40 - Aktiver_Druckbildung_bei_reset 10. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_2                     (RXBUF_UCHAR(30))
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_2_UNIT                'Bit'
    #define I3_RES_DSC_BF_VA_RESET_VERHINDERER_2_TYPE                unsigned char
        // Bitfield reset prevention / Bitfield Resetverhinderer

    #define I3_RES_DSC_STAT_HA_IDENT_WERT                            (RXBUF_UCHAR(31))
    #define I3_RES_DSC_STAT_HA_IDENT_WERT_TYPE                       unsigned char
        // Identification as HA -> value = 0x06 / Identifikation als HA -> Wert = 0x06

    #define I3_RES_DSC_STAT_HA_S_SIGNAL_WERT                         (RXBUF_UINT(32)*100.0f)
    #define I3_RES_DSC_STAT_HA_S_SIGNAL_WERT_UNIT                    'km'
    #define I3_RES_DSC_STAT_HA_S_SIGNAL_WERT_TYPE                    float
        // km reading with sensor signal / km-Stand bei Sensorsignal

    #define I3_RES_DSC_STAT_HA_S_WECHSEL_WERT                        (RXBUF_UINT(34)*100.0f)
    #define I3_RES_DSC_STAT_HA_S_WECHSEL_WERT_UNIT                   'km'
    #define I3_RES_DSC_STAT_HA_S_WECHSEL_WERT_TYPE                   float
        // Km reading at the last pad change / km-Stand bei letztem Belagwechsel

    #define I3_RES_DSC_STAT_HA_S_REST_ORIG_WERT                      (RXBUF_UINT(36))
    #define I3_RES_DSC_STAT_HA_S_REST_ORIG_WERT_UNIT                 'km'
    #define I3_RES_DSC_STAT_HA_S_REST_ORIG_WERT_TYPE                 unsigned short
        // Remaining distance without min- u. max restriction / Restlaufstrecke ohne min- u. max-Beschränkung

    #define I3_RES_DSC_STAT_HA_S_MIN_WERT                            (RXBUF_UINT(38))
    #define I3_RES_DSC_STAT_HA_S_MIN_WERT_UNIT                       'km'
    #define I3_RES_DSC_STAT_HA_S_MIN_WERT_TYPE                       unsigned short
        // minimum remaining distance / minimale Restlaufstrecke

    #define I3_RES_DSC_STAT_HA_S_MAX_WERT                            (RXBUF_UINT(40))
    #define I3_RES_DSC_STAT_HA_S_MAX_WERT_UNIT                       'km'
    #define I3_RES_DSC_STAT_HA_S_MAX_WERT_TYPE                       unsigned short
        // maximum remaining distance / maximale Restlaufstrecke

    #define I3_RES_DSC_STAT_HA_S_REST_WERT                           (RXBUF_UINT32(42))
    #define I3_RES_DSC_STAT_HA_S_REST_WERT_UNIT                      'km'
    #define I3_RES_DSC_STAT_HA_S_REST_WERT_TYPE                      unsigned long
        // Remaining distance / Restlaufstrecke

    #define I3_RES_DSC_STAT_HA_S_GESAMT_1_WERT                       (RXBUF_UINT32(46))
    #define I3_RES_DSC_STAT_HA_S_GESAMT_1_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_HA_S_GESAMT_1_WERT_TYPE                  unsigned long
        // 1. Extrapolation of total running distance / 1. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_HA_S_GESAMT_2_WERT                       (RXBUF_UINT32(50))
    #define I3_RES_DSC_STAT_HA_S_GESAMT_2_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_HA_S_GESAMT_2_WERT_TYPE                  unsigned long
        // 2. Extrapolation of total running distance / 2. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_HA_S_GESAMT_3_WERT                       (RXBUF_UINT32(54))
    #define I3_RES_DSC_STAT_HA_S_GESAMT_3_WERT_UNIT                  'km'
    #define I3_RES_DSC_STAT_HA_S_GESAMT_3_WERT_TYPE                  unsigned long
        // 3. Extrapolation of total running distance / 3. Hochrechnung Gesamtlaufstrecke

    #define I3_RES_DSC_STAT_HA_SZ_WERT                               (RXBUF_UCHAR(58))
    #define I3_RES_DSC_STAT_HA_SZ_WERT_TYPE                          unsigned char
        // Service counter / Servicezähler

    // BF_HA_FLAG_BVA is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield state of the BVA sensor / Bitfield Zustand BVA-Sensor
            // STAT_HA_FLAG_BVA: Mask: 0x01 - BVA sensor status: 0 = BVA sensor not looped through, 1 = BVA sensor looped through
    #define I3_RES_DSC_BF_HA_FLAG_BVA                                (RXBUF_UCHAR(59))
    #define I3_RES_DSC_BF_HA_FLAG_BVA_UNIT                           'Bit'
    #define I3_RES_DSC_BF_HA_FLAG_BVA_TYPE                           unsigned char
        // Bitfield state of the BVA sensor / Bitfield Zustand BVA-Sensor

    // BF_HA_RESET_VERHINDERER_1 is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield reset prevention / Bitfield Resetverhinderer
            // STAT_HA_DATUM_UHRZEIT_GUELTIG_BEI_RESET: Mask: 0x01 - Date_Uhrzeit_gueltig_bei_reset 1. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_KM_STAND_GUELTIG_BEI_RESET: Mask: 0x02 - KM_Stand_gueltig_bei_reset 2nd reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_VIN_GUELTIG_BEI_RESET: Mask: 0x04 - VIN_gueltig_bei_reset 3rd reset inhibitor: 0 = statement does not apply, 1 = statement applies
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_1                     (RXBUF_UCHAR(60))
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_1_UNIT                'Bit'
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_1_TYPE                unsigned char
        // Bitfield reset prevention / Bitfield Resetverhinderer

    // BF_HA_RESET_VERHINDERER_2 is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Bitfield reset prevention / Bitfield Resetverhinderer
            // STAT_HA_BBV_SENSOR_NICHT_GEST_BEI_RESET: Mask: 0x01 - BBV_Sensor_nicht_angesteckt_bei_reset 4. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_BBV_SENSOR_FEHLER_BEI_RESET: Mask: 0x02 - BBV_Sensor_Fehler_bei_reset 5. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_VORDRUCK_BEI_RESET: Mask: 0x04 - Vordruck_bei_reset 6. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_EMF_ANGEZ_BEI_RESET: Mask: 0x08 - EMF_ drawn_bei_reset 7. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_KOMM_FEHLER_EMF_BEI_RESET: Mask: 0x10 - Communication error_mit_EMF_bei_reset 8. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_GESCHW_BEI_RESET: Mask: 0x20 - Velocity_bei_reset 9. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
            // STAT_HA_AKTIVER_DRUCKAUFBAU_BEI_RESET: Mask: 0x40 - Aktiver_Druckbildung_bei_reset 10. Reset inhibitor: 0 = statement does not apply, 1 = statement applies
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_2                     (RXBUF_UCHAR(61))
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_2_UNIT                'Bit'
    #define I3_RES_DSC_BF_HA_RESET_VERHINDERER_2_TYPE                unsigned char
        // Bitfield reset prevention / Bitfield Resetverhinderer

#define I3_PID_DSC_FES_COORDINT_SW_FEHLER_INFO                       0xD62E
        // FES COORDINT SW error / FES COORDINT SW Fehler

    #define I3_RES_DSC_STAT_FES_COORDINT_SW_FEHLER_INFO_WERT         (RXBUF_SINT32(0))
    #define I3_RES_DSC_STAT_FES_COORDINT_SW_FEHLER_INFO_WERT_TYPE    long
        // FES COORDINT SW error / FES COORDINT SW Fehler

#define I3_PID_DSC_FLM_LESEN                                         0xD6D6
        // Field Load Manager (FLM) / Field Load Manager (FLM)

    // Can't yet generate code for STAT_FLM_1_DATA of type data[200] at offset 0. But we account for the 200 bytes
        // All FLM data part 1 / Alle FLM Daten Teil 1

    // Can't yet generate code for STAT_FLM_2_DATA of type data[200] at offset 200. But we account for the 200 bytes
        // All FLM data part 2 / Alle FLM Daten Teil 2

    // Can't yet generate code for STAT_FLM_3_DATA of type data[200] at offset 400. But we account for the 200 bytes
        // All FLM data part 3 / Alle FLM Daten Teil 3

    // Can't yet generate code for STAT_FLM_4_DATA of type data[211] at offset 600. But we account for the 211 bytes
        // All FLM data part 4 / Alle FLM Daten Teil 4

#define I3_PID_DSC_EMF_LERNDATEN_STATISTIK                           0xD804
        // Reading out learning data statistics / Auslesen Lerndaten Statistik

    #define I3_RES_DSC_STAT_ZAEHLER_FESTELLEN_STEIGUNG20_WERT        (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_ZAEHLER_FESTELLEN_STEIGUNG20_WERT_TYPE   unsigned short
        // Number of fixes slope> 20% / Anzahl Feststellen Steigung > 20 %

    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_ROLLUEBERWACHUNG_WERT (RXBUF_UINT(2))
    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_ROLLUEBERWACHUNG_WERT_TYPE unsigned short
        // Number of re-tensioning due to rollers recognized / Anzahl Nachspannen wegen Rollen erkannt

    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_TEMPERATUR_WERT      (RXBUF_UINT(4))
    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_TEMPERATUR_WERT_TYPE unsigned short
        // Number of re-tensioning due to brake disc temperature / Anzahl Nachspannen wegen Temperatur Bremsscheibe

    #define I3_RES_DSC_STAT_ZAEHLER_AUTO_ADJUST_WERT                 (RXBUF_UINT(6))
    #define I3_RES_DSC_STAT_ZAEHLER_AUTO_ADJUST_WERT_TYPE            unsigned short
        // Number of automatic adjustments / Anzahl automatische Justage

    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_PRAEVENTIV_WERT      (RXBUF_UINT(8))
    #define I3_RES_DSC_STAT_ZAEHLER_NACHSPANNEN_PRAEVENTIV_WERT_TYPE unsigned short
        // Number of retightening as a preventive measure / Anzahl Nachspannen vorbeugend

    #define I3_RES_DSC_STAT_RESERVE5_WERT                            (RXBUF_UINT(10))
    #define I3_RES_DSC_STAT_RESERVE5_WERT_TYPE                       unsigned short
        // unused / unbenutzt

    #define I3_RES_DSC_STAT_RESERVE6_WERT                            (RXBUF_UINT(12))
    #define I3_RES_DSC_STAT_RESERVE6_WERT_TYPE                       unsigned short
        // unused / unbenutzt

    #define I3_RES_DSC_STAT_RESERVE7_WERT                            (RXBUF_UINT(14))
    #define I3_RES_DSC_STAT_RESERVE7_WERT_TYPE                       unsigned short
        // unused / unbenutzt

    #define I3_RES_DSC_STAT_RESERVE8_WERT                            (RXBUF_UINT(16))
    #define I3_RES_DSC_STAT_RESERVE8_WERT_TYPE                       unsigned short
        // unused / unbenutzt

    #define I3_RES_DSC_STAT_RESERVE9_WERT                            (RXBUF_UINT(18))
    #define I3_RES_DSC_STAT_RESERVE9_WERT_TYPE                       unsigned short
        // unused / unbenutzt

#define I3_PID_DSC_EMF_AKTUATOR_KOMBISATTEL                          0xD805
        // Read out data from actuator / Auslesen Daten Aktuator

    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HL_WERT                   (RXBUF_SINT(0)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HL_WERT_UNIT              'V'
    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HL_WERT_TYPE              float
        // Voltage rear left motor / Spannung Motor hinten links

    #define I3_RES_DSC_STAT_STROM_MOTOR_HL_WERT                      (RXBUF_SINT(2)/1000.0f)
    #define I3_RES_DSC_STAT_STROM_MOTOR_HL_WERT_UNIT                 'A'
    #define I3_RES_DSC_STAT_STROM_MOTOR_HL_WERT_TYPE                 float
        // Electricity motor rear left / Strom Motor hinten links

    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HL_WERT                 (RXBUF_SINT(4)/10.0f)
    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HL_WERT_UNIT            '°C'
    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HL_WERT_TYPE            float
        // Engine temperature, rear left / Temperatur Motor hinten links

    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HR_WERT                   (RXBUF_SINT(6)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HR_WERT_UNIT              'V'
    #define I3_RES_DSC_STAT_SPANNUNG_MOTOR_HR_WERT_TYPE              float
        // Voltage motor rear right / Spannung Motor hinten rechts

    #define I3_RES_DSC_STAT_STROM_MOTOR_HR_WERT                      (RXBUF_SINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_STROM_MOTOR_HR_WERT_UNIT                 'A'
    #define I3_RES_DSC_STAT_STROM_MOTOR_HR_WERT_TYPE                 float
        // Electricity motor rear right / Strom Motor hinten rechts

    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HR_WERT                 (RXBUF_SINT(10)/10.0f)
    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HR_WERT_UNIT            '°C'
    #define I3_RES_DSC_STAT_TEMPERATUR_MOTOR_HR_WERT_TYPE            float
        // Temperature engine rear right / Temperatur Motor hinten rechts

    #define I3_RES_DSC_STAT_AKTUATOR_R                               (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_AKTUATOR_R_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_AKTUATOR_R_TYPE                          unsigned char
        // Rear right brake shoes position / Position Bremsbacken hinten rechts

    #define I3_RES_DSC_STAT_AKTUATOR_L                               (RXBUF_UCHAR(13))
    #define I3_RES_DSC_STAT_AKTUATOR_L_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_AKTUATOR_L_TYPE                          unsigned char
        // Rear right brake shoes position / Position Bremsbacken hinten rechts

    #define I3_RES_DSC_STAT_HU_MODE_STATUS                           (RXBUF_UCHAR(14))
    #define I3_RES_DSC_STAT_HU_MODE_STATUS_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_HU_MODE_STATUS_TYPE                      unsigned char
        // Status mode general inspection / Status Modus Hauptuntersuchung

#define I3_PID_DSC_EMF_LERNDATEN_TASTER                              0xD808
        // Read out learning data button / Auslesen Lerndaten Taster

    #define I3_RES_DSC_STAT_ZAEHLER_TASTER_FESTSTELLEN_WERT          (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_ZAEHLER_TASTER_FESTSTELLEN_WERT_TYPE     unsigned long
        // Determine number of operations / Anzahl Bedienung Feststellen

    #define I3_RES_DSC_STAT_ZAEHLER_TASTER_LOESEN_WERT               (RXBUF_UINT32(4))
    #define I3_RES_DSC_STAT_ZAEHLER_TASTER_LOESEN_WERT_TYPE          unsigned long
        // Solve number of operations / Anzahl Bedienungen Lösen

#define I3_PID_DSC_EMF_LERNDATEN_AKTUATOR                            0xD80A
        // Read out actuator learning data / Auslesen Lerndaten Aktuator

    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_FESTSTELLEN_WERT        (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_FESTSTELLEN_WERT_TYPE   unsigned long
        // Number of notices / Anzahl Feststellen

    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_NOTENTRIEGELN_WERT      (RXBUF_UINT(4))
    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_NOTENTRIEGELN_WERT_TYPE unsigned short
        // Number of emergency releases / Anzahl Notentriegelung

    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_BOOST_WERT              (RXBUF_UINT(6))
    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_BOOST_WERT_TYPE         unsigned short
        // Number of readjustments / Anzahl Nachstellen

    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_UEBERLAST_WERT          (RXBUF_UINT(8))
    #define I3_RES_DSC_STAT_ZAEHLER_AKTUATOR_UEBERLAST_WERT_TYPE     unsigned short
        // Number of overloads / Anzahl Überlast

#define I3_PID_DSC_EMF_KLEMMEN_KOMBISATTEL                           0xD80C
        // Read out voltage control unit / Auslesen Spannung Steuergerät

    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT                 (RXBUF_UINT(0)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT_UNIT            'V'
    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT_TYPE            float
        // Voltage control unit / Spannung Steuergerät

    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HL_WERT                 (RXBUF_UINT(2)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HL_WERT_UNIT            'V'
    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HL_WERT_TYPE            float
        // Voltage actuator rear left / Spannung Aktuator hinten links

    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HR_WERT                 (RXBUF_UINT(4)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HR_WERT_UNIT            'V'
    #define I3_RES_DSC_STAT_SPANNUNG_AKUATOR_HR_WERT_TYPE            float
        // Voltage actuator rear right / Spannung Aktuator hinten rechts

    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT                (RXBUF_UINT(6)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT_UNIT           'V'
    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT_TYPE           float
        // Voltage wake-up line / Spannung Weckleitung

#define I3_PID_DSC_EMF_TASTER                                        0xD80D
        // Read out button / Auslesen Taster

    #define I3_RES_DSC_STAT_TASTER_EMF                               (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_TASTER_EMF_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_TASTER_EMF_TYPE                          unsigned char
        // Operating status / Bedienzustand

    #define I3_RES_DSC_STAT_TASTER_EMF_DIGITAL_WERT                  (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_TASTER_EMF_DIGITAL_WERT_TYPE             unsigned char
        // digital status button / digitaler Status Taster

    #define I3_RES_DSC_STAT_TASTER_EMF_1_WERT                        (RXBUF_UINT(2)/1000.0f)
    #define I3_RES_DSC_STAT_TASTER_EMF_1_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_TASTER_EMF_1_WERT_TYPE                   float
        // Voltage button line 1 / Spannung Taster Leitung 1

    #define I3_RES_DSC_STAT_TASTER_EMF_2_WERT                        (RXBUF_UINT(4)/1000.0f)
    #define I3_RES_DSC_STAT_TASTER_EMF_2_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_TASTER_EMF_2_WERT_TYPE                   float
        // Voltage button line 2 / Spannung Taster Leitung 2

    #define I3_RES_DSC_STAT_TASTER_EMF_3_WERT                        (RXBUF_UINT(6)/1000.0f)
    #define I3_RES_DSC_STAT_TASTER_EMF_3_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_TASTER_EMF_3_WERT_TYPE                   float
        // Voltage button line 3 / Spannung Taster Leitung 3

    #define I3_RES_DSC_STAT_TASTER_EMF_4_WERT                        (RXBUF_UINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_TASTER_EMF_4_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_TASTER_EMF_4_WERT_TYPE                   float
        // Voltage button line 4 / Spannung Taster Leitung 4

    #define I3_RES_DSC_STAT_TASTER_EMF_5_WERT                        (RXBUF_UINT(10)/1000.0f)
    #define I3_RES_DSC_STAT_TASTER_EMF_5_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_TASTER_EMF_5_WERT_TYPE                   float
        // Voltage button line 5 / Spannung Taster Leitung 5

// Skipping EMF_MONTAGE_MODE on 0xD80F which takes arguments

#define I3_PID_DSC_EXTERNE_ANFORDERUNG_GKU_IPB_ZAEHLER_LESEN         0xD81A
        // Returns the number of IPB takeovers through external transmission requests / Gibt Anzahl der IPB-Uebernahmen
        // durch externe Getriebe-Anforderungen zurueck

    #define I3_RES_DSC_STAT_AKTUELLER_ZAEHLERSTAND_GKU_WERT          (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_AKTUELLER_ZAEHLERSTAND_GKU_WERT_TYPE     unsigned short
        // Returns the number of IPB takeovers through external transmission requests / Gibt Anzahl der IPB-Uebernahmen
        // durch externe Getriebe-Anforderungen zurueck

#define I3_PID_DSC_STATUS_LESEN_ANTI_POWER_HOP_FUNKTION_ZAEHLER_LESEN 0xD8EB
        // Indicates how often the anti-power HOP function was active. / Gibt an, wie oft die Anti-Power-HOP-Funktion
        // aktiv war.

    #define I3_RES_DSC_STAT_ZAEHLER_ANTI_POWER_HOP_FUNKTION_WERT     (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_ZAEHLER_ANTI_POWER_HOP_FUNKTION_WERT_TYPE unsigned short
        // Indicates how often the anti-power HOP function was active. / Gibt an, wie oft die Anti-Power-HOP-Funktion
        // aktiv war.

#define I3_PID_DSC_STATUS_MODUS_ROLLENPRUEFSTAND                     0xDB5B
        // Status query role mode active in the ICM / Statusabfrage Rollenmodus aktiv im ICM

    #define I3_RES_DSC_STAT_ROLLENMODUS_NR                           (RXBUF_SCHAR(0))
    #define I3_RES_DSC_STAT_ROLLENMODUS_NR_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_ROLLENMODUS_NR_TYPE                      char
        // Status query role mode active in the ICM / Statusabfrage Rollenmodus aktiv im ICM

// Skipping STEUERN_MODUS_ROLLENPRUEFSTAND on 0xDB98 which takes arguments

#define I3_PID_DSC_STATUS_GIERRATE                                   0xDBD9
        // Reading out yaw rate / Auslesen Gierrate

    // Can't process STAT_GIERRATE_SENSOR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_DSC_STAT_GIERRATE_SENSOR_NR                       (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_GIERRATE_SENSOR_NR_UNIT                  '0-n'
    #define I3_RES_DSC_STAT_GIERRATE_SENSOR_NR_TYPE                  unsigned short
        // Plausibility check sensor / Plausibilisierung Sensor

#define I3_PID_DSC_STATUS_QUERBESCHLEUNIGUNG                         0xDBDA
        // Read out lateral acceleration / Auslesen Querbeschleunigung

    // Can't process STAT_QUERBESCHLEUNIGUNG_SENSOR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_DSC_STAT_QUERBESCHLEUNIGUNG_SENSOR_NR             (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_QUERBESCHLEUNIGUNG_SENSOR_NR_UNIT        '0-n'
    #define I3_RES_DSC_STAT_QUERBESCHLEUNIGUNG_SENSOR_NR_TYPE        unsigned short
        // Plausibility check sensor / Plausibilisierung Sensor

#define I3_PID_DSC_STATUS_LAENGSBESCHLEUNIGUNG                       0xDBDB
        // Read out longitudinal acceleration / Auslesen Laengsbeschleunigung

    // Can't process STAT_LAENGSBESCHLEUNIGUNG_SENSOR1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    #define I3_RES_DSC_STAT_LAENGSBESCHLEUNIGUNG_SENSOR1_NR          (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_LAENGSBESCHLEUNIGUNG_SENSOR1_NR_UNIT     '0-n'
    #define I3_RES_DSC_STAT_LAENGSBESCHLEUNIGUNG_SENSOR1_NR_TYPE     unsigned short
        // Plausibility check sensor 1 / Plausibilisierung Sensor 1

#define I3_PID_DSC_BREMSBELAGSSENSOR                                 0xDBDF
        // Reading out the brake lining sensor / Auslesen Bremsbelagssensor

    #define I3_RES_DSC_STAT_PILLE_VA                                 (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_PILLE_VA_UNIT                            '0-n'
    #define I3_RES_DSC_STAT_PILLE_VA_TYPE                            unsigned char
        // Brake pad pill front axle / Bremsbelagspille Vorderachse

    #define I3_RES_DSC_STAT_PILLE_HA                                 (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_PILLE_HA_UNIT                            '0-n'
    #define I3_RES_DSC_STAT_PILLE_HA_TYPE                            unsigned char
        // Brake pad pill rear axle / Bremsbelagspille Hinterachse

// Skipping LMV_FUNKTION on 0xDBE1 which takes arguments

// Skipping REKU_FUNKTION on 0xDBE2 which takes arguments

#define I3_PID_DSC_REIFENPANNENANZEIGE                               0xDBE3
        // Flat tire indicator / Reifenpannenanzeige

    #define I3_RES_DSC_STAT_WARNUNG_AKTIV                            (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_WARNUNG_AKTIV_UNIT                       '0/1'
    #define I3_RES_DSC_STAT_WARNUNG_AKTIV_TYPE                       unsigned char
        // Warning (0 = inactive; 1 = active) / Warnung (0= inaktiv; 1= aktiv)

    #define I3_RES_DSC_STAT_FUNKTION_AKTIV                           (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_FUNKTION_AKTIV_UNIT                      '0/1'
    #define I3_RES_DSC_STAT_FUNKTION_AKTIV_TYPE                      unsigned char
        // RPA system (0 = inactive; 1 = active) / RPA-System (0= inaktiv; 1= aktiv)

    #define I3_RES_DSC_STAT_PLATTROLLEN_ERKANNT                      (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_PLATTROLLEN_ERKANNT_UNIT                 '0/1'
    #define I3_RES_DSC_STAT_PLATTROLLEN_ERKANNT_TYPE                 unsigned char
        // Flat tire (0 = not recognized; 1 = recognized) / Platte Reifen (0= nicht erkannt; 1= erkannt)

    #define I3_RES_DSC_STAT_3PLUS1_ERKANNT                           (RXBUF_UCHAR(3))
    #define I3_RES_DSC_STAT_3PLUS1_ERKANNT_UNIT                      '0/1'
    #define I3_RES_DSC_STAT_3PLUS1_ERKANNT_TYPE                      unsigned char
        // 3Plus1 constellation (0 = not recognized; 1 = recognized) / 3Plus1 Konstellation (0= nicht erkannt; 1=
        // erkannt)

    #define I3_RES_DSC_STAT_NEUREIFEN_ERKANNT                        (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_NEUREIFEN_ERKANNT_UNIT                   '0/1'
    #define I3_RES_DSC_STAT_NEUREIFEN_ERKANNT_TYPE                   unsigned char
        // New tire constellation (0 = not recognized; 1 = recognized) / Neureifen Konstellation (0= nicht erkannt; 1=
        // erkannt)

    #define I3_RES_DSC_STAT_NAEHERUNG_WARNGRENZE_WERT                (RXBUF_UCHAR(5))
    #define I3_RES_DSC_STAT_NAEHERUNG_WARNGRENZE_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_NAEHERUNG_WARNGRENZE_WERT_TYPE           unsigned char
        // Current value approaching warning limit / aktueller Wert Näherung Warngrenze

    #define I3_RES_DSC_STAT_PANNEN_POSITION                          (RXBUF_UCHAR(6))
    #define I3_RES_DSC_STAT_PANNEN_POSITION_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_PANNEN_POSITION_TYPE                     unsigned char
        // Pressure reduced wheel position / Position druckreduziertes Rad

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_100_WERT            (RXBUF_UCHAR(7))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_100_WERT_UNIT       '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_100_WERT_TYPE       unsigned char
        // Learning progress speed range 0..100 km / h / Lernfortschritt Geschwindigkeitsbereich 0..100 km/h

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_100_190_WERT          (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_100_190_WERT_UNIT     '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_100_190_WERT_TYPE     unsigned char
        // Learning progress speed range 100..190 km / h / Lernfortschritt Geschwindigkeitsbereich 100..190 km/h

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_UEBER_190_WERT        (RXBUF_UCHAR(9))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_UEBER_190_WERT_UNIT   '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_UEBER_190_WERT_TYPE   unsigned char
        // Learning progress speed range> 190 km / h / Lernfortschritt Geschwindigkeitsbereich > 190 km/h

#define I3_PID_DSC_GESCHWINDIGKEIT_RAD                               0xDBE4
        // Read out wheel speed sensor / Auslesen Raddrehzahlfühler

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VL_WERT              (RXBUF_SINT(0)/100.0f)
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VL_WERT_UNIT         'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VL_WERT_TYPE         float
        // Front left wheel speed / Radgeschwindigkeit vorne links

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VR_WERT              (RXBUF_SINT(2)/100.0f)
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VR_WERT_UNIT         'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_VR_WERT_TYPE         float
        // Front right wheel speed / Radgeschwindigkeit vorne rechts

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HL_WERT              (RXBUF_SINT(4)/100.0f)
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HL_WERT_UNIT         'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HL_WERT_TYPE         float
        // Rear left wheel speed / Radgeschwindigkeit hinten links

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HR_WERT              (RXBUF_SINT(6)/100.0f)
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HR_WERT_UNIT         'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_RAD_HR_WERT_TYPE         float
        // Rear right wheel speed / Radgeschwindigkeit hinten rechts

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_FZG_WERT                 (RXBUF_SINT(8)/100.0f)
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_FZG_WERT_UNIT            'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_FZG_WERT_TYPE            float
        // Vehicle speed / Fahrzeuggeschwindigkeit

    #define I3_RES_DSC_STAT_DREHRICHTUNG_VL                          (RXBUF_UCHAR(10))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_VL_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_VL_TYPE                     unsigned char
        // Wheel rotation direction front left / Raddrehrichtung vorne links

    #define I3_RES_DSC_STAT_DREHRICHTUNG_VR                          (RXBUF_UCHAR(11))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_VR_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_VR_TYPE                     unsigned char
        // Direction of wheel rotation front right / Raddrehrichtung vorne rechts

    #define I3_RES_DSC_STAT_DREHRICHTUNG_HL                          (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_HL_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_HL_TYPE                     unsigned char
        // Wheel rotation direction rear left / Raddrehrichtung hinten links

    #define I3_RES_DSC_STAT_DREHRICHTUNG_HR                          (RXBUF_UCHAR(13))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_HR_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_HR_TYPE                     unsigned char
        // Wheel rotation direction rear right / Raddrehrichtung hinten rechts

    #define I3_RES_DSC_STAT_DREHRICHTUNG_REF                         (RXBUF_UCHAR(14))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_REF_UNIT                    '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_REF_TYPE                    unsigned char
        // Direction of travel / Fahrrichtung

    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VL_WERT                  (RXBUF_UCHAR(15))
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VL_WERT_UNIT             '%'
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VL_WERT_TYPE             unsigned char
        // Signal quality front left x &lt;10% = no signal; 10% &lt;= x &lt;= 50% weak signal; x&gt; 50% signal OK /
        // Signalqualität vorne links x < 10 % = kein Signal;  10 % <= x <= 50 % schwaches Signal;  x > 50 % Signal in
        // Ordnung

    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VR_WERT                  (RXBUF_UCHAR(16))
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VR_WERT_UNIT             '%'
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_VR_WERT_TYPE             unsigned char
        // Signal quality front right x &lt;10% = no signal; 10% &lt;= x &lt;= 50% weak signal; x&gt; 50% signal OK /
        // Signalqualität vorne rechts x < 10 % = kein Signal;  10 % <= x <= 50 % schwaches Signal;  x > 50 % Signal in
        // Ordnung

    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HL_WERT                  (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HL_WERT_UNIT             '%'
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HL_WERT_TYPE             unsigned char
        // Signal quality rear left x &lt;10% = no signal; 10% &lt;= x &lt;= 50% weak signal; x&gt; 50% signal OK /
        // Signalqualität hinten links x < 10 % = kein Signal;  10 % <= x <= 50 % schwaches Signal;  x > 50 % Signal in
        // Ordnung

    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HR_WERT                  (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HR_WERT_UNIT             '%'
    #define I3_RES_DSC_STAT_SIGNALQUALITAET_HR_WERT_TYPE             unsigned char
        // Signal quality rear right x &lt;10% = no signal; 10% &lt;= x &lt;= 50% weak signal; x&gt; 50% signal OK /
        // Signalqualität hinten rechts x < 10 % = kein Signal;  10 % <= x <= 50 % schwaches Signal;  x > 50 % Signal in
        // Ordnung

#define I3_PID_DSC_DSC_DRUCKSENSOREN                                 0xDBE5
        // Reading out pressure sensors / Auslesen Drucksensoren

    #define I3_RES_DSC_STAT_DRUCK_KREIS1_WERT                        (RXBUF_SINT(0)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_KREIS1_WERT_UNIT                   'bar'
    #define I3_RES_DSC_STAT_DRUCK_KREIS1_WERT_TYPE                   float
        // Pressure circuit 1 LG, 35up, LG-X: brake pressure; LU / LI: brake pressure (THZ tandem master brake cylinder)
        // / Druck Kreis 1 LG, 35up, LG-X: Bremsvordruck;  LU/LI: Bremsvordruck (THZ-Tandem-Hauptbremszylinder)

    #define I3_RES_DSC_STAT_DRUCK_KREIS2_WERT                        (RXBUF_SINT(2)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_KREIS2_WERT_UNIT                   'bar'
    #define I3_RES_DSC_STAT_DRUCK_KREIS2_WERT_TYPE                   float
        // Pressure circle 2 / Druck Kreis 2

    #define I3_RES_DSC_STAT_DRUCK_VL_WERT                            (RXBUF_SINT(4)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_VL_WERT_UNIT                       'bar'
    #define I3_RES_DSC_STAT_DRUCK_VL_WERT_TYPE                       float
        // Print front left LG, 35up, LG-X: Kreis1 (VA); I12 / F4xPHEV circle 1 (VL / HR); UKL / I01 not used / Druck
        // vorne links LG, 35up, LG-X: Kreis1 (VA);  I12/F4xPHEV Kreis1 (VL/HR);  UKL/I01 unbelegt

    #define I3_RES_DSC_STAT_DRUCK_VR_WERT                            (RXBUF_SINT(6)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_VR_WERT_UNIT                       'bar'
    #define I3_RES_DSC_STAT_DRUCK_VR_WERT_TYPE                       float
        // Print front right LG, 35up, LG-X, LU / LI: unoccupied / Druck vorne rechts LG, 35up, LG-X, LU/LI: unbelegt

    #define I3_RES_DSC_STAT_DRUCK_HL_WERT                            (RXBUF_SINT(8)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_HL_WERT_UNIT                       'bar'
    #define I3_RES_DSC_STAT_DRUCK_HL_WERT_TYPE                       float
        // Print back left LG, 35up, LG-X: Kreis2 (HA); I12 / F4xPHEV circle 2 (VR / HL); UKL / I01 not used / Druck
        // hinten links LG, 35up, LG-X: Kreis2 (HA);  I12/F4xPHEV Kreis2 (VR/HL);  UKL/I01 unbelegt

    #define I3_RES_DSC_STAT_DRUCK_HR_WERT                            (RXBUF_SINT(10)/10.0f)
    #define I3_RES_DSC_STAT_DRUCK_HR_WERT_UNIT                       'bar'
    #define I3_RES_DSC_STAT_DRUCK_HR_WERT_TYPE                       float
        // Print back right LG, 35up, LG-X, LU / LI: unoccupied / Druck hinten rechts LG, 35up, LG-X, LU/LI: unbelegt

#define I3_PID_DSC_DSC_KLEMMEN                                       0xDBE7
        // Read out voltage control unit / Auslesen Spannung Steuergerät

    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT_0XDBE7          (RXBUF_UINT(0)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT_0XDBE7_UNIT     'V'
    #define I3_RES_DSC_STAT_SPANNUNG_ELEKTRONIK_WERT_0XDBE7_TYPE     float
        // Electronics supply voltage / Spannung Elektronikversorgung

    #define I3_RES_DSC_STAT_SPANNUNG_PUMPE_WERT                      (RXBUF_UINT(2)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_PUMPE_WERT_UNIT                 'V'
    #define I3_RES_DSC_STAT_SPANNUNG_PUMPE_WERT_TYPE                 float
        // Pump supply voltage / Spannung Pumpenversorgung

    #define I3_RES_DSC_STAT_SPANNUNG_VENTILE_WERT                    (RXBUF_UINT(4)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_VENTILE_WERT_UNIT               'V'
    #define I3_RES_DSC_STAT_SPANNUNG_VENTILE_WERT_TYPE               float
        // Voltage valve supply / Spannung Ventilversorgung

    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT_0XDBE7         (RXBUF_UINT(6)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT_0XDBE7_UNIT    'V'
    #define I3_RES_DSC_STAT_SPANNUNG_WECKLEITUNG_WERT_0XDBE7_TYPE    float
        // Voltage wake-up line / Spannung Weckleitung

// Skipping DSC_PUMPE on 0xDBE8 which takes arguments

// Skipping DSC_VENTILE on 0xDBE9 which takes arguments

#define I3_PID_DSC_VAKUUMSENSOR                                      0xDBF4
        // Read out vacuum sensor / Auslesen Vakuumsensor

    #define I3_RES_DSC_STAT_DRUCK_IST_WERT                           (RXBUF_SINT(0)/1000.0f)
    #define I3_RES_DSC_STAT_DRUCK_IST_WERT_UNIT                      'bar'
    #define I3_RES_DSC_STAT_DRUCK_IST_WERT_TYPE                      float
        // current pressure / aktueller Druck

    #define I3_RES_DSC_STAT_SPANNUNG_IST_WERT                        (RXBUF_UINT(2)/1000.0f)
    #define I3_RES_DSC_STAT_SPANNUNG_IST_WERT_UNIT                   'V'
    #define I3_RES_DSC_STAT_SPANNUNG_IST_WERT_TYPE                   float
        // current voltage / aktuelle Spannung

#define I3_PID_DSC_BREMSPEDALWEGSENSOR                               0xDBF5
        // Reading out brake pedal travel sensor / Auslesen Bremspedalwegsensor

    #define I3_RES_DSC_STAT_WEG_IST_WERT                             (RXBUF_SINT(0)/100.0f)
    #define I3_RES_DSC_STAT_WEG_IST_WERT_UNIT                        'mm'
    #define I3_RES_DSC_STAT_WEG_IST_WERT_TYPE                        float
        // Current pedal travel (based on WEG_NULLPUNKT_IST) / aktueller Pedalweg (bezogen auf WEG_NULLPUNKT_IST)

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_WERT                  (RXBUF_SINT(2)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_WERT_UNIT             'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_INIT_WERT_TYPE             float
        // Initialization of the pedal zero point / Initialisierung Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_WERT                   (RXBUF_SINT(4)/100.0f)
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_WERT_UNIT              'mm'
    #define I3_RES_DSC_STAT_WEG_NULLPUNKT_IST_WERT_TYPE              float
        // current pedal zero point / aktueller Pedal Nullpunkt

    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_WERT                     (RXBUF_SINT(6)/100.0f)
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_WERT_UNIT                'mm'
    #define I3_RES_DSC_STAT_WEG_LEERWEG_IST_WERT_TYPE                float
        // Current pedal free travel (use of hydraulics based on WEG_NULLPUNKT_IST) / aktueller Pedal Leerweg (Einsatz
        // Hydraulik bezogen auf WEG_NULLPUNKT_IST)

#define I3_PID_DSC_BREMSREKUPERATIONSMOMENT                          0xDBF6
        // Read out wheel torque brake recuperation / Auslesen Radmoment Bremsrekuperation

    #define I3_RES_DSC_STAT_MOMENT_SOLL_WERT                         (RXBUF_SINT(0))
    #define I3_RES_DSC_STAT_MOMENT_SOLL_WERT_UNIT                    'Nm'
    #define I3_RES_DSC_STAT_MOMENT_SOLL_WERT_TYPE                    short
        // Brake regeneration setpoint / Sollwert Bremsrekuperation

    #define I3_RES_DSC_STAT_MOMENT_IST_WERT                          (RXBUF_SINT(2))
    #define I3_RES_DSC_STAT_MOMENT_IST_WERT_UNIT                     'Nm'
    #define I3_RES_DSC_STAT_MOMENT_IST_WERT_TYPE                     short
        // Actual value of brake regeneration / Istwert Bremsrekuperation

#define I3_PID_DSC_STATUS_ADAPTIVDATEN_ZUSTAND                       0xDC13
        // Read out status of adaptive data / Auslesen Status Adaptivdaten

    // Can't yet generate code for STAT_ADAPTIVDATEN_RUECKSETZEN_AJ_DATA of type data[2] at offset 0. But we account for the 2 bytes
        // Adaptive data basic setting set / Adaptivdaten Grundeinstellung gesetzt

    #define I3_RES_DSC_STAT_ADAPTIVDATEN_RUECKSETZEN_NR              (RXBUF_SINT(2))
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_RUECKSETZEN_NR_UNIT         '0-n'
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_RUECKSETZEN_NR_TYPE         short
        // Adaptive data basic setting set / Adaptivdaten Grundeinstellung gesetzt

    // Can't yet generate code for STAT_AX_AY_ABGLEICH_AJ_DATA of type data[1] at offset 4. But we account for the 1 bytes
        // Accelerometers are compared / Ablgeich Beschleunigungssensoren erfolgt

    #define I3_RES_DSC_STAT_AX_AY_ABGLEICH_NR                        (RXBUF_SCHAR(5))
    #define I3_RES_DSC_STAT_AX_AY_ABGLEICH_NR_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_AX_AY_ABGLEICH_NR_TYPE                   char
        // Accelerometers are compared / Ablgeich Beschleunigungssensoren erfolgt

    // Can't yet generate code for STAT_ADAPTIVDATEN_WERKSMODUS_AJ_DATA of type data[2] at offset 6. But we account for the 2 bytes
        // Adaptive data factory setting set / Adaptivdaten Werkseinstellung gesetzt

    #define I3_RES_DSC_STAT_ADAPTIVDATEN_WERKSMODUS_NR               (RXBUF_SCHAR(8))
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_WERKSMODUS_NR_UNIT          '0-n'
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_WERKSMODUS_NR_TYPE          char
        // Adaptive data factory setting set / Adaptivdaten Werkseinstellung gesetzt

    // Can't yet generate code for STAT_ADAPTIVDATEN_LERNWERTE_AKTIV_AJ_DATA of type data[1] at offset 9. But we account for the 1 bytes
        // Adaptive data in the learning area / Adaptivdaten im Lernbereich

    #define I3_RES_DSC_STAT_ADAPTIVDATEN_LERNWERTE_AKTIV_NR          (RXBUF_SCHAR(10))
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_LERNWERTE_AKTIV_NR_UNIT     '0-n'
    #define I3_RES_DSC_STAT_ADAPTIVDATEN_LERNWERTE_AKTIV_NR_TYPE     char
        // Adaptive data in the learning area / Adaptivdaten im Lernbereich

#define I3_PID_DSC_RPA_LERNDATEN_STATISTIK                           0xDC14
        // Reading out learning data statistics / Auslesen Lerndaten Statisik

    #define I3_RES_DSC_STAT_RPA_VERSION_NR_1_WERT                    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_RPA_VERSION_NR_1_WERT_TYPE               unsigned char
        // Major version number of RPA software / Hauptversionsnummer RPA-Software

    #define I3_RES_DSC_STAT_RPA_VERSION_NR_2_WERT                    (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_RPA_VERSION_NR_2_WERT_TYPE               unsigned char
        // Min version number of RPA software / Unterversionsnummer RPA-Software

    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_WERT          (RXBUF_UINT32(2))
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_WERT_UNIT     'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_WERT_TYPE     unsigned long
        // Mileage last initialization / Kilometerstand letzte Initialisierung

    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_1_WERT  (RXBUF_UINT32(6))
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_1_WERT_UNIT 'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_1_WERT_TYPE unsigned long
        // Mileage penultimate initialization / Kilometerstand vorletzte Initialisierung

    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_2_WERT  (RXBUF_UINT32(10))
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_2_WERT_UNIT 'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_STANDARDISIERUNG_MINUS_2_WERT_TYPE unsigned long
        // Mileage before-penultimate initialization / Kilometerstand vor-vorletzten Initialisierung

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_WERT  (RXBUF_UINT(14))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_WERT_UNIT 'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_WERT_TYPE unsigned short
        // Number of days since the last initialization / Anzahl der Tage seit der letzten Initialisierung

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_1_WERT (RXBUF_UINT(16))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_1_WERT_UNIT 'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_1_WERT_TYPE unsigned short
        // Number of days since the penultimate initialization / Anzahl der Tage seit der vorletzten Initialisierung

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_2_WERT (RXBUF_UINT(18))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_2_WERT_UNIT 'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_STANDARDISIERUNG_MINUS_2_WERT_TYPE unsigned short
        // Number of days since the next to last initialization / Anzahl der Tage seit der vor-vorletzten Initialisierung

    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_WERT                     (RXBUF_UINT32(20))
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_WERT_UNIT                'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_WERT_TYPE                unsigned long
        // Mileage last detected flat tire / Kilometerstand letzte erkannten Reifenpanne

    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_1_WERT             (RXBUF_UINT32(24))
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_1_WERT_UNIT        'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_1_WERT_TYPE        unsigned long
        // Mileage penultimate detected flat tire / Kilometerstand vorletzte erkannten Reifenpanne

    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_2_WERT             (RXBUF_UINT32(28))
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_2_WERT_UNIT        'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_PANNE_MINUS_2_WERT_TYPE        unsigned long
        // Mileage before-penultimate detected flat tire / Kilometerstand vor-vorletzte erkannten Reifenpanne

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_WERT             (RXBUF_UINT(32))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_WERT_UNIT        'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_WERT_TYPE        unsigned short
        // Days since the last flat tire detected / Tage seit der letzten erkannten Reifenpanne

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_1_WERT     (RXBUF_UINT(34))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_1_WERT_UNIT 'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_1_WERT_TYPE unsigned short
        // Days since the penultimate detected flat tire / Tage seit der vorletzten erkannten Reifenpanne

    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_2_WERT     (RXBUF_UINT(36))
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_2_WERT_UNIT 'd'
    #define I3_RES_DSC_STAT_TAGE_SEIT_LETZTER_PANNE_MINUS_2_WERT_TYPE unsigned short
        // Days since the penultimate one recognized flat tire / Tage seit der vor-vorletzten erkannten Reifenpanne

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_WERT        (RXBUF_UCHAR(38))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_WERT_UNIT   'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_WERT_TYPE   unsigned char
        // Vehicle speed during the last flat tire detected / Fahrzeuggeschwindigkeit während der letzten erkannten
        // Reifenpanne

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_1_WERT (RXBUF_UCHAR(39))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_1_WERT_UNIT 'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_1_WERT_TYPE unsigned char
        // Vehicle speed during the penultimate flat tire detected / Fahrzeuggeschwindigkeit während der vorletzten
        // erkannten Reifenpanne

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_2_WERT (RXBUF_UCHAR(40))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_2_WERT_UNIT 'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_LETZTE_PANNE_MINUS_2_WERT_TYPE unsigned char
        // Vehicle speed during the penultimate to last detected flat tire / Fahrzeuggeschwindigkeit während der
        // vor-vorletzten erkannten Reifenpanne

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_WERT    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_WERT_UNIT 'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_WERT_TYPE unsigned char
        // Max. Vehicle speed after the last flat tire detected (first value is entered no earlier than 30 seconds after
        // the flat tire was detected) / max. Fahrzeuggeschwindigkeit nach der letzten erkannten Reifenpanne (erster wert
        // wird frühestens 30 Sekunden nach der Pannenerkennung eingetragen)

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_1_WERT (RXBUF_UCHAR(42))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_1_WERT_UNIT 'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_1_WERT_TYPE unsigned char
        // Vehicle speed during the penultimate flat tire detected / Fahrzeuggeschwindigkeit während der vorletzten
        // erkannten Reifenpanne

    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_2_WERT (RXBUF_UCHAR(43))
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_2_WERT_UNIT 'km/h'
    #define I3_RES_DSC_STAT_GESCHWINDIGKEIT_MAX_LETZTE_PANNE_MINUS_2_WERT_TYPE unsigned char
        // Vehicle speed during the penultimate to last detected flat tire / Fahrzeuggeschwindigkeit während der
        // vor-vorletzten erkannten Reifenpanne

    #define I3_RES_DSC_STAT_KM_LETZTE_3PLUS1_ERKENNUNG_WERT          (RXBUF_UINT32(44))
    #define I3_RES_DSC_STAT_KM_LETZTE_3PLUS1_ERKENNUNG_WERT_UNIT     'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_3PLUS1_ERKENNUNG_WERT_TYPE     unsigned long
        // Mileage last recognized 3plus constellation / Kilometerstand letzte erkannte 3plus-Konstellation

    #define I3_RES_DSC_STAT_KM_LETZTE_NEUREIFEN_ERKENNUNG_WERT       (RXBUF_UINT32(48))
    #define I3_RES_DSC_STAT_KM_LETZTE_NEUREIFEN_ERKENNUNG_WERT_UNIT  'km'
    #define I3_RES_DSC_STAT_KM_LETZTE_NEUREIFEN_ERKENNUNG_WERT_TYPE  unsigned long
        // Mileage last recognized new tire constellation / Kilometerstand  letzte erkannte Neureifen-Konstellation

    #define I3_RES_DSC_STAT_NEUREIFEN_POSITON                        (RXBUF_UCHAR(52))
    #define I3_RES_DSC_STAT_NEUREIFEN_POSITON_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_NEUREIFEN_POSITON_TYPE                   unsigned char
        // Position of the new tire at the last detection / Position des Neureifens bei der letzten Erkennung

    #define I3_RES_DSC_STAT_URSACHE_WARNUNG_WERT                     (RXBUF_UCHAR(53))
    #define I3_RES_DSC_STAT_URSACHE_WARNUNG_WERT_TYPE                unsigned char
        // Type of warning message (e.g. rapid loss of air pressure etc.) / Typ der Warnmeldung (z.B. schnelle
        // Luftfruckverlust etc.)

    #define I3_RES_DSC_STAT_MAX_NAEHERUNG_WARNGRENZE_SEIT_LETZTER_STD_WERT (RXBUF_UCHAR(54))
    #define I3_RES_DSC_STAT_MAX_NAEHERUNG_WARNGRENZE_SEIT_LETZTER_STD_WERT_UNIT '%'
    #define I3_RES_DSC_STAT_MAX_NAEHERUNG_WARNGRENZE_SEIT_LETZTER_STD_WERT_TYPE unsigned char
        // The last initialization is the maximum approximation to the applied warning limit / Maximale Näherung zur
        // applizierten Warngrenze siet der letzte Initialisierung

#define I3_PID_DSC_RPA_LERNDATEN_STD                                 0xDC15
        // Reading out learning data standardization / Auslesen Lerndaten Standardisierung

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_WERT                (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_0_WERT_TYPE           unsigned char
        // Learning progress speed range 0 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 0 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_1_WERT                (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_1_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_1_WERT_TYPE           unsigned char
        // Learning progress speed range 1 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 1 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_2_WERT                (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_2_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_2_WERT_TYPE           unsigned char
        // Learning progress speed range 2 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 2 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_3_WERT                (RXBUF_UCHAR(3))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_3_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_3_WERT_TYPE           unsigned char
        // Learning progress speed range 3 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 3 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_4_WERT                (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_4_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_4_WERT_TYPE           unsigned char
        // Learning progress speed range 4 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 4 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_5_WERT                (RXBUF_UCHAR(5))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_5_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_5_WERT_TYPE           unsigned char
        // Learning progress speed range 5 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 5 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_6_WERT                (RXBUF_UCHAR(6))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_6_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_6_WERT_TYPE           unsigned char
        // Learning progress speed range 6 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 6 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_7_WERT                (RXBUF_UCHAR(7))
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_7_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_LERNSTATUS_BEREICH_7_WERT_TYPE           unsigned char
        // Learning progress speed range 7 (100% = fully learned) / Lernfortschritt Geschwindigkeitsbereich 7 (100 % =
        // vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_0_WERT                (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_0_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_0_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 0 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 0 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_1_WERT                (RXBUF_UCHAR(9))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_1_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_1_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 1 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 1 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_2_WERT                (RXBUF_UCHAR(10))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_2_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_2_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 2 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 2 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_3_WERT                (RXBUF_UCHAR(11))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_3_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_3_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 3 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 3 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_4_WERT                (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_4_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_4_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 4 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 4 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_5_WERT                (RXBUF_UCHAR(13))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_5_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_5_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 5 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 5 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_6_WERT                (RXBUF_UCHAR(14))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_6_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_6_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 6 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 6 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_7_WERT                (RXBUF_UCHAR(15))
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_7_WERT_UNIT           '%'
    #define I3_RES_DSC_STAT_KURVENKOMPENSATION_7_WERT_TYPE           unsigned char
        // Learning status curve compensation speed range 7 (100% = fully learned) / Lernstatus Kurvenkompensation
        // Geschwindigkeitsbereich 7 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_0_WERT              (RXBUF_UCHAR(16))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_0_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_0_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 0 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 0 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_1_WERT              (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_1_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_1_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 1 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 1 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_2_WERT              (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_2_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_2_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 2 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 2 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_3_WERT              (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_3_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_3_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 3 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 3 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_4_WERT              (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_4_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_4_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 4 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 4 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_5_WERT              (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_5_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_5_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 5 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 5 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_6_WERT              (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_6_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_6_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 6 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 6 (100 % = vollständig eingelernt)

    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_7_WERT              (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_7_WERT_UNIT         '%'
    #define I3_RES_DSC_STAT_MOMENTENKOMPENSATION_7_WERT_TYPE         unsigned char
        // Learning status torque compensation torque range 7 (100% = fully learned) / Lernstatus Momentenkompensation
        // Momentenbereich 7 (100 % = vollständig eingelernt)

#define I3_PID_DSC_DSC_BREMSLICHTSCHALTER                            0xDC1E
        // Read out brake light switch 1 = on (lights up); 0 = off / Auslesen Bremslichtschalter 1= ein (leuchtet); 0=
        // aus

    #define I3_RES_DSC_STAT_SCHALTER_BREMSLICHT_EIN                  (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_SCHALTER_BREMSLICHT_EIN_UNIT             '0/1'
    #define I3_RES_DSC_STAT_SCHALTER_BREMSLICHT_EIN_TYPE             unsigned char
        // Read out brake light switch 1 = on (lights up); 0 = off / Auslesen Bremslichtschalter 1= ein (leuchtet); 0=
        // aus

#define I3_PID_DSC_BREMSFLUESSIGKEITSSCHALTER                        0xDC1F
        // Reading level of brake fluid 1 = brake fluid available; 0 = brake fluid empty or interruption / Auslesen
        // Niveau Bremsflüssigkeit 1 = Bremsflüssigkeit vorhanden;  0 = Bremsflüssigkeit leer oder Unterbrechung

    #define I3_RES_DSC_STAT_BREMSFLUESSIGKEIT_NIVEAU_SCHALTER_EIN    (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_BREMSFLUESSIGKEIT_NIVEAU_SCHALTER_EIN_UNIT '0/1'
    #define I3_RES_DSC_STAT_BREMSFLUESSIGKEIT_NIVEAU_SCHALTER_EIN_TYPE unsigned char
        // Reading level of brake fluid 1 = brake fluid available; 0 = brake fluid empty or interruption / Auslesen
        // Niveau Bremsflüssigkeit 1 = Bremsflüssigkeit vorhanden;  0 = Bremsflüssigkeit leer oder Unterbrechung

#define I3_PID_DSC_STATUS_GBRPLUS                                    0xDC3A
        // Read out data limit range feedback (GBR) / Auslesen Daten Grenzbereichsrückmeldung (GBR)

    #define I3_RES_DSC_STAT_FAKTORU_EPS_WERT                         (RXBUF_UCHAR(0)/100.0f)
    #define I3_RES_DSC_STAT_FAKTORU_EPS_WERT_TYPE                    float
        // Factor by which the GBR influences the steering assistance of the EPS / Faktor, über den die GBR die
        // Lenkunterstützung der EPS beeinflusst

    #define I3_RES_DSC_STAT_FAKTORARD_EPS_WERT                       (RXBUF_UCHAR(1)/100.0f)
    #define I3_RES_DSC_STAT_FAKTORARD_EPS_WERT_TYPE                  float
        // Factor by which the GBR influences the damping of the EPS / Faktor, über den die GBR die Dämpfung der EPS
        // beinflusst

    #define I3_RES_DSC_STAT_FAKTORARZ_EPS_WERT                       (RXBUF_UCHAR(2)/100.0f)
    #define I3_RES_DSC_STAT_FAKTORARZ_EPS_WERT_TYPE                  float
        // Factor by which the GBR influences the active return of the EPS / Faktor, über den die GBR den aktiven
        // Rücklauf der EPS beeinflusst

    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_EPS_WERT_0XDC3A            (RXBUF_SCHAR(3)/100.0f)
    #define I3_RES_DSC_STAT_MMOTOR_OFFSET_EPS_WERT_0XDC3A_TYPE       float
        // Offset motor torque, which the EPS additively superimposes on its own motor torque / Offset-Motormoment, das
        // die EPS dem eigenen Motormoment additiv überlagert

    #define I3_RES_DSC_STAT_FAKTOR_EPS_QUALIFIER_WERT                (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_FAKTOR_EPS_QUALIFIER_WERT_TYPE           unsigned char
        // Target value qualifier for the 3 factors (2 = implement, 14 = do not implement) / Sollwert-Qualifier zu den 3
        // Faktoren (2 = umsetzen, 14 = nicht umsetzen)

    #define I3_RES_DSC_STAT_OFFSET_EPS_QUALIFIER_WERT_0XDC3A         (RXBUF_UCHAR(5))
    #define I3_RES_DSC_STAT_OFFSET_EPS_QUALIFIER_WERT_0XDC3A_TYPE    unsigned char
        // Setpoint qualifier for offset motor torque (2 = implement; 14 = do not implement) / Sollwert-Qualifier zum
        // OffsetMotormoment (2 = umsetzen; 14 = nicht umsetzen)

    #define I3_RES_DSC_STAT_FUNKTION_GBR_CODIERUNG_EIN               (RXBUF_UCHAR(6))
    #define I3_RES_DSC_STAT_FUNKTION_GBR_CODIERUNG_EIN_UNIT          '0/1'
    #define I3_RES_DSC_STAT_FUNKTION_GBR_CODIERUNG_EIN_TYPE          unsigned char
        // GBR function (1 = coded in; 0 = coded out) / GBR-Funktion (1 = eincodiert; 0 = auscodiert)

    #define I3_RES_DSC_STAT_FUNKTION_GBR_KENNLINIE_NUMMER_WERT_0XDC3A (RXBUF_UCHAR(7))
    #define I3_RES_DSC_STAT_FUNKTION_GBR_KENNLINIE_NUMMER_WERT_0XDC3A_TYPE unsigned char
        // active GBR characteristic set / aktiver GBR Kennliniensatz

    #define I3_RES_DSC_STAT_EPS_FAKT_MOM_SERVICE_QUALIFIER_WERT_0XDC3A (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_EPS_FAKT_MOM_SERVICE_QUALIFIER_WERT_0XDC3A_TYPE unsigned char
        // Service qualifier of the EPS for the implementation of the factors and the offset motor torque (everything OK
        // if 32 or 33) / Service-Qualifier der EPS für Umsetzung der Faktoren und des Offset-Motormoments (alles i.O
        // wenn 32 od 33)

    #define I3_RES_DSC_STAT_ZUSTAND_GRENZBEREICHSREUCKMELDUNG_WERT   (RXBUF_UCHAR(9))
    #define I3_RES_DSC_STAT_ZUSTAND_GRENZBEREICHSREUCKMELDUNG_WERT_TYPE unsigned char
        // Actual state of the GBR function (depending on the qualifiers of the inputs) / Ist-Zustand der GBR-Funktion
        // (abhängig von Qualifiern der Eingänge)

#define I3_PID_DSC_STATUS_LLP                                        0xDC42
        // Reading out data steering power prediction / Auslesen Daten Lenkleistungsprädiktion

    #define I3_RES_DSC_STAT_LLP_MANI_AKTIV                           (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_LLP_MANI_AKTIV_UNIT                      '0/1'
    #define I3_RES_DSC_STAT_LLP_MANI_AKTIV_TYPE                      unsigned char
        // Manual intervention (0 = not active; 1 = active) / Manueller Eingriff (0= nicht aktiv; 1 = aktiv)

    #define I3_RES_DSC_STAT_LLP_MANI_WERT                            (RXBUF_SCHAR(1)/10.0f)
    #define I3_RES_DSC_STAT_LLP_MANI_WERT_UNIT                       'kW'
    #define I3_RES_DSC_STAT_LLP_MANI_WERT_TYPE                       float
        // Manual value / Manueller Wert

    #define I3_RES_DSC_STAT_LLP_CALC_WERT                            (RXBUF_SCHAR(2)/10.0f)
    #define I3_RES_DSC_STAT_LLP_CALC_WERT_UNIT                       'kW'
    #define I3_RES_DSC_STAT_LLP_CALC_WERT_TYPE                       float
        // Calculated value / Berechneter Wert

    #define I3_RES_DSC_STAT_LLP_PEL_IST_WERT                         (RXBUF_SCHAR(3)/10.0f)
    #define I3_RES_DSC_STAT_LLP_PEL_IST_WERT_UNIT                    'kW'
    #define I3_RES_DSC_STAT_LLP_PEL_IST_WERT_TYPE                    float
        // Measured value / Gemessener Wert

    #define I3_RES_DSC_STAT_LLP_FZS_WERT                             (RXBUF_SINT(4))
    #define I3_RES_DSC_STAT_LLP_FZS_WERT_UNIT                        'N'
    #define I3_RES_DSC_STAT_LLP_FZS_WERT_TYPE                        short
        // Power rack / Kraft Zahnstange

    #define I3_RES_DSC_STAT_LLP_RITZELWINKEL_WERT                    (RXBUF_SINT(6))
    #define I3_RES_DSC_STAT_LLP_RITZELWINKEL_WERT_UNIT               '°'
    #define I3_RES_DSC_STAT_LLP_RITZELWINKEL_WERT_TYPE               short
        // Pinion angle / Ritzelwinkel

    #define I3_RES_DSC_STAT_LLP_ANTEIL_HUB_WERT                      (RXBUF_SCHAR(8))
    #define I3_RES_DSC_STAT_LLP_ANTEIL_HUB_WERT_UNIT                 '%'
    #define I3_RES_DSC_STAT_LLP_ANTEIL_HUB_WERT_TYPE                 char
        // Standardized rack stroke / Normierter Zahnstangenhub

    #define I3_RES_DSC_STAT_LLP_V_ZS_WERT                            (RXBUF_SINT(9)/1000.0f)
    #define I3_RES_DSC_STAT_LLP_V_ZS_WERT_UNIT                       'm/s'
    #define I3_RES_DSC_STAT_LLP_V_ZS_WERT_TYPE                       float
        // Speed rack / Geschwindigkeit Zahnstange

    #define I3_RES_DSC_STAT_LLP_FAHRERHANDMOMENT_WERT                (RXBUF_SINT(11)/100.0f)
    #define I3_RES_DSC_STAT_LLP_FAHRERHANDMOMENT_WERT_UNIT           'Nm'
    #define I3_RES_DSC_STAT_LLP_FAHRERHANDMOMENT_WERT_TYPE           float
        // Torque steering wheel (driver) / Drehmoment Lenkrad (Fahrer)

    #define I3_RES_DSC_STAT_LLP_VX_ENTRY                             (RXBUF_UCHAR(13))
    #define I3_RES_DSC_STAT_LLP_VX_ENTRY_UNIT                        '0/1'
    #define I3_RES_DSC_STAT_LLP_VX_ENTRY_TYPE                        unsigned char
        // Incorrect speed / Geschwindigkeit fehlerhaft

    #define I3_RES_DSC_STAT_LLP_AX_KORR                              (RXBUF_UCHAR(14))
    #define I3_RES_DSC_STAT_LLP_AX_KORR_UNIT                         '0/1'
    #define I3_RES_DSC_STAT_LLP_AX_KORR_TYPE                         unsigned char
        // Longitudinal acceleration incorrect / Längsbeschleunigung fehlerhaft

    #define I3_RES_DSC_STAT_LLP_RETURN                               (RXBUF_UCHAR(15))
    #define I3_RES_DSC_STAT_LLP_RETURN_UNIT                          '0/1'
    #define I3_RES_DSC_STAT_LLP_RETURN_TYPE                          unsigned char
        // Turn recognized / Wenden erkannt

    #define I3_RES_DSC_STAT_LLP_STOP                                 (RXBUF_UCHAR(16))
    #define I3_RES_DSC_STAT_LLP_STOP_UNIT                            '0/1'
    #define I3_RES_DSC_STAT_LLP_STOP_TYPE                            unsigned char
        // Parking detected / Parken erkannt

    #define I3_RES_DSC_STAT_LLP_EXTRAP_PEL                           (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_LLP_EXTRAP_PEL_UNIT                      '0/1'
    #define I3_RES_DSC_STAT_LLP_EXTRAP_PEL_TYPE                      unsigned char
        // Electric power extrapolated / Elektrische Leistung extrapoliert

    #define I3_RES_DSC_STAT_LLP_EXTRAP_FZS                           (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_LLP_EXTRAP_FZS_UNIT                      '0/1'
    #define I3_RES_DSC_STAT_LLP_EXTRAP_FZS_TYPE                      unsigned char
        // Force rack extrapolated / Kraft Zahnstange extrapoliert

    #define I3_RES_DSC_STAT_LLP_FZSREDUC_BRAKE                       (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_LLP_FZSREDUC_BRAKE_UNIT                  '0/1'
    #define I3_RES_DSC_STAT_LLP_FZSREDUC_BRAKE_TYPE                  unsigned char
        // Front axle unbraked / Vorderachse entbremst

    #define I3_RES_DSC_STAT_LLP_PMA                                  (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_LLP_PMA_UNIT                             '0/1'
    #define I3_RES_DSC_STAT_LLP_PMA_TYPE                             unsigned char
        // Parking maneuvering assistant recognized / Parkenmanöverassistent erkannt

    #define I3_RES_DSC_STAT_LLP_PDC                                  (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_LLP_PDC_UNIT                             '0/1'
    #define I3_RES_DSC_STAT_LLP_PDC_TYPE                             unsigned char
        // Park Distance Control detected / Park Distance Control erkannt

    #define I3_RES_DSC_STAT_LLP_TEMP_A                               (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_LLP_TEMP_A_UNIT                          '0/1'
    #define I3_RES_DSC_STAT_LLP_TEMP_A_TYPE                          unsigned char
        // Outside temperature detected / Außentemperatur erkannt

    #define I3_RES_DSC_STAT_LLP_RAIN                                 (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_LLP_RAIN_UNIT                            '0/1'
    #define I3_RES_DSC_STAT_LLP_RAIN_TYPE                            unsigned char
        // Rain recognized / Regen erkannt

    #define I3_RES_DSC_STAT_LLP_FLAG_AX                              (RXBUF_UCHAR(24))
    #define I3_RES_DSC_STAT_LLP_FLAG_AX_UNIT                         '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_AX_TYPE                         unsigned char
        // Longitudinal acceleration active / Längsbeschleunigung aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_STOP                            (RXBUF_UCHAR(25))
    #define I3_RES_DSC_STAT_LLP_FLAG_STOP_UNIT                       '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_STOP_TYPE                       unsigned char
        // Parking active / Parken aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_RAIN                            (RXBUF_UCHAR(26))
    #define I3_RES_DSC_STAT_LLP_FLAG_RAIN_UNIT                       '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_RAIN_TYPE                       unsigned char
        // Rain active / Regen aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_PMA                             (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_LLP_FLAG_PMA_UNIT                        '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_PMA_TYPE                        unsigned char
        // Parking maneuver assistant active / Parkenmanöverassistent aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_PDC                             (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_LLP_FLAG_PDC_UNIT                        '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_PDC_TYPE                        unsigned char
        // Park Distance Control active / Park Distance Control aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_RETURN                          (RXBUF_UCHAR(29))
    #define I3_RES_DSC_STAT_LLP_FLAG_RETURN_UNIT                     '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_RETURN_TYPE                     unsigned char
        // Active turning / Wenden aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_TEMP_A                          (RXBUF_UCHAR(30))
    #define I3_RES_DSC_STAT_LLP_FLAG_TEMP_A_UNIT                     '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_TEMP_A_TYPE                     unsigned char
        // Outside temperature active / Außentemperatur aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_FZS                      (RXBUF_UCHAR(31))
    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_FZS_UNIT                 '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_FZS_TYPE                 unsigned char
        // Power rack active / Kraft Zahnstange aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_PEL                      (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_PEL_UNIT                 '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_EXTRAP_PEL_TYPE                 unsigned char
        // Electric power active / Elektrische Leistung aktiv

    #define I3_RES_DSC_STAT_LLP_FLAG_FZSREDUC_BRAKE                  (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_LLP_FLAG_FZSREDUC_BRAKE_UNIT             '0/1'
    #define I3_RES_DSC_STAT_LLP_FLAG_FZSREDUC_BRAKE_TYPE             unsigned char
        // Front axle active / Vorderachse aktiv

#define I3_PID_DSC_ABS_FUNKTION                                      0xDC6C
        // Read status of anti-lock braking system (ABS) function / Auslesen Status Funktion Antiblockiersystem (ABS)

    #define I3_RES_DSC_STAT_ABS_FUNKTION                             (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ABS_FUNKTION_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_ABS_FUNKTION_TYPE                        unsigned char
        // Status of the anti-lock braking system (ABS) function / Status Funktion Antiblockiersystem (ABS)

    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_WERT_UNIT         'HEX'
    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_WERT_TYPE         unsigned char
        // Basic qualifier function anti-lock braking system (ABS) / Basis Qualifier Funktion Antiblockiersystem (ABS)

    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_ERW_WERT          (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_ERW_WERT_UNIT     'HEX'
    #define I3_RES_DSC_STAT_ABS_FUNKTION_QUALIFIER_ERW_WERT_TYPE     unsigned char
        // Extended qualifier function anti-lock braking system (ABS) / Erweiterter Qualifier Funktion Antiblockiersystem
        // (ABS)

#define I3_PID_DSC_ASC_FUNKTION                                      0xDC6D
        // Read out status function traction control (ASC) / Auslesen Status Funktion Antriebsschlupfregelung (ASC)

    #define I3_RES_DSC_STAT_ASC_FUNKTION                             (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ASC_FUNKTION_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_ASC_FUNKTION_TYPE                        unsigned char
        // Status function traction control (ASC) / Status Funktion Antriebsschlupfregelung (ASC)

    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_WERT_UNIT         'HEX'
    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_WERT_TYPE         unsigned char
        // Basic qualifier function traction control (ASC) / Basis Qualifier Funktion Antriebsschlupfregelung (ASC)

    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_ERW_WERT          (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_ERW_WERT_UNIT     'HEX'
    #define I3_RES_DSC_STAT_ASC_FUNKTION_QUALIFIER_ERW_WERT_TYPE     unsigned char
        // Extended qualifier function traction control (ASC) / Erweiterter Qualifier Funktion Antriebsschlupfregelung
        // (ASC)

#define I3_PID_DSC_FDR_FUNKTION                                      0xDC6E
        // Read out status of vehicle stabilization function (FDR) / Auslesen Status Funktion Fahrzeugstabilisierung
        // (FDR)

    #define I3_RES_DSC_STAT_FDR_FUNKTION                             (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_FDR_FUNKTION_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_FDR_FUNKTION_TYPE                        unsigned char
        // Status of the vehicle stabilization function (FDR) / Status Funktion Fahrzeugstabilisierung (FDR)

    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_WERT_UNIT         'HEX'
    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_WERT_TYPE         unsigned char
        // Basic qualifier function vehicle stabilization (FDR) / Basis Qualifier Funktion Fahrzeugstabilisierung (FDR)

    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_ERW_WERT          (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_ERW_WERT_UNIT     'HEX'
    #define I3_RES_DSC_STAT_FDR_FUNKTION_QUALIFIER_ERW_WERT_TYPE     unsigned char
        // Extended qualifier function vehicle stabilization (FDR) / Erweiterter Qualifier Funktion
        // Fahrzeugstabilisierung (FDR)

#define I3_PID_DSC_PBRK_FUNKTION                                     0xDC6F
        // Read status of parking brake function (PBRK) / Auslesen Status Funktion Parkbremse (PBRK)

    #define I3_RES_DSC_STAT_PBRK_FUNKTION                            (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_UNIT                       '0-n'
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_TYPE                       unsigned char
        // Status parking brake function (PBRK) / Status Funktion Parkbremse (PBRK)

    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_WERT             (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_WERT_UNIT        'HEX'
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_WERT_TYPE        unsigned char
        // Basic qualifier function parking brake (PBRK) / Basis Qualifier Funktion Parkbremse (PBRK)

    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_ERW_WERT         (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_ERW_WERT_UNIT    'HEX'
    #define I3_RES_DSC_STAT_PBRK_FUNKTION_QUALIFIER_ERW_WERT_TYPE    unsigned char
        // Extended qualifier function parking brake (PBRK) / Erweiterter Qualifier Funktion Parkbremse (PBRK)

#define I3_PID_DSC_HDC_FUNKTION                                      0xDC70
        // Read out status function hill descent assistant (HDC) / Auslesen Status Funktion Bergabfahrassistent (HDC)

    #define I3_RES_DSC_STAT_HDC_FUNKTION                             (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_HDC_FUNKTION_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_HDC_FUNKTION_TYPE                        unsigned char
        // Status function hill descent assistant (HDC) / Status Funktion Bergabfahrassistent (HDC)

    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_WERT_UNIT         'HEX'
    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_WERT_TYPE         unsigned char
        // Basic qualifier function hill descent assistant (HDC) / Basis Qualifier Funktion Bergabfahrassistent (HDC)

    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_ERW_WERT          (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_ERW_WERT_UNIT     'HEX'
    #define I3_RES_DSC_STAT_HDC_FUNKTION_QUALIFIER_ERW_WERT_TYPE     unsigned char
        // Extended qualifier function Hill Descent Assistant (HDC) / Erweiterter Qualifier Funktion Bergabfahrassistent
        // (HDC)

// Skipping ADAPTIVDATEN_SBS on 0xDC89 which takes arguments

// Skipping ADAPTIVDATEN_AAEPS on 0xDC8A which takes arguments

// Skipping ADAPTIVDATEN_EV on 0xDC8B which takes arguments

// Skipping ADAPTIVDATEN_TSC on 0xDC8C which takes arguments

// Skipping ADAPTIVDATEN_ZFM on 0xDC8D which takes arguments

#define I3_PID_DSC_MIRROR_AAEPS                                      0xDC8F
        // MIRROR_AAEPS / MIRROR_AAEPS

    // Can't process STAT_LWA_EPS_OFFSET_BESTAET_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_LWA_EPS_OFFS_KORR_ZAEHL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_DSC_MIRROR_EV                                         0xDC90
        // MIRROR_EV / MIRROR_EV

    // Can't process STAT_SBS2EV_R_VCH_INTRO_B_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SBS2EV_R_VCH_INTRO_L_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SBS2EV_R_VCH_INTRO_R_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SBS_2EV_R_VCH_WERT0_B_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SBS_2EV_R_VCH_WERT0_L_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_SBS_2EV_R_VCH_WERT0_R_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_DSC_MIRROR_SBS                                        0xDC91
        // MIRROR_SBS / MIRROR_SBS

    // Can't process STAT_COMP_OFS_AX1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AX1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_AX1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AY1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AY1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AY2_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AY2_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AZ1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_AZ1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_AZ1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DE_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DEW_LT_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DEYR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DEWYR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DE_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_DEW_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_VWHL_HL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_VWHL_HR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_VWHL_VL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_VWHL_VR_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_RY1_STST_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_RY1_DRV_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_RY1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_KYR_RY1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_XR1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_XR1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_XR1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_KYR_XR1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR1_DRV_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR1_STST1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR1_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_YR1_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR2_DRV_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR2_STST_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_OFS_YR2_TOL_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_COMP_SENS_YR2_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_SBS_3DE_IDE_CODE_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_AY1_SGN_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_AY2_SGN_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_YR1_SGN_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_YR2_SGN_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

    // Can't process STAT_I_YR_WH_SGN_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_DSC_MIRROR_TSC                                        0xDC92
        // Setpoint manual torque factor / Faktor Soll-Handmoment

    // Can't process STAT_TSC_FAKTOR_SOLL_HANDMOMENT_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_DSC_MIRROR_ZFM                                        0xDC93
        // Offset longitudinal acceleration motor torque / Offset Längsbeschleunigung Motormoment

    // Can't process STAT_ZFMFS_OFS_AXM_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_DSC_STATUS_RDC_VERSION                                0xDC94
        // Displays the current software version of the RDC. / Zeigt die aktuelle Softwareversion vom RDC an.

    #define I3_RES_DSC_STAT_RDC_VERSION_WERT                         (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_RDC_VERSION_WERT_TYPE                    unsigned short
        // Displays the current software version of the RDC. / Zeigt die aktuelle Softwareversion vom RDC an.

#define I3_PID_DSC_STATUS_RDC_LESEN                                  0xDC95
        // STATUS_RDC_LESEN / STATUS_RDC_LESEN

    #define I3_RES_DSC_STAT_EIGENRAEDER_BEKANNT                      (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_EIGENRAEDER_BEKANNT_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_EIGENRAEDER_BEKANNT_TYPE                 unsigned char
        // All eigenwheels are known: 0 = not known; 1 = known / Alle Eigenraeder sind bekannt: 0 = nicht bekannt; 1 =
        // bekannt

    #define I3_RES_DSC_STAT_RADPOS_ER_BEKANNT                        (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_RADPOS_ER_BEKANNT_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_RADPOS_ER_BEKANNT_TYPE                   unsigned char
        // The wheel positions of all own wheels are known: 0 = not known; 1 = known / Radpositionen aller Eigenraeder
        // sind bekannt: 0 = nicht bekannt; 1 = bekannt

    #define I3_RES_DSC_STAT_RADPOS_UEBERPRUEFT_BESTAETIGT            (RXBUF_UCHAR(2))
    #define I3_RES_DSC_STAT_RADPOS_UEBERPRUEFT_BESTAETIGT_UNIT       '0-n'
    #define I3_RES_DSC_STAT_RADPOS_UEBERPRUEFT_BESTAETIGT_TYPE       unsigned char
        // All wheel positions are checked and confirmed: 0 = not confirmed; 1 = confirmed / Alle Radpositionen sind
        // ueberprueft und bestaetigt: 0 = nicht bestätigt; 1 = bestätigt

    #define I3_RES_DSC_STAT_DTC_INACTIVE                             (RXBUF_UCHAR(3))
    #define I3_RES_DSC_STAT_DTC_INACTIVE_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_DTC_INACTIVE_TYPE                        unsigned char
        // Active DTC error with warning lamp in the error memory: 0 = DTC inactive; 1 = DTC active / Aktiver DTC Fehler
        // mit Warnlampe im Fehlerspeicher vorhanden: 0 = DTC inaktiv; 1 = DTC aktiv

    #define I3_RES_DSC_STAT_KAL_ANFORDERUNG_AKTIV                    (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_KAL_ANFORDERUNG_AKTIV_UNIT               '0-n'
    #define I3_RES_DSC_STAT_KAL_ANFORDERUNG_AKTIV_TYPE               unsigned char
        // Calibration request pending: 0 = calibration request inactive; 1 = calibration request active /
        // Kalibrieranforderung steht an: 0 = Kalibrieranforderung inaktiv; 1 = Kalibrieranforderung aktiv

    #define I3_RES_DSC_STAT_RAD_ZUORDNUNG_TIMEOUT                    (RXBUF_UCHAR(5))
    #define I3_RES_DSC_STAT_RAD_ZUORDNUNG_TIMEOUT_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RAD_ZUORDNUNG_TIMEOUT_TYPE               unsigned char
        // Wheel assignment could not be completed: 0 = no timeout; 1 = timeout / Radzuordnung konnte nicht abgeschlossen
        // werden: 0 = kein Timeout; 1 = Timeout

    #define I3_RES_DSC_STAT_BANDMODE_AKTIV                           (RXBUF_UCHAR(6))
    #define I3_RES_DSC_STAT_BANDMODE_AKTIV_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_BANDMODE_AKTIV_TYPE                      unsigned char
        // Query whether belt mode is activated in the RDC: 0 = belt mode inactive; 1 = band mode active / Abfrage ob
        // Bandmode im RDC aktiviert ist: 0 = Bandmode inaktiv ; 1 = Bandmode aktiv

    #define I3_RES_DSC_STAT_ER_ERKENNUNG_FAHRT                       (RXBUF_UCHAR(7))
    #define I3_RES_DSC_STAT_ER_ERKENNUNG_FAHRT_UNIT                  '0-n'
    #define I3_RES_DSC_STAT_ER_ERKENNUNG_FAHRT_TYPE                  unsigned char
        // Own wheel recognition was started while driving: 0 = not started 1 = started / Eigenraderkennung waehrend der
        // Fahrt wurde gestartet: 0 = nicht gestartet 1 = gestartet

    #define I3_RES_DSC_STAT_TEST_EIGENRAD_FAHRT                      (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_TEST_EIGENRAD_FAHRT_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_TEST_EIGENRAD_FAHRT_TYPE                 unsigned char
        // Test own wheel detection while driving was started: 0 = not started, 1 = started / Test-Eigenraderkennung in
        // Fahrt wurde gestartet: 0 = nicht gestartet , 1 = gestartet

    #define I3_RES_DSC_STAT_TEST_EIGENRAD_STAND                      (RXBUF_UCHAR(9))
    #define I3_RES_DSC_STAT_TEST_EIGENRAD_STAND_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_TEST_EIGENRAD_STAND_TYPE                 unsigned char
        // Test own wheel recognition was started while stationary: 0 = not started, 1 = started / Test-Eigenraderkennung
        // im Stand wurde gestartet: 0 = nicht gestartet, 1 = gestartet

    #define I3_RES_DSC_STAT_ER_FAHRT_VTHRS_AKTIV                     (RXBUF_UCHAR(10))
    #define I3_RES_DSC_STAT_ER_FAHRT_VTHRS_AKTIV_UNIT                '0-n'
    #define I3_RES_DSC_STAT_ER_FAHRT_VTHRS_AKTIV_TYPE                unsigned char
        // Speed threshold for own wheel recognition activated when driving: 0 = inactive, 1 = active /
        // Geschwindigkeitsschwelle fuer Eigenraderkennung bei Fahrt aktiviert : 0 = inaktiv , 1 = aktiv

    #define I3_RES_DSC_STAT_BM_TIMEOUT_ACTIVE                        (RXBUF_UCHAR(11))
    #define I3_RES_DSC_STAT_BM_TIMEOUT_ACTIVE_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_BM_TIMEOUT_ACTIVE_TYPE                   unsigned char
        // Belt mode timeout is running: 0 = inactive, 1 = active / Bandmode Timeout laeuft : 0 = inaktiv , 1 = aktiv

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_UNSPEZIFISCH_AKTIV         (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_UNSPEZIFISCH_AKTIV_UNIT    '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_UNSPEZIFISCH_AKTIV_TYPE    unsigned char
        // Hard warning unspecific, active: 0 = inactive; 1 = active / Harte Warnung unspezifisch, aktiv: 0 = inaktiv ; 1
        // = aktiv

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VL_AKTIV                   (RXBUF_UCHAR(13))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VL_AKTIV_UNIT              '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VL_AKTIV_TYPE              unsigned char
        // Hard warning front left, active: 0 = inactive; 1 = active / Harte Warnung vorne links, aktiv: 0 = inaktiv ; 1
        // = aktiv

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VR_AKTIV                   (RXBUF_UCHAR(14))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VR_AKTIV_UNIT              '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_VR_AKTIV_TYPE              unsigned char
        // Hard warning front right, active: 0 = inactive; 1 = active / Harte Warnung vorne rechts, aktiv: 0 = inaktiv ;
        // 1 = aktiv

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HL_AKTIV                   (RXBUF_UCHAR(15))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HL_AKTIV_UNIT              '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HL_AKTIV_TYPE              unsigned char
        // Hard rear left warning, active: 0 = inactive; 1 = active / Harte Warnung hinten links, aktiv: 0 = inaktiv ; 1
        // = aktiv

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HR_AKTIV                   (RXBUF_UCHAR(16))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HR_AKTIV_UNIT              '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_HR_AKTIV_TYPE              unsigned char
        // Hard rear right warning, active: 0 = inactive; 1 = active / Harte Warnung hinten rechts, aktiv: 0 = inaktiv ;
        // 1 = aktiv

    #define I3_RES_DSC_STAT_KL_15_EIN                                (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_KL_15_EIN_UNIT                           '0-n'
    #define I3_RES_DSC_STAT_KL_15_EIN_TYPE                           unsigned char
        // Terminal 15 ON: 0 = OFF, 1 = ON / Klemme 15 EIN : 0 = AUS, 1 = EIN

    #define I3_RES_DSC_STAT_MOTOR_LAEUFT_EIN                         (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_MOTOR_LAEUFT_EIN_UNIT                    '0-n'
    #define I3_RES_DSC_STAT_MOTOR_LAEUFT_EIN_TYPE                    unsigned char
        // Engine running: 0 = off; 1 = ON / Motor läuft : 0 = Aus ; 1 = EIN

    #define I3_RES_DSC_STAT_FZG_FAEHRT                               (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_FZG_FAEHRT_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_FZG_FAEHRT_TYPE                          unsigned char
        // Signal vehicle is moving: 0 = stationary, 1 = moving / Signal Fahrzeug fährt : 0 = steht , 1 = fährt

    #define I3_RES_DSC_STAT_ERKENNUNG_ALLE_RE                        (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_ERKENNUNG_ALLE_RE_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_ERKENNUNG_ALLE_RE_TYPE                   unsigned char
        // All wheel electronics recognized: 0 = not recognized 1 = recognized / Alle Radelektroniken erkannt : 0 = nicht
        // erkannt 1 = erkannt

    #define I3_RES_DSC_STAT_ERKENNUNG_ZUVIELE_RE                     (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_ERKENNUNG_ZUVIELE_RE_UNIT                '0-n'
    #define I3_RES_DSC_STAT_ERKENNUNG_ZUVIELE_RE_TYPE                unsigned char
        // Too many wheel electronics recognized: 0 = not recognized, 1 = recognized / Zu viele Radelektroniken erkannt :
        // 0 = nicht erkannt , 1 = erkannt

    #define I3_RES_DSC_STAT_STOERSENDER                              (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_STOERSENDER_UNIT                         '0-n'
    #define I3_RES_DSC_STAT_STOERSENDER_TYPE                         unsigned char
        // Radio interference present: 0 = inactive, 1 = active / Funkstoerung vorhanden : 0 = inaktiv , 1 = aktiv

    #define I3_RES_DSC_STAT_FREQUENZ_WERT                            (RXBUF_UINT(23))
    #define I3_RES_DSC_STAT_FREQUENZ_WERT_UNIT                       'MHz'
    #define I3_RES_DSC_STAT_FREQUENZ_WERT_TYPE                       unsigned short
        // Returns the current RF frequency. The frequency depends on the coding. (315 or 433). Specification in MHz /
        // Gibt die aktuelle RF-Frequenz zurück. Die Frequenz ist abhaengig von der Codierung. (315 oder 433). Angabe in
        // MHz

#define I3_PID_DSC_RDC_HS_INAKTIVEREIGNIS                            0xDC96
        // RDC_HS_INAKTIVEREIGNIS / RDC_HS_INAKTIVEREIGNIS

    // Can't yet generate code for STAT_1_DATUM_TEXT of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the inactive event. 99.99.99 => invalid / Datum zum Inaktivereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_1_UHRZEIT_TEXT of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the inactive event. 99.99.99 => invalid / Uhrzeit zum Inaktivereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT                    (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT_UNIT               'km'
    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT_TYPE               long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT                       (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT_UNIT                  'HEX'
    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT_TYPE                  unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_1_INTERNER_FEHLERCODE_WERT               (RXBUF_UINT(26))
    #define I3_RES_DSC_STAT_1_INTERNER_FEHLERCODE_WERT_UNIT          'HEX'
    #define I3_RES_DSC_STAT_1_INTERNER_FEHLERCODE_WERT_TYPE          unsigned short
        // SG internal error code / SG-interner Fehlercode

    #define I3_RES_DSC_STAT_1_ZAEHLER_INAKTIV                        (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_1_ZAEHLER_INAKTIV_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_1_ZAEHLER_INAKTIV_TYPE                   unsigned char
        // Counter for inactive events / Zähler für Inaktiv-Ereignisse

    // Can't yet generate code for STAT_2_DATUM_TEXT of type string[9], at offset 29. But we account for the 9 bytes
        // Date of the inactive event. 99.99.99 => invalid / Datum zum Inaktivereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_2_UHRZEIT_TEXT of type string[9], at offset 38. But we account for the 9 bytes
        // Time of the inactive event. 99.99.99 => invalid / Uhrzeit zum Inaktivereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT                    (RXBUF_SINT32(47))
    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT_UNIT               'km'
    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT_TYPE               long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT                       (RXBUF_UINT32(51))
    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT_UNIT                  'HEX'
    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT_TYPE                  unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_2_INTERNER_FEHLERCODE_WERT               (RXBUF_UINT(55))
    #define I3_RES_DSC_STAT_2_INTERNER_FEHLERCODE_WERT_UNIT          'HEX'
    #define I3_RES_DSC_STAT_2_INTERNER_FEHLERCODE_WERT_TYPE          unsigned short
        // SG internal error code / SG-interner Fehlercode

    #define I3_RES_DSC_STAT_2_ZAEHLER_INAKTIV                        (RXBUF_UCHAR(57))
    #define I3_RES_DSC_STAT_2_ZAEHLER_INAKTIV_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_2_ZAEHLER_INAKTIV_TYPE                   unsigned char
        // Counter for inactive events / Zähler für Inaktiv-Ereignisse

    // Can't yet generate code for STAT_3_DATUM_TEXT of type string[9], at offset 58. But we account for the 9 bytes
        // Date of the inactive event. 99.99.99 => invalid / Datum zum Inaktivereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_3_UHRZEIT_TEXT of type string[9], at offset 67. But we account for the 9 bytes
        // Time of the inactive event. 99.99.99 => invalid / Uhrzeit zum Inaktivereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT                    (RXBUF_SINT32(76))
    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT_UNIT               'km'
    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT_TYPE               long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT                       (RXBUF_UINT32(80))
    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT_UNIT                  'HEX'
    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT_TYPE                  unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_3_INTERNER_FEHLERCODE_WERT               (RXBUF_UINT(84))
    #define I3_RES_DSC_STAT_3_INTERNER_FEHLERCODE_WERT_UNIT          'HEX'
    #define I3_RES_DSC_STAT_3_INTERNER_FEHLERCODE_WERT_TYPE          unsigned short
        // SG internal error code / SG-interner Fehlercode

    #define I3_RES_DSC_STAT_3_ZAEHLER_INAKTIV                        (RXBUF_UCHAR(86))
    #define I3_RES_DSC_STAT_3_ZAEHLER_INAKTIV_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_3_ZAEHLER_INAKTIV_TYPE                   unsigned char
        // Counter for inactive events / Zähler für Inaktiv-Ereignisse

#define I3_PID_DSC_RDC_HS_KALIBRIEREREIGNIS                          0xDC97
        // RDC_HS_KALIBRIEREREIGNIS / RDC_HS_KALIBRIEREREIGNIS

    #define I3_RES_DSC_STAT_1_PLAUSI_DRUCK                           (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_1_PLAUSI_DRUCK_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_1_PLAUSI_DRUCK_TYPE                      unsigned char
        // Filled pressures passed yes or no / Eingefüllte Drücke bestanden ja oder nein

    #define I3_RES_DSC_STAT_1_KALIBRIERUNG                           (RXBUF_UCHAR(1))
    #define I3_RES_DSC_STAT_1_KALIBRIERUNG_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_1_KALIBRIERUNG_TYPE                      unsigned char
        // Status byte about success / failure of calibration / Statusbyte über Erfolg- Misserfolg der Kalibrierung

    // Can't yet generate code for STAT_1_DATUM_TEXT_0XDC97 of type string[9], at offset 2. But we account for the 9 bytes
        // Date of the calibration event. 99.99.99 => invalid / Datum zum Kalibrierereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_1_UHRZEIT_TEXT_0XDC97 of type string[9], at offset 11. But we account for the 9 bytes
        // Time of the calibration event. 99.99.99 => invalid / Uhrzeit zum Kalibrierereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT_0XDC97             (RXBUF_SINT32(20))
    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT_0XDC97_UNIT        'km'
    #define I3_RES_DSC_STAT_1_KILOMETERSTAND_WERT_0XDC97_TYPE        long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT_0XDC97                (RXBUF_UINT32(24))
    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT_0XDC97_UNIT           'HEX'
    #define I3_RES_DSC_STAT_1_SYSTEMFLAGS_WERT_0XDC97_TYPE           unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENTEMPERATUR_WERT          (RXBUF_SCHAR(28))
    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENTEMPERATUR_WERT_UNIT     '°'
    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENTEMPERATUR_WERT_TYPE     char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENDRUCK_WERT               (RXBUF_SINT(29)/1000.0f)
    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENDRUCK_WERT_UNIT          'bar'
    #define I3_RES_DSC_STAT_1_BEFUELL_AUSSENDRUCK_WERT_TYPE          float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_1_RADPOSITION_RE0                        (RXBUF_UCHAR(31))
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE0_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE0_TYPE                   unsigned char
        // Wheel position wheel electronics RE0 / Radposition Radelektronik RE0

    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE0_WERT                  (RXBUF_SINT(32)/1000.0f)
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE0_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE0_WERT_TYPE             float
        // Filling pressure value wheel electronics RE0 (-9,999 bar => invalid) / Befuelldruckwert  Radelektronik RE0
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE0_WERT             (RXBUF_SCHAR(34))
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE0_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE0_WERT_TYPE        char
        // Filling temperature value wheel electronics RE0 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE0
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_1_RADPOSITION_RE1                        (RXBUF_UCHAR(35))
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE1_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE1_TYPE                   unsigned char
        // Wheel position wheel electronics RE1 / Radposition Radelektronik RE1

    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE1_WERT                  (RXBUF_SINT(36)/1000.0f)
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE1_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE1_WERT_TYPE             float
        // Filling pressure value wheel electronics RE1 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE1
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE1_WERT             (RXBUF_SCHAR(38))
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE1_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE1_WERT_TYPE        char
        // Filling temperature value wheel electronics RE1 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE1
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_1_RADPOSITION_RE2                        (RXBUF_UCHAR(39))
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE2_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE2_TYPE                   unsigned char
        // Wheel position wheel electronics RE2 / Radposition Radelektronik RE2

    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE2_WERT                  (RXBUF_SINT(40)/1000.0f)
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE2_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE2_WERT_TYPE             float
        // Filling pressure value wheel electronics RE2 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE2
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE2_WERT             (RXBUF_SCHAR(42))
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE2_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE2_WERT_TYPE        char
        // Filling temperature value wheel electronics RE2 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE2
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_1_RADPOSITION_RE3                        (RXBUF_UCHAR(43))
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE3_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_1_RADPOSITION_RE3_TYPE                   unsigned char
        // Wheel position wheel electronics RE3 / Radposition Radelektronik RE3

    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE3_WERT                  (RXBUF_SINT(44)/1000.0f)
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE3_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_1_BEFUELLDRUCK_RE3_WERT_TYPE             float
        // Filling pressure value wheel electronics RE3 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE3
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE3_WERT             (RXBUF_SCHAR(46))
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE3_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_1_BEFUELLTEMPERATUR_RE3_WERT_TYPE        char
        // Filling temperature value wheel electronics RE3 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE3
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_1_ZAEHLER_KALIBRIERUNG                   (RXBUF_UCHAR(47))
    #define I3_RES_DSC_STAT_1_ZAEHLER_KALIBRIERUNG_UNIT              '0-n'
    #define I3_RES_DSC_STAT_1_ZAEHLER_KALIBRIERUNG_TYPE              unsigned char
        // Calibration event counter / Zähler für Kalibrierereignisse

    #define I3_RES_DSC_STAT_2_PLAUSI_DRUCK                           (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_2_PLAUSI_DRUCK_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_2_PLAUSI_DRUCK_TYPE                      unsigned char
        // Filled pressures passed yes or no / Eingefüllte Drücke bestanden ja oder nein

    #define I3_RES_DSC_STAT_2_KALIBRIERUNG                           (RXBUF_UCHAR(49))
    #define I3_RES_DSC_STAT_2_KALIBRIERUNG_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_2_KALIBRIERUNG_TYPE                      unsigned char
        // Status byte about success / failure of calibration / Statusbyte über Erfolg- Misserfolg der Kalibrierung

    // Can't yet generate code for STAT_2_DATUM_TEXT_0XDC97 of type string[9], at offset 50. But we account for the 9 bytes
        // Date of the calibration event. 99.99.99 => invalid / Datum zum Kalibrierereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_2_UHRZEIT_TEXT_0XDC97 of type string[9], at offset 59. But we account for the 9 bytes
        // Time of the calibration event. 99.99.99 => invalid / Uhrzeit zum Kalibrierereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT_0XDC97             (RXBUF_SINT32(68))
    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT_0XDC97_UNIT        'km'
    #define I3_RES_DSC_STAT_2_KILOMETERSTAND_WERT_0XDC97_TYPE        long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT_0XDC97                (RXBUF_UINT32(72))
    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT_0XDC97_UNIT           'HEX'
    #define I3_RES_DSC_STAT_2_SYSTEMFLAGS_WERT_0XDC97_TYPE           unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENTEMPERATUR_WERT          (RXBUF_SCHAR(76))
    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENTEMPERATUR_WERT_UNIT     '°'
    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENTEMPERATUR_WERT_TYPE     char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENDRUCK_WERT               (RXBUF_SINT(77)/1000.0f)
    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENDRUCK_WERT_UNIT          'bar'
    #define I3_RES_DSC_STAT_2_BEFUELL_AUSSENDRUCK_WERT_TYPE          float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_2_RADPOSITION_RE0                        (RXBUF_UCHAR(79))
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE0_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE0_TYPE                   unsigned char
        // Wheel position wheel electronics RE0 / Radposition Radelektronik RE0

    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE0_WERT                  (RXBUF_SINT(80)/1000.0f)
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE0_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE0_WERT_TYPE             float
        // Filling pressure value wheel electronics RE0 (-9,999 bar => invalid) / Befuelldruckwert  Radelektronik RE0
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE0_WERT             (RXBUF_SCHAR(82))
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE0_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE0_WERT_TYPE        char
        // Filling temperature value wheel electronics RE0 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE0
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_2_RADPOSITION_RE1                        (RXBUF_UCHAR(83))
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE1_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE1_TYPE                   unsigned char
        // Wheel position wheel electronics RE1 / Radposition Radelektronik RE1

    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE1_WERT                  (RXBUF_SINT(84)/1000.0f)
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE1_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE1_WERT_TYPE             float
        // Filling pressure value wheel electronics RE1 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE1
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE1_WERT             (RXBUF_SCHAR(86))
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE1_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE1_WERT_TYPE        char
        // Filling temperature value wheel electronics RE1 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE1
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_2_RADPOSITION_RE2                        (RXBUF_UCHAR(87))
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE2_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE2_TYPE                   unsigned char
        // Wheel position wheel electronics RE2 / Radposition Radelektronik RE2

    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE2_WERT                  (RXBUF_SINT(88)/1000.0f)
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE2_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE2_WERT_TYPE             float
        // Filling pressure value wheel electronics RE2 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE2
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE2_WERT             (RXBUF_SCHAR(90))
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE2_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE2_WERT_TYPE        char
        // Filling temperature value wheel electronics RE2 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE2
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_2_RADPOSITION_RE3                        (RXBUF_UCHAR(91))
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE3_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_2_RADPOSITION_RE3_TYPE                   unsigned char
        // Wheel position wheel electronics RE3 / Radposition Radelektronik RE3

    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE3_WERT                  (RXBUF_SINT(92)/1000.0f)
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE3_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_2_BEFUELLDRUCK_RE3_WERT_TYPE             float
        // Filling pressure value wheel electronics RE3 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE3
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE3_WERT             (RXBUF_SCHAR(94))
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE3_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_2_BEFUELLTEMPERATUR_RE3_WERT_TYPE        char
        // Filling temperature value wheel electronics RE3 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE3
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_2_ZAEHLER_KALIBRIERUNG                   (RXBUF_UCHAR(95))
    #define I3_RES_DSC_STAT_2_ZAEHLER_KALIBRIERUNG_UNIT              '0-n'
    #define I3_RES_DSC_STAT_2_ZAEHLER_KALIBRIERUNG_TYPE              unsigned char
        // Calibration event counter / Zähler für Kalibrierereignisse

    #define I3_RES_DSC_STAT_3_PLAUSI_DRUCK                           (RXBUF_UCHAR(96))
    #define I3_RES_DSC_STAT_3_PLAUSI_DRUCK_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_3_PLAUSI_DRUCK_TYPE                      unsigned char
        // Filled pressures passed yes or no / Eingefüllte Drücke bestanden ja oder nein

    #define I3_RES_DSC_STAT_3_KALIBRIERUNG                           (RXBUF_UCHAR(97))
    #define I3_RES_DSC_STAT_3_KALIBRIERUNG_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_3_KALIBRIERUNG_TYPE                      unsigned char
        // Status byte about success / failure of calibration / Statusbyte über Erfolg- Misserfolg der Kalibrierung

    // Can't yet generate code for STAT_3_DATUM_TEXT_0XDC97 of type string[9], at offset 98. But we account for the 9 bytes
        // Date of the calibration event. 99.99.99 => invalid / Datum zum Kalibrierereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_3_UHRZEIT_TEXT_0XDC97 of type string[9], at offset 107. But we account for the 9 bytes
        // Time of the calibration event. 99.99.99 => invalid / Uhrzeit zum Kalibrierereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT_0XDC97             (RXBUF_SINT32(116))
    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT_0XDC97_UNIT        'km'
    #define I3_RES_DSC_STAT_3_KILOMETERSTAND_WERT_0XDC97_TYPE        long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT_0XDC97                (RXBUF_UINT32(120))
    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT_0XDC97_UNIT           'HEX'
    #define I3_RES_DSC_STAT_3_SYSTEMFLAGS_WERT_0XDC97_TYPE           unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENTEMPERATUR_WERT          (RXBUF_SCHAR(124))
    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENTEMPERATUR_WERT_UNIT     '°'
    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENTEMPERATUR_WERT_TYPE     char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENDRUCK_WERT               (RXBUF_SINT(125)/1000.0f)
    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENDRUCK_WERT_UNIT          'bar'
    #define I3_RES_DSC_STAT_3_BEFUELL_AUSSENDRUCK_WERT_TYPE          float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_3_RADPOSITION_RE0                        (RXBUF_UCHAR(127))
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE0_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE0_TYPE                   unsigned char
        // Wheel position wheel electronics RE0 / Radposition Radelektronik RE0

    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE0_WERT                  (RXBUF_SINT(128)/1000.0f)
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE0_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE0_WERT_TYPE             float
        // Filling pressure value wheel electronics RE0 (-9,999 bar => invalid) / Befuelldruckwert  Radelektronik RE0
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE0_WERT             (RXBUF_SCHAR(130))
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE0_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE0_WERT_TYPE        char
        // Filling temperature value wheel electronics RE0 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE0
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_3_RADPOSITION_RE1                        (RXBUF_UCHAR(131))
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE1_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE1_TYPE                   unsigned char
        // Wheel position wheel electronics RE1 / Radposition Radelektronik RE1

    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE1_WERT                  (RXBUF_SINT(132)/1000.0f)
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE1_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE1_WERT_TYPE             float
        // Filling pressure value wheel electronics RE1 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE1
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE1_WERT             (RXBUF_SCHAR(134))
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE1_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE1_WERT_TYPE        char
        // Filling temperature value wheel electronics RE1 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE1
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_3_RADPOSITION_RE2                        (RXBUF_UCHAR(135))
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE2_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE2_TYPE                   unsigned char
        // Wheel position wheel electronics RE2 / Radposition Radelektronik RE2

    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE2_WERT                  (RXBUF_SINT(136)/1000.0f)
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE2_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE2_WERT_TYPE             float
        // Filling pressure value wheel electronics RE2 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE2
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE2_WERT             (RXBUF_SCHAR(138))
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE2_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE2_WERT_TYPE        char
        // Filling temperature value wheel electronics RE2 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE2
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_3_RADPOSITION_RE3                        (RXBUF_UCHAR(139))
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE3_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_3_RADPOSITION_RE3_TYPE                   unsigned char
        // Wheel position wheel electronics RE3 / Radposition Radelektronik RE3

    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE3_WERT                  (RXBUF_SINT(140)/1000.0f)
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE3_WERT_UNIT             'bar'
    #define I3_RES_DSC_STAT_3_BEFUELLDRUCK_RE3_WERT_TYPE             float
        // Filling pressure value wheel electronics RE3 (-9,999 bar => invalid) / Befuelldruckwert Radelektronik RE3
        // (-9.999 bar => ungueltig)

    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE3_WERT             (RXBUF_SCHAR(142))
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE3_WERT_UNIT        '°C'
    #define I3_RES_DSC_STAT_3_BEFUELLTEMPERATUR_RE3_WERT_TYPE        char
        // Filling temperature value wheel electronics RE3 (-99 ° C => invalid) / Befuelltemperaturwert Radelektronik RE3
        // (-99 °C => ungueltig)

    #define I3_RES_DSC_STAT_3_ZAEHLER_KALIBRIERUNG                   (RXBUF_UCHAR(143))
    #define I3_RES_DSC_STAT_3_ZAEHLER_KALIBRIERUNG_UNIT              '0-n'
    #define I3_RES_DSC_STAT_3_ZAEHLER_KALIBRIERUNG_TYPE              unsigned char
        // Calibration event counter / Zähler für Kalibrierereignisse

#define I3_PID_DSC_RDC_MESSDATENBLOCK_1                              0xDC98
        // RDC_MESSDATENBLOCK_1 / RDC_MESSDATENBLOCK_1

    #define I3_RES_DSC_STAT_RE_IDENTIFIER                            (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_UNIT                       '0-n'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_TYPE                       unsigned long
        // Wheel electronics identifier / Radelektronik Identifier

    #define I3_RES_DSC_STAT_RAD_POSITION_NR                          (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_TYPE                     unsigned char
        // The read out wheel position of the identifier (measuring block) was assigned to the respective position by the
        // SG. Position of the wheel electronics: 0 = front left, 1 = front right, 2 = rear left, 3 = rear right /
        // Ausgelesene Radposition des Identifiers (Messblock) wurde vom SG der jeweiligen Position zugewiesen. Position
        // der Radelektronik: 0 = vorne links,  1 = vorne rechts, 2 = hinten links, 3 = hinten rechts

    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT             (RXBUF_SINT(5)/1000.0f)
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_UNIT        'bar'
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_TYPE        float
        // Last valid tire pressure value returned by the selected wheel / Letzer gültiger Reifendruckwert der vom
        // ausgewählten Rad zurückgeliefert wird

    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT        (RXBUF_SCHAR(7))
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_UNIT   '°C'
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_TYPE   char
        // Last valid tire temperature of the selected wheel / Letzte gültige Reifentemperatur des ausgewählten Rads

    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT                           (RXBUF_SINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_UNIT                      'bar'
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_TYPE                      float
        // Predefined target pressure of the selected wheel / Vorgegebener Solldruck des ausgewählten Rads

    #define I3_RES_DSC_STAT_GUTEMPFAENGE                             (RXBUF_UINT(10))
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_TYPE                        unsigned short
        // Number of correctly received telegrams from the selected bike / Anzahl korrekt empfangener Telegramme vom
        // ausgewählten Rad

    #define I3_RES_DSC_STAT_AUSBEUTE                                 (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_AUSBEUTE_UNIT                            '0-n'
    #define I3_RES_DSC_STAT_AUSBEUTE_TYPE                            unsigned char
        // Telegram yield from the selected bike in percent / Telegrammausbeute vom ausgewählten Rad in Prozent

    #define I3_RES_DSC_STAT_RSSI_PEGEL                               (RXBUF_UINT(13))
    #define I3_RES_DSC_STAT_RSSI_PEGEL_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_RSSI_PEGEL_TYPE                          unsigned short
        // RSSI - level of the ID [unit: AD converter units] / RSSI - Pegel der ID [Einheit: AD Wandler-Einheiten]

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER                          (RXBUF_UINT(15))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_TYPE                     unsigned short
        // Remaining battery life on the wheel sensor in months / Verbleibende Restlebensdauer der Batterie am Radsensor
        // in Monaten

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS                     (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_TYPE                unsigned char
        // Status message from the wheel electronics of the selected wheel. / Status Meldung der Radelektronik des
        // angewählten Rads.

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV                      (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_TYPE                 unsigned char
        // Breakdown warning from the selected bike, 0 = inactive, 1 = active, FF = signal unknown / Pannen Warnung vom
        // angewählten Rad, 0= Inaktiv, 1 = aktiv, FF = Signal unbekannt

    #define I3_RES_DSC_STAT_POS_CHANGED                              (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_POS_CHANGED_UNIT                         '0-n'
    #define I3_RES_DSC_STAT_POS_CHANGED_TYPE                         unsigned char
        // Wheel electronics ID of the selected wheel has changed, 0 = not changed, 1 = changed, FF = signal unknown /
        // Radelektronik ID vom angewählten Rad hat sich geändert, 0 = nicht geändert, 1 = geändert, FF= Signal unbekannt

    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV                        (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_TYPE                   unsigned char
        // Overheating message from the wheel electronics of the selected wheel, 0 = inactive, 1 = active, FF = signal
        // unknown / Überhitzungsmeldung der Radelektronik vom angewählten Rad, 0 = Inaktiv, 1 = aktiv, FF = Signal
        // unbekannt

    #define I3_RES_DSC_STAT_DREHRICHTUNG                             (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_TYPE                        unsigned char
        // Direction of rotation of the wheel 0 = standstill 1 = right 2 = left 3 = unknown 255 = not defined /
        // Drehrichtung des Rades  0=Stillstand 1=rechts 2=links 3=unbekannt 255=nicht definiert

    #define I3_RES_DSC_STAT_FOLGEAUSFALL                             (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_TYPE                        unsigned char
        // Number of time intervals (typically 60s) since the last telegram was received / Anzahl Zeitintervalle (typ.
        // 60s) seit letztem Telegrammempfang

    #define I3_RES_DSC_STAT_RE_HERSTELLER                            (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_RE_HERSTELLER_UNIT                       '0-n'
    #define I3_RES_DSC_STAT_RE_HERSTELLER_TYPE                       unsigned char
        // RE manufacturer / RE-Hersteller

    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE                  (RXBUF_UCHAR(24))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_UNIT             '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_TYPE             unsigned char
        // Transmission mode of the wheel electronics / Sendemode der Radelektronik

    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT                (RXBUF_UINT(25))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_UNIT           'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_TYPE           unsigned short
        // Error code wheel electronics / Fehlercode Radelektronik

    #define I3_RES_DSC_STAT_ROLLSWITCH                               (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_ROLLSWITCH_UNIT                          '0-n'
    #define I3_RES_DSC_STAT_ROLLSWITCH_TYPE                          unsigned char
        // Status Rollswitch / Status Rollswitch

    #define I3_RES_DSC_STAT_TELEGRAMMTYP                             (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_UNIT                        '0-n'
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_TYPE                        unsigned char
        // Telegram type / Telegrammtyp

#define I3_PID_DSC_RDC_MESSDATENBLOCK_2                              0xDC99
        // RDC_MESSDATENBLOCK_2 / RDC_MESSDATENBLOCK_2

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC99                     (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC99_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC99_TYPE                unsigned long
        // Wheel electronics identifier / Radelektronik Identifier

    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC99                   (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC99_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC99_TYPE              unsigned char
        // The read out wheel position of the identifier (measuring block) was assigned to the respective position by the
        // SG. Position of the wheel electronics: 0 = front left, 1 = front right, 2 = rear left, 3 = rear right /
        // Ausgelesene Radposition des Identifiers (Messblock) wurde vom SG der jeweiligen Position zugewiesen. Position
        // der Radelektronik: 0 = vorne links,  1 = vorne rechts, 2 = hinten links, 3 = hinten rechts

    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC99      (RXBUF_SINT(5)/1000.0f)
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC99_UNIT 'bar'
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC99_TYPE float
        // Last valid tire pressure value returned by the selected wheel / Letzer gültiger Reifendruckwert der vom
        // ausgewählten Rad zurückgeliefert wird

    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC99 (RXBUF_SCHAR(7))
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC99_UNIT '°C'
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC99_TYPE char
        // Last valid tire temperature of the selected wheel / Letzte gültige Reifentemperatur des ausgewählten Rads

    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC99                    (RXBUF_SINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC99_UNIT               'bar'
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC99_TYPE               float
        // Predefined target pressure of the selected wheel / Vorgegebener Solldruck des ausgewählten Rads

    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC99                      (RXBUF_UINT(10))
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC99_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC99_TYPE                 unsigned short
        // Number of correctly received telegrams from the selected bike / Anzahl korrekt empfangener Telegramme vom
        // ausgewählten Rad

    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC99                          (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC99_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC99_TYPE                     unsigned char
        // Telegram yield from the selected bike in percent / Telegrammausbeute vom ausgewählten Rad in Prozent

    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC99                        (RXBUF_UINT(13))
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC99_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC99_TYPE                   unsigned short
        // RSSI - level of the ID [unit: AD converter units] / RSSI - Pegel der ID [Einheit: AD Wandler-Einheiten]

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC99                   (RXBUF_UINT(15))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC99_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC99_TYPE              unsigned short
        // Remaining battery life on the wheel sensor in months / Verbleibende Restlebensdauer der Batterie am Radsensor
        // in Monaten

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC99              (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC99_UNIT         '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC99_TYPE         unsigned char
        // Status message from the wheel electronics of the selected wheel. / Status Meldung der Radelektronik des
        // angewählten Rads.

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC99               (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC99_UNIT          '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC99_TYPE          unsigned char
        // Breakdown warning from the selected bike, 0 = inactive, 1 = active, FF = signal unknown / Pannen Warnung vom
        // angewählten Rad, 0= Inaktiv, 1 = aktiv, FF = Signal unbekannt

    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC99                       (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC99_UNIT                  '0-n'
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC99_TYPE                  unsigned char
        // Wheel electronics ID of the selected wheel has changed, 0 = not changed, 1 = changed, FF = signal unknown /
        // Radelektronik ID vom angewählten Rad hat sich geändert, 0 = nicht geändert, 1 = geändert, FF= Signal unbekannt

    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC99                 (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC99_UNIT            '0-n'
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC99_TYPE            unsigned char
        // Overheating message from the wheel electronics of the selected wheel, 0 = inactive, 1 = active, FF = signal
        // unknown / Überhitzungsmeldung der Radelektronik vom angewählten Rad, 0 = Inaktiv, 1 = aktiv, FF = Signal
        // unbekannt

    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC99                      (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC99_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC99_TYPE                 unsigned char
        // Direction of rotation of the wheel 0 = standstill 1 = right 2 = left 3 = unknown 255 = not defined /
        // Drehrichtung des Rades  0=Stillstand 1=rechts 2=links 3=unbekannt 255=nicht definiert

    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC99                      (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC99_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC99_TYPE                 unsigned char
        // Number of time intervals (typically 60s) since the last telegram was received / Anzahl Zeitintervalle (typ.
        // 60s) seit letztem Telegrammempfang

    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC99                     (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC99_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC99_TYPE                unsigned char
        // RE manufacturer / RE-Hersteller

    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC99           (RXBUF_UCHAR(24))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC99_UNIT      '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC99_TYPE      unsigned char
        // Transmission mode of the wheel electronics / Sendemode der Radelektronik

    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC99         (RXBUF_UINT(25))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC99_UNIT    'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC99_TYPE    unsigned short
        // Error code wheel electronics / Fehlercode Radelektronik

    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC99                        (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC99_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC99_TYPE                   unsigned char
        // Status Rollswitch / Status Rollswitch

    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC99                      (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC99_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC99_TYPE                 unsigned char
        // Telegram type / Telegrammtyp

#define I3_PID_DSC_RDC_MESSDATENBLOCK_3                              0xDC9A
        // RDC_MESSDATENBLOCK_3 / RDC_MESSDATENBLOCK_3

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9A                     (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9A_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9A_TYPE                unsigned long
        // Wheel electronics identifier / Radelektronik Identifier

    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9A                   (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9A_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9A_TYPE              unsigned char
        // The read out wheel position of the identifier (measuring block) was assigned to the respective position by the
        // SG. Position of the wheel electronics: 0 = front left, 1 = front right, 2 = rear left, 3 = rear right /
        // Ausgelesene Radposition des Identifiers (Messblock) wurde vom SG der jeweiligen Position zugewiesen. Position
        // der Radelektronik: 0 = vorne links,  1 = vorne rechts, 2 = hinten links, 3 = hinten rechts

    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9A      (RXBUF_SINT(5)/1000.0f)
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9A_UNIT 'bar'
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9A_TYPE float
        // Last valid tire pressure value returned by the selected wheel / Letzer gültiger Reifendruckwert der vom
        // ausgewählten Rad zurückgeliefert wird

    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9A (RXBUF_SCHAR(7))
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9A_UNIT '°C'
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9A_TYPE char
        // Last valid tire temperature of the selected wheel / Letzte gültige Reifentemperatur des ausgewählten Rads

    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9A                    (RXBUF_SINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9A_UNIT               'bar'
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9A_TYPE               float
        // Predefined target pressure of the selected wheel / Vorgegebener Solldruck des ausgewählten Rads

    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9A                      (RXBUF_UINT(10))
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9A_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9A_TYPE                 unsigned short
        // Number of correctly received telegrams from the selected bike / Anzahl korrekt empfangener Telegramme vom
        // ausgewählten Rad

    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9A                          (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9A_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9A_TYPE                     unsigned char
        // Telegram yield from the selected bike in percent / Telegrammausbeute vom ausgewählten Rad in Prozent

    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9A                        (RXBUF_UINT(13))
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9A_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9A_TYPE                   unsigned short
        // RSSI - level of the ID [unit: AD converter units] / RSSI - Pegel der ID [Einheit: AD Wandler-Einheiten]

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9A                   (RXBUF_UINT(15))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9A_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9A_TYPE              unsigned short
        // Remaining battery life on the wheel sensor in months / Verbleibende Restlebensdauer der Batterie am Radsensor
        // in Monaten

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9A              (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9A_UNIT         '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9A_TYPE         unsigned char
        // Status message from the wheel electronics of the selected wheel. / Status Meldung der Radelektronik des
        // angewählten Rads.

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9A               (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9A_UNIT          '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9A_TYPE          unsigned char
        // Breakdown warning from the selected bike, 0 = inactive, 1 = active, FF = signal unknown / Pannen Warnung vom
        // angewählten Rad, 0= Inaktiv, 1 = aktiv, FF = Signal unbekannt

    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9A                       (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9A_UNIT                  '0-n'
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9A_TYPE                  unsigned char
        // Wheel electronics ID of the selected wheel has changed, 0 = not changed, 1 = changed, FF = signal unknown /
        // Radelektronik ID vom angewählten Rad hat sich geändert, 0 = nicht geändert, 1 = geändert, FF= Signal unbekannt

    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9A                 (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9A_UNIT            '0-n'
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9A_TYPE            unsigned char
        // Overheating message from the wheel electronics of the selected wheel, 0 = inactive, 1 = active, FF = signal
        // unknown / Überhitzungsmeldung der Radelektronik vom angewählten Rad, 0 = Inaktiv, 1 = aktiv, FF = Signal
        // unbekannt

    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9A                      (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9A_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9A_TYPE                 unsigned char
        // Direction of rotation of the wheel 0 = standstill 1 = right 2 = left 3 = unknown 255 = not defined /
        // Drehrichtung des Rades  0=Stillstand 1=rechts 2=links 3=unbekannt 255=nicht definiert

    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9A                      (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9A_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9A_TYPE                 unsigned char
        // Number of time intervals (typically 60s) since the last telegram was received / Anzahl Zeitintervalle (typ.
        // 60s) seit letztem Telegrammempfang

    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9A                     (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9A_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9A_TYPE                unsigned char
        // RE manufacturer / RE-Hersteller

    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9A           (RXBUF_UCHAR(24))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9A_UNIT      '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9A_TYPE      unsigned char
        // Transmission mode of the wheel electronics / Sendemode der Radelektronik

    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9A         (RXBUF_UINT(25))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9A_UNIT    'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9A_TYPE    unsigned short
        // Error code wheel electronics / Fehlercode Radelektronik

    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9A                        (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9A_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9A_TYPE                   unsigned char
        // Status Rollswitch / Status Rollswitch

    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9A                      (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9A_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9A_TYPE                 unsigned char
        // Telegram type / Telegrammtyp

#define I3_PID_DSC_RDC_MESSDATENBLOCK_4                              0xDC9B
        // RDC_MESSDATENBLOCK_4 / RDC_MESSDATENBLOCK_4

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9B                     (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9B_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_0XDC9B_TYPE                unsigned long
        // Wheel electronics identifier / Radelektronik Identifier

    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9B                   (RXBUF_UCHAR(4))
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9B_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RAD_POSITION_NR_0XDC9B_TYPE              unsigned char
        // The read out wheel position of the identifier (measuring block) was assigned to the respective position by the
        // SG. Position of the wheel electronics: 0 = front left, 1 = front right, 2 = rear left, 3 = rear right /
        // Ausgelesene Radposition des Identifiers (Messblock) wurde vom SG der jeweiligen Position zugewiesen. Position
        // der Radelektronik: 0 = vorne links,  1 = vorne rechts, 2 = hinten links, 3 = hinten rechts

    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9B      (RXBUF_SINT(5)/1000.0f)
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9B_UNIT 'bar'
    #define I3_RES_DSC_STAT_LETZTER_REIFENDRUCKWERT_WERT_0XDC9B_TYPE float
        // Last valid tire pressure value returned by the selected wheel / Letzer gültiger Reifendruckwert der vom
        // ausgewählten Rad zurückgeliefert wird

    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9B (RXBUF_SCHAR(7))
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9B_UNIT '°C'
    #define I3_RES_DSC_STAT_LETZTER_REIFENTEMPERATURWERT_WERT_0XDC9B_TYPE char
        // Last valid tire temperature of the selected wheel / Letzte gültige Reifentemperatur des ausgewählten Rads

    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9B                    (RXBUF_SINT(8)/1000.0f)
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9B_UNIT               'bar'
    #define I3_RES_DSC_STAT_SOLLDRUCK_WERT_0XDC9B_TYPE               float
        // Predefined target pressure of the selected wheel / Vorgegebener Solldruck des ausgewählten Rads

    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9B                      (RXBUF_UINT(10))
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9B_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_GUTEMPFAENGE_0XDC9B_TYPE                 unsigned short
        // Number of correctly received telegrams from the selected bike / Anzahl korrekt empfangener Telegramme vom
        // ausgewählten Rad

    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9B                          (RXBUF_UCHAR(12))
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9B_UNIT                     '0-n'
    #define I3_RES_DSC_STAT_AUSBEUTE_0XDC9B_TYPE                     unsigned char
        // Telegram yield from the selected bike in percent / Telegrammausbeute vom ausgewählten Rad in Prozent

    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9B                        (RXBUF_UINT(13))
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9B_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_RSSI_PEGEL_0XDC9B_TYPE                   unsigned short
        // RSSI - level of the ID [unit: AD converter units] / RSSI - Pegel der ID [Einheit: AD Wandler-Einheiten]

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9B                   (RXBUF_UINT(15))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9B_UNIT              '0-n'
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_0XDC9B_TYPE              unsigned short
        // Remaining battery life on the wheel sensor in months / Verbleibende Restlebensdauer der Batterie am Radsensor
        // in Monaten

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9B              (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9B_UNIT         '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_0XDC9B_TYPE         unsigned char
        // Status message from the wheel electronics of the selected wheel. / Status Meldung der Radelektronik des
        // angewählten Rads.

    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9B               (RXBUF_UCHAR(18))
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9B_UNIT          '0-n'
    #define I3_RES_DSC_STAT_HARTE_WARNUNG_AKTIV_0XDC9B_TYPE          unsigned char
        // Breakdown warning from the selected bike, 0 = inactive, 1 = active, FF = signal unknown / Pannen Warnung vom
        // angewählten Rad, 0= Inaktiv, 1 = aktiv, FF = Signal unbekannt

    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9B                       (RXBUF_UCHAR(19))
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9B_UNIT                  '0-n'
    #define I3_RES_DSC_STAT_POS_CHANGED_0XDC9B_TYPE                  unsigned char
        // Wheel electronics ID of the selected wheel has changed, 0 = not changed, 1 = changed, FF = signal unknown /
        // Radelektronik ID vom angewählten Rad hat sich geändert, 0 = nicht geändert, 1 = geändert, FF= Signal unbekannt

    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9B                 (RXBUF_UCHAR(20))
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9B_UNIT            '0-n'
    #define I3_RES_DSC_STAT_RE_OVERHEAT_AKTIV_0XDC9B_TYPE            unsigned char
        // Overheating message from the wheel electronics of the selected wheel, 0 = inactive, 1 = active, FF = signal
        // unknown / Überhitzungsmeldung der Radelektronik vom angewählten Rad, 0 = Inaktiv, 1 = aktiv, FF = Signal
        // unbekannt

    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9B                      (RXBUF_UCHAR(21))
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9B_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_DREHRICHTUNG_0XDC9B_TYPE                 unsigned char
        // Direction of rotation of the wheel 0 = standstill 1 = right 2 = left 3 = unknown 255 = not defined /
        // Drehrichtung des Rades  0=Stillstand 1=rechts 2=links 3=unbekannt 255=nicht definiert

    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9B                      (RXBUF_UCHAR(22))
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9B_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_FOLGEAUSFALL_0XDC9B_TYPE                 unsigned char
        // Number of time intervals (typically 60s) since the last telegram was received / Anzahl Zeitintervalle (typ.
        // 60s) seit letztem Telegrammempfang

    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9B                     (RXBUF_UCHAR(23))
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9B_UNIT                '0-n'
    #define I3_RES_DSC_STAT_RE_HERSTELLER_0XDC9B_TYPE                unsigned char
        // RE manufacturer / RE-Hersteller

    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9B           (RXBUF_UCHAR(24))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9B_UNIT      '0-n'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_SENDEMODE_0XDC9B_TYPE      unsigned char
        // Transmission mode of the wheel electronics / Sendemode der Radelektronik

    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9B         (RXBUF_UINT(25))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9B_UNIT    'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_FEHLER_WERT_0XDC9B_TYPE    unsigned short
        // Error code wheel electronics / Fehlercode Radelektronik

    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9B                        (RXBUF_UCHAR(27))
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9B_UNIT                   '0-n'
    #define I3_RES_DSC_STAT_ROLLSWITCH_0XDC9B_TYPE                   unsigned char
        // Status Rollswitch / Status Rollswitch

    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9B                      (RXBUF_UCHAR(28))
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9B_UNIT                 '0-n'
    #define I3_RES_DSC_STAT_TELEGRAMMTYP_0XDC9B_TYPE                 unsigned char
        // Telegram type / Telegrammtyp

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_1                             0xDC9C
        // RDC_HS_WARNEREIGNIS_1 / RDC_HS_WARNEREIGNIS_1

    // Can't yet generate code for STAT_DATUM_TEXT of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT                      (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_UNIT                 'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_TYPE                 long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT                         (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_UNIT                    'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_TYPE                    unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT            (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_UNIT       '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_TYPE       char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT                 (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_UNIT            'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_TYPE            float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT                    (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_UNIT               '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_TYPE               char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT                         (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_UNIT                    'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_TYPE                    float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT      (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD                    (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_TYPE               unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0                           (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_TYPE                      unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT                    (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_UNIT               'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_TYPE               float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT               (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_UNIT          '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_TYPE          char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT                     (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_TYPE                float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT                (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_UNIT           '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_TYPE           char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1                           (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_TYPE                      unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT                    (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_UNIT               'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_TYPE               float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT               (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_UNIT          '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_TYPE          char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT                     (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_TYPE                float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT                (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_UNIT           '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_TYPE           char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2                           (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_TYPE                      unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT                    (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_UNIT               'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_TYPE               float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT               (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_UNIT          '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_TYPE          char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT                     (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_TYPE                float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT                (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_UNIT           '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_TYPE           char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3                           (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_UNIT                      '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_TYPE                      unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT                    (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_UNIT               'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_TYPE               float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT               (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_UNIT          '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_TYPE          char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT                     (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_TYPE                float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT                (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_UNIT           '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_TYPE           char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT                (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_TYPE           unsigned char
        // Warning events counter / Zaehler Warnereignisse

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_2                             0xDC9D
        // RDC_HS_WARNEREIGNIS_2 / RDC_HS_WARNEREIGNIS_2

    // Can't yet generate code for STAT_DATUM_TEXT_0XDC9D of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDC9D of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9D               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9D_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9D_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9D                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9D_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9D_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9D     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9D_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9D_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9D          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9D_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9D_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9D             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9D_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9D_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9D                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9D_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9D_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9D (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9D_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9D_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9D             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9D_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9D_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9D                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9D_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9D_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9D             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9D_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9D_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9D        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9D_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9D_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9D              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9D_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9D_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9D         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9D_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9D_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9D                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9D_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9D_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9D             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9D_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9D_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9D        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9D_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9D_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9D              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9D_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9D_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9D         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9D_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9D_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9D                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9D_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9D_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9D             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9D_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9D_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9D        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9D_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9D_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9D              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9D_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9D_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9D         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9D_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9D_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9D                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9D_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9D_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9D             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9D_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9D_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9D        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9D_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9D_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9D              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9D_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9D_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9D         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9D_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9D_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDC9D         (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDC9D_TYPE    unsigned char
        // Warning events counter / Zaehler Warnereignisse

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_3                             0xDC9E
        // RDC_HS_WARNEREIGNIS_3 / RDC_HS_WARNEREIGNIS_3

    // Can't yet generate code for STAT_DATUM_TEXT_0XDC9E of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDC9E of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9E               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9E_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9E_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9E                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9E_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9E_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9E     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9E_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9E_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9E          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9E_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9E_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9E             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9E_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9E_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9E                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9E_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9E_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9E (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9E_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9E_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9E             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9E_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9E_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9E                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9E_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9E_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9E             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9E_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9E_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9E        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9E_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9E_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9E              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9E_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9E_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9E         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9E_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9E_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9E                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9E_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9E_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9E             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9E_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9E_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9E        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9E_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9E_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9E              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9E_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9E_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9E         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9E_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9E_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9E                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9E_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9E_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9E             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9E_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9E_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9E        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9E_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9E_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9E              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9E_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9E_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9E         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9E_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9E_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9E                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9E_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9E_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9E             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9E_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9E_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9E        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9E_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9E_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9E              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9E_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9E_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9E         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9E_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9E_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDC9E         (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDC9E_TYPE    unsigned char
        // Warning events counter / Zaehler Warnereignisse

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_RUECKNAHME                    0xDC9F
        // RDC_HS_WARNEREIGNIS_RUECKNAHME / RDC_HS_WARNEREIGNIS_RUECKNAHME

    // Can't yet generate code for STAT_DATUM_TEXT_0XDC9F of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDC9F of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9F               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9F_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDC9F_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9F                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9F_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDC9F_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9F     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9F_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDC9F_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9F          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9F_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDC9F_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9F             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9F_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDC9F_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9F                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9F_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDC9F_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9F (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9F_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDC9F_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9F             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9F_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDC9F_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9F                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9F_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDC9F_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9F             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9F_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDC9F_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9F        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9F_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDC9F_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9F              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9F_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDC9F_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9F         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9F_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDC9F_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9F                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9F_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDC9F_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9F             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9F_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDC9F_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9F        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9F_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDC9F_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9F              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9F_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDC9F_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9F         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9F_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDC9F_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9F                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9F_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDC9F_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9F             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9F_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDC9F_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9F        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9F_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDC9F_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9F              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9F_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDC9F_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9F         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9F_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDC9F_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9F                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9F_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDC9F_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9F             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9F_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDC9F_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9F        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9F_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDC9F_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9F              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9F_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDC9F_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9F         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9F_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDC9F_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARN_RUECKNAHME                  (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARN_RUECKNAHME_UNIT             '0-n'
    #define I3_RES_DSC_STAT_ZAEHLER_WARN_RUECKNAHME_TYPE             unsigned char
        // Counter for canceling warnings by refilling air or changing wheels. / Zähler für Warnungsrücknahmen durch
        // Luftnachfüllen oder Radtausch.

// Skipping STEUERN_RADELEKTRONIK_VORGEBEN on 0xDCC0 which takes arguments

// Skipping STEUERN_DIGITAL_RDC on 0xDCC6 which takes arguments

#define I3_PID_DSC_STATUS_RE_LESEN_DRUCKCODIERUNG                    0xDCD9
        // Read out pressure coding / Auslesen Druckcodierung

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE0_WERT                   (RXBUF_UINT32(0))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE0_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE0_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE0 / Identifier Radelektronik RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCD9              (RXBUF_SINT(4)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCD9_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCD9_TYPE         float
        // Tire pressure value wheel electronics RE0 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE0 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE0_WERT                 (RXBUF_SINT(6))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE0_WERT_TYPE            short
        // Remaining service life of wheel electronics RE0 in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE0 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE0_WERT                 (RXBUF_UCHAR(8))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE0_WERT_TYPE            unsigned char
        // Receive counter for wheel electronics RE0 (255 => invalid) / Empfangszaehler Radelektronik RE0 (255 =>
        // ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE1_WERT                   (RXBUF_UINT32(9))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE1_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE1_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE1 / Identifier Radelektronik RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCD9              (RXBUF_SINT(13)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCD9_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCD9_TYPE         float
        // Tire pressure value wheel electronics RE1 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE1 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE1_WERT                 (RXBUF_SINT(15))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE1_WERT_TYPE            short
        // Remaining service life of wheel electronics RE1 in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE1 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE1_WERT                 (RXBUF_UCHAR(17))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE1_WERT_TYPE            unsigned char
        // Receive counter wheel electronics RE1 (255 => invalid) / Empfangszaehler Radelektronik RE1 (255 => ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE2_WERT                   (RXBUF_UINT32(18))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE2_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE2_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE2 / Identifier Radelektronik RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCD9              (RXBUF_SINT(22)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCD9_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCD9_TYPE         float
        // Tire pressure value wheel electronics RE2 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE2 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE2_WERT                 (RXBUF_SINT(24))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE2_WERT_TYPE            short
        // Remaining service life of RE2 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE2 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE2_WERT                 (RXBUF_UCHAR(26))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE2_WERT_TYPE            unsigned char
        // Receive counter wheel electronics RE2 (255 => invalid) / Empfangszaehler Radelektronik RE2 (255 => ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE3_WERT                   (RXBUF_UINT32(27))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE3_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE3_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE3 / Identifier Radelektronik RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCD9              (RXBUF_SINT(31)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCD9_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCD9_TYPE         float
        // Tire pressure value wheel electronics RE3 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE3 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE3_WERT                 (RXBUF_SINT(33))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE3_WERT_TYPE            short
        // Remaining service life of RE3 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE3 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE3_WERT                 (RXBUF_UCHAR(35))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE3_WERT_TYPE            unsigned char
        // Receive counter wheel electronics RE3 (255 => invalid) / Empfangszaehler Radelektronik RE3 (255 => ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE4_WERT                   (RXBUF_UINT32(36))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE4_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE4_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE4 / Identifier Radelektronik RE4

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE4_WERT                     (RXBUF_SINT(40)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE4_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE4_WERT_TYPE                float
        // Tire pressure value wheel electronics RE4 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE4 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE4_WERT                 (RXBUF_SINT(42))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE4_WERT_TYPE            short
        // Remaining service life of RE4 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE4 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE4_WERT                 (RXBUF_UCHAR(44))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE4_WERT_TYPE            unsigned char
        // Receiving counter wheel electronics RE4 (255 => invalid) / Empfangszaehler Radelektronik RE4 (255 =>
        // ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE5_WERT                   (RXBUF_UINT32(45))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE5_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE5_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE5 / Identifier Radelektronik RE5

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE5_WERT                     (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE5_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE5_WERT_TYPE                float
        // Tire pressure value wheel electronics RE5 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE5 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE5_WERT                 (RXBUF_SINT(51))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE5_WERT_TYPE            short
        // Remaining service life of RE5 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE5 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE5_WERT                 (RXBUF_UCHAR(53))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE5_WERT_TYPE            unsigned char
        // Re5 wheel electronics reception counter (255 => invalid) / Empfangszaehler Radelektronik RE5 (255 =>
        // ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE6_WERT                   (RXBUF_UINT32(54))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE6_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE6_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE6 / Identifier Radelektronik RE6

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE6_WERT                     (RXBUF_SINT(58)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE6_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE6_WERT_TYPE                float
        // Tire pressure value wheel electronics RE6 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE6 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE6_WERT                 (RXBUF_SINT(60))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE6_WERT_TYPE            short
        // Remaining service life of RE6 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE6 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE6_WERT                 (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE6_WERT_TYPE            unsigned char
        // Receiving counter wheel electronics RE6 (255 => invalid) / Empfangszaehler Radelektronik RE6 (255 =>
        // ungueltig)

    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE7_WERT                   (RXBUF_UINT32(63))
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE7_WERT_UNIT              'HEX'
    #define I3_RES_DSC_STAT_RE_IDENTIFIER_RE7_WERT_TYPE              unsigned long
        // Identifier wheel electronics RE7 / Identifier Radelektronik RE7

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE7_WERT                     (RXBUF_SINT(67)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE7_WERT_UNIT                'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE7_WERT_TYPE                float
        // Tire pressure value wheel electronics RE7 (-9,999 bar => invalid) / Reifendruckwert Radelektronik RE7 (-9.999
        // bar => ungueltig)

    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE7_WERT                 (RXBUF_SINT(69))
    #define I3_RES_DSC_STAT_RESTLEBENSDAUER_RE7_WERT_TYPE            short
        // Remaining service life of RE7 wheel electronics in months (-999 months => invalid) / Restlebensdauer
        // Radelektronik RE7 in Monaten (-999 Monate => ungueltig)

    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE7_WERT                 (RXBUF_UCHAR(71))
    #define I3_RES_DSC_STAT_EMPFANGSZAEHLER_RE7_WERT_TYPE            unsigned char
        // Re7 wheel electronics reception counter (255 => invalid) / Empfangszaehler Radelektronik RE7 (255 =>
        // ungueltig)

// Skipping STEUERN_SOLLDRUCK_VORGEBEN on 0xDCEE which takes arguments

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_WEICH_1                       0xDCF1
        // RDC_WARNEREIGNIS_WEICH_1 / RDC_WARNEREIGNIS_WEICH_1

    // Can't yet generate code for STAT_DATUM_TEXT_0XDCF1 of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDCF1 of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF1               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF1_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF1_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF1                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF1_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF1_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF1     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF1_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF1_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF1          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF1_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF1_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF1             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF1_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF1_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF1                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF1_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF1_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF1 (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF1_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF1_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF1             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF1_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF1_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF1                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF1_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF1_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF1             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF1_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF1_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF1        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF1_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF1_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF1              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF1_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF1_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF1         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF1_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF1_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF1                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF1_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF1_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF1             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF1_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF1_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF1        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF1_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF1_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF1              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF1_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF1_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF1         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF1_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF1_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF1                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF1_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF1_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF1             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF1_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF1_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF1        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF1_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF1_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF1              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF1_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF1_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF1         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF1_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF1_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF1                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF1_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF1_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF1             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF1_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF1_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF1        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF1_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF1_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF1              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF1_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF1_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF1         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF1_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF1_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF1         (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF1_TYPE    unsigned char
        // Warning events counter / Zaehler Warnereignisse

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_WEICH_2                       0xDCF2
        // RDC_HS_WARNEREIGNIS_WEICH_2 / RDC_HS_WARNEREIGNIS_WEICH_2

    // Can't yet generate code for STAT_DATUM_TEXT_0XDCF2 of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDCF2 of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF2               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF2_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF2_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF2                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF2_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF2_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF2     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF2_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF2_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF2          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF2_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF2_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF2             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF2_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF2_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF2                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF2_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF2_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF2 (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF2_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF2_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF2             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF2_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF2_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF2                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF2_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF2_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF2             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF2_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF2_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF2        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF2_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF2_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF2              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF2_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF2_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF2         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF2_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF2_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF2                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF2_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF2_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF2             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF2_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF2_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF2        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF2_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF2_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF2              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF2_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF2_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF2         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF2_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF2_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF2                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF2_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF2_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF2             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF2_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF2_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF2        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF2_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF2_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF2              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF2_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF2_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF2         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF2_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF2_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF2                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF2_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF2_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF2             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF2_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF2_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF2        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF2_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF2_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF2              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF2_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF2_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF2         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF2_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF2_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF2         (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF2_TYPE    unsigned char
        // Warning events counter / Zaehler Warnereignisse

#define I3_PID_DSC_RDC_HS_WARNEREIGNIS_WEICH_3                       0xDCF3
        // RDC_HS_WARNEREIGNIS_WEICH_3 / RDC_HS_WARNEREIGNIS_WEICH_3

    // Can't yet generate code for STAT_DATUM_TEXT_0XDCF3 of type string[9], at offset 0. But we account for the 9 bytes
        // Date of the warning event. 99.99.99 => invalid / Datum zum Warnereignis. 99.99.99 => ungültig

    // Can't yet generate code for STAT_UHRZEIT_TEXT_0XDCF3 of type string[9], at offset 9. But we account for the 9 bytes
        // Time of the warning event. 99.99.99 => invalid / Uhrzeit zum Warnereignis. 99.99.99 => ungültig

    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF3               (RXBUF_SINT32(18))
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF3_UNIT          'km'
    #define I3_RES_DSC_STAT_KILOMETERSTAND_WERT_0XDCF3_TYPE          long
        // Mileage (-999999 km => invalid) / Kilometerstand (-999999 km => ungueltig)

    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF3                  (RXBUF_UINT32(22))
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF3_UNIT             'HEX'
    #define I3_RES_DSC_STAT_SYSTEMFLAGS_WERT_0XDCF3_TYPE             unsigned long
        // System flags / Systemflags

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF3     (RXBUF_SCHAR(26))
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF3_UNIT '°'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENTEMPERATUR_WERT_0XDCF3_TYPE char
        // Outside temperature when filling / Aussentemperatur beim Befüllen

    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF3          (RXBUF_SINT(27)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF3_UNIT     'bar'
    #define I3_RES_DSC_STAT_BEFUELL_AUSSENDRUCK_WERT_0XDCF3_TYPE     float
        // External pressure when filling / Aussendruck beim Befüllen

    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF3             (RXBUF_SCHAR(29))
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF3_UNIT        '°'
    #define I3_RES_DSC_STAT_AUSSENTEMPERATUR_WERT_0XDCF3_TYPE        char
        // Outside temperature at warning event / Aussentemperatur bei Warnereignis

    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF3                  (RXBUF_SINT(30)/1000.0f)
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF3_UNIT             'bar'
    #define I3_RES_DSC_STAT_AUSSENDRUCK_WERT_0XDCF3_TYPE             float
        // External pressure in the event of a warning / Aussendruck beim Warnereignis

    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF3 (RXBUF_UCHAR(32))
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF3_UNIT 'HEX'
    #define I3_RES_DSC_STAT_RADELEKTRONIK_STATUS_PANNENRAD_WERT_0XDCF3_TYPE unsigned char
        // Wheel electronics status of the wheel causing the breakdown / Radelektronik-Status des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF3             (RXBUF_UCHAR(33))
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF3_UNIT        '0-n'
    #define I3_RES_DSC_STAT_RADPOSITION_PANNENRAD_0XDCF3_TYPE        unsigned char
        // Wheel position of the wheel causing the breakdown / Radposition des Pannenauslösenden Rades

    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF3                    (RXBUF_UCHAR(34))
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF3_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE0_0XDCF3_TYPE               unsigned char
        // Wheel position RE0 / Radposition RE0

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF3             (RXBUF_SINT(35)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF3_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE0_WERT_0XDCF3_TYPE        float
        // Filling pressure value RE0 / Befuelldruckwert RE0

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF3        (RXBUF_SCHAR(37))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF3_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE0_WERT_0XDCF3_TYPE   char
        // Filling temperature value RE0 / Befuelltemperaturwert RE0

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF3              (RXBUF_SINT(38)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF3_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE0_WERT_0XDCF3_TYPE         float
        // Tire pressure RE0 / Reifenddruck RE0

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF3         (RXBUF_SCHAR(40))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF3_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE0_WERT_0XDCF3_TYPE    char
        // Tire temperature RE0 / Reifentemperatur RE0

    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF3                    (RXBUF_UCHAR(41))
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF3_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE1_0XDCF3_TYPE               unsigned char
        // Wheel position RE1 / Radposition RE1

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF3             (RXBUF_SINT(42)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF3_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE1_WERT_0XDCF3_TYPE        float
        // Filling pressure value RE1 / Befuelldruckwert RE1

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF3        (RXBUF_SCHAR(44))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF3_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE1_WERT_0XDCF3_TYPE   char
        // Filling temperature value RE1 / Befuelltemperaturwert RE1

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF3              (RXBUF_SINT(45)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF3_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE1_WERT_0XDCF3_TYPE         float
        // Tire pressure RE1 / Reifenddruck RE1

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF3         (RXBUF_SCHAR(47))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF3_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE1_WERT_0XDCF3_TYPE    char
        // Tire temperature RE1 / Reifentemperatur RE1

    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF3                    (RXBUF_UCHAR(48))
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF3_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE2_0XDCF3_TYPE               unsigned char
        // Wheel position RE2 / Radposition RE2

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF3             (RXBUF_SINT(49)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF3_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE2_WERT_0XDCF3_TYPE        float
        // Filling pressure value RE2 / Befuelldruckwert RE2

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF3        (RXBUF_SCHAR(51))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF3_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE2_WERT_0XDCF3_TYPE   char
        // Filling temperature value RE2 / Befuelltemperaturwert RE2

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF3              (RXBUF_SINT(52)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF3_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE2_WERT_0XDCF3_TYPE         float
        // Tire pressure RE2 / Reifenddruck RE2

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF3         (RXBUF_SCHAR(54))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF3_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE2_WERT_0XDCF3_TYPE    char
        // Tire temperature RE2 / Reifentemperatur RE2

    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF3                    (RXBUF_UCHAR(55))
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF3_UNIT               '0-n'
    #define I3_RES_DSC_STAT_RADPOSITON_RE3_0XDCF3_TYPE               unsigned char
        // Wheel position RE3 / Radposition RE3

    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF3             (RXBUF_SINT(56)/1000.0f)
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF3_UNIT        'bar'
    #define I3_RES_DSC_STAT_BEFUELLDRUCK_RE3_WERT_0XDCF3_TYPE        float
        // Filling pressure value RE3 / Befuelldruckwert RE3

    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF3        (RXBUF_SCHAR(58))
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF3_UNIT   '°C'
    #define I3_RES_DSC_STAT_BEFUELLTEMPERATUR_RE3_WERT_0XDCF3_TYPE   char
        // Filling temperature value RE3 / Befuelltemperaturwert RE3

    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF3              (RXBUF_SINT(59)/1000.0f)
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF3_UNIT         'bar'
    #define I3_RES_DSC_STAT_REIFENDRUCK_RE3_WERT_0XDCF3_TYPE         float
        // Tire pressure RE3 / Reifenddruck RE3

    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF3         (RXBUF_SCHAR(61))
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF3_UNIT    '°'
    #define I3_RES_DSC_STAT_REIFENTEMPERATUR_RE3_WERT_0XDCF3_TYPE    char
        // Tire temperature RE3 / Reifentemperatur RE3

    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF3         (RXBUF_UCHAR(62))
    #define I3_RES_DSC_STAT_ZAEHLER_WARNEREIGNIS_WERT_0XDCF3_TYPE    unsigned char
        // Warning events counter / Zaehler Warnereignisse

// Skipping AUSGANG_LLP on 0xDD0C which takes arguments

#define I3_PID_DSC_STATUS_AUTO_EPB_ZAEHLER                           0xDD1B
        // Indicates how often the roll-away protection was active. / Gibt an, wie oft die Wegrollsicherung aktiv war.

    #define I3_RES_DSC_STAT_AUTO_EPB_ZAEHLER_WERT                    (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_AUTO_EPB_ZAEHLER_WERT_TYPE               unsigned short
        // Indicates how often the roll-away protection was active. / Gibt an, wie oft die Wegrollsicherung aktiv war.

#define I3_PID_DSC_EXTERNE_ANFORDERUNG_EPB_ZAEHLER_LESEN             0xE354
        // Returns the number of EPB activations by external transmission requests / Gibt Anzahl der EPB-Aktivierungen
        // durch externe Getriebe-Anforderungen zurück

    #define I3_RES_DSC_STAT_ZAEHLERSTAND_EPB_AKTIVIERUNG_WERT        (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_ZAEHLERSTAND_EPB_AKTIVIERUNG_WERT_TYPE   unsigned short
        // Returns the number of EPB activations by external transmission requests / Gibt Anzahl der EPB-Aktivierungen
        // durch externe Getriebe-Anforderungen zurück

#define I3_PID_DSC__SW_IDENTIFIKATION                                0x4000
        // 11 bytes software identification / 11 Bytes SW-Identifikation

    // Can't yet generate code for STAT_SW_DATA of type data[11] at offset 0. But we account for the 11 bytes
        // 11 bytes software identification / 11 Bytes SW-Identifikation

#define I3_PID_DSC_FAHRZEUGZUSTAND                                   0x5002
        // Image of the Flexray signal ST_VEH_CON / Abbild des Flexraysignals ST_VEH_CON

    #define I3_RES_DSC_STAT_FAHRZEUGZUSTAND_WERT                     (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_FAHRZEUGZUSTAND_WERT_UNIT                'HEX'
    #define I3_RES_DSC_STAT_FAHRZEUGZUSTAND_WERT_TYPE                unsigned char
        // Image of the Flexray signal ST_VEH_CON / Abbild des Flexraysignals ST_VEH_CON

#define I3_PID_DSC_ANTRIEBSZUSTAND                                   0x5004
        // Image of the Flexray signal ST_DRV_VEH / Abbild des Flexraysignals ST_DRV_VEH

    #define I3_RES_DSC_STAT_ANTRIEBSZUSTAND_WERT                     (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_ANTRIEBSZUSTAND_WERT_UNIT                'HEX'
    #define I3_RES_DSC_STAT_ANTRIEBSZUSTAND_WERT_TYPE                unsigned char
        // Image of the Flexray signal ST_DRV_VEH / Abbild des Flexraysignals ST_DRV_VEH

#define I3_PID_DSC_SPANNUNGSMASTER_VERFUEGBAR                        0x5008
        // Voltage master available (see description of voltage threshold client) and decision logic error cause (bit 0:
        // availability of voltage master; bit 4 = 1: DSC internal error as cause; bit 5 = 1: BBx error or RDCI error as
        // cause; bits 1,2,3,6 , 7 not used) / Spannungsmaster verfügbar (siehe Beschreibung Spannungsschwellenclient)
        // und Entscheidungslogik Fehlerursache (Bit 0: Verfügbarkeit der Spannungsmaster; Bit 4 = 1: DSC interner Fehler
        // als Ursache; Bit 5 = 1: BBx Fehler oder RDCI Fehler als Ursache; Bits 1,2,3,6,7 nicht genutzt) 

    #define I3_RES_DSC_STAT_SPANNUNGSMASTER_VERFUEGBAR_WERT          (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_SPANNUNGSMASTER_VERFUEGBAR_WERT_UNIT     'HEX'
    #define I3_RES_DSC_STAT_SPANNUNGSMASTER_VERFUEGBAR_WERT_TYPE     unsigned char
        // Voltage master available (see description of voltage threshold client) and decision logic error cause (bit 0:
        // availability of voltage master; bit 4 = 1: DSC internal error as cause; bit 5 = 1: BBx error or RDCI error as
        // cause; bits 1,2,3,6 , 7 not used) / Spannungsmaster verfügbar (siehe Beschreibung Spannungsschwellenclient)
        // und Entscheidungslogik Fehlerursache (Bit 0: Verfügbarkeit der Spannungsmaster; Bit 4 = 1: DSC interner Fehler
        // als Ursache; Bit 5 = 1: BBx Fehler oder RDCI Fehler als Ursache; Bits 1,2,3,6,7 nicht genutzt) 

#define I3_PID_DSC_FUNKTIONSZUSTAND                                  0x500B
        // Functional status of the controller: ABS, ASC, FDR, GMV, ECBA, IBrake, start-up assistant, autohold, EMF
        // status, image of the flexray signal ST_BRG_DV, direction of travel / Funktionszustand der Regler: ABS, ASC,
        // FDR, GMV, ECBA, IBrake, Anfahrassistent, Autohold, EMF-Zustand, Abbild des Flexraysignals ST_BRG_DV,
        // Fahrtrichtung

    #define I3_RES_DSC_STAT_FUNKTIONSZUSTAND_WERT                    (RXBUF_UINT(0))
    #define I3_RES_DSC_STAT_FUNKTIONSZUSTAND_WERT_UNIT               'HEX'
    #define I3_RES_DSC_STAT_FUNKTIONSZUSTAND_WERT_TYPE               unsigned short
        // Functional status of the controller: ABS, ASC, FDR, GMV, ECBA, IBrake, start-up assistant, autohold, EMF
        // status, image of the flexray signal ST_BRG_DV, direction of travel / Funktionszustand der Regler: ABS, ASC,
        // FDR, GMV, ECBA, IBrake, Anfahrassistent, Autohold, EMF-Zustand, Abbild des Flexraysignals ST_BRG_DV,
        // Fahrtrichtung

#define I3_PID_DSC_INTERNER_FUNKTIONSZUSTAND                         0x500C
        // ECU internal status / Steuergeräte interner Zustand

    #define I3_RES_DSC_STAT_INTERNER_FUNKTIONSZUSTAND_WERT           (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_INTERNER_FUNKTIONSZUSTAND_WERT_UNIT      'HEX'
    #define I3_RES_DSC_STAT_INTERNER_FUNKTIONSZUSTAND_WERT_TYPE      unsigned char
        // ECU internal status / Steuergeräte interner Zustand

#define I3_PID_DSC_FEHLERSPEICHERSPERRE_AKTIV                        0x500F
        // Image of the Flexray signal ST_ILK_ERRM_FZM (fault memory lock) / Abbild des Flexraysignals  ST_ILK_ERRM_FZM 
        // (Fehlerspeichersperre)

    #define I3_RES_DSC_STAT_FEHLERSPEICHERSPERRE_AKTIV               (RXBUF_UCHAR(0))
    #define I3_RES_DSC_STAT_FEHLERSPEICHERSPERRE_AKTIV_UNIT          '0/1'
    #define I3_RES_DSC_STAT_FEHLERSPEICHERSPERRE_AKTIV_TYPE          unsigned char
        // Image of the Flexray signal ST_ILK_ERRM_FZM (fault memory lock) / Abbild des Flexraysignals  ST_ILK_ERRM_FZM 
        // (Fehlerspeichersperre)

#define I3_PID_DSC_NETZWERK_ROHDATEN                                 0x5010
        // NETWORK_ROHDATEN UWB / NETZWERK_ROHDATEN UWB

    #define I3_RES_DSC_STAT_ROHDATEN_WERT                            (RXBUF_SINT32(0))
    #define I3_RES_DSC_STAT_ROHDATEN_WERT_UNIT                       'HEX'
    #define I3_RES_DSC_STAT_ROHDATEN_WERT_TYPE                       long
        // NETWORK_ROHDATEN UWB / NETZWERK_ROHDATEN UWB
