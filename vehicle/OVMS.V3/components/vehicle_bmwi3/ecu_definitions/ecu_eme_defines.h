
//
// Warning: don't edit - generated by generate_ecu_code.pl processing ../dev/eme_i01.json: EME 1A: Electrical machine electronics
// This generated code  makes it easier to process CANBUS messages from the EME ecu in a BMW i3
//

#define I3_ECU_EME_TX                                                0x06F11A
#define I3_ECU_EME_RX                                                0x061AF1

#define I3_PID_EME_FS_LOESCHEN_PERMANENT                             0x1060
        // Job to delete the permanent DTCs / Job zum Löschen der Permanent-DTCs

#define I3_PID_EME_FEHLERSPEICHER_ENDE_WERKSABLAUF                   0x1061
        // Deletion of individual errors and permanent DTCs prevented / Löschen von Einzelfehlern und Permanent-DTCs
        // unterbindet

    #define I3_RES_EME_STAT_FS_ENDE_WABL                             (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_FS_ENDE_WABL_UNIT                        '0/1'
    #define I3_RES_EME_STAT_FS_ENDE_WABL_TYPE                        unsigned char
        // 0: Locked (deletion of individual errors and PDTCs is prevented) 1: Unlocked (deletion of individual errors
        // and PDTCs is not prevented) / 0: Verriegelt (loeschen von Einzelfehlern und PDTCs wird unterbunden) 1:
        // Entriegelt (loeschen von Einzelfehlern und PDTCs wird nicht unterbunden)

#define I3_PID_EME_AKS_DIAG_STATUS_INFO                              0x4009
        // Query of AE status bits for diagnosis and assignment of AKSs / Abfrage von AE-Statusbits zur Diagnose und
        // Zuordnung von AKSen

    #define I3_RES_EME_STAT_BAM_STATUS_WERT                          (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_BAM_STATUS_WERT_UNIT                     'HEX'
    #define I3_RES_EME_STAT_BAM_STATUS_WERT_TYPE                     unsigned char
        // Status of operating mode manager / Status Betriebsartenmanager

    #define I3_RES_EME_STAT_FRM_ISR_WERT                             (RXBUF_UINT32(1))
    #define I3_RES_EME_STAT_FRM_ISR_WERT_UNIT                        'HEX'
    #define I3_RES_EME_STAT_FRM_ISR_WERT_TYPE                        unsigned long
        // Protection manager: Status of the ISR / Protectionmanager: Status der ISR

    #define I3_RES_EME_STAT_POM_1MS_WERT                             (RXBUF_UINT(5))
    #define I3_RES_EME_STAT_POM_1MS_WERT_UNIT                        'HEX'
    #define I3_RES_EME_STAT_POM_1MS_WERT_TYPE                        unsigned short
        // Protection manager: Status of the 1ms / Protectionmanager: Status der 1ms

    #define I3_RES_EME_STAT_POM_10MS_WERT                            (RXBUF_UINT(7))
    #define I3_RES_EME_STAT_POM_10MS_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_POM_10MS_WERT_TYPE                       unsigned short
        // Protection manager: status of the 10ms / Protectionmanager: Status der 10ms

    #define I3_RES_EME_STAT_ERR_MOT_TRCT_WERT                        (RXBUF_UINT(9))
    #define I3_RES_EME_STAT_ERR_MOT_TRCT_WERT_UNIT                   'HEX'
    #define I3_RES_EME_STAT_ERR_MOT_TRCT_WERT_TYPE                   unsigned short
        // St Error Status word of the e-machine / St Error Statuswort der E-Maschine

    #define I3_RES_EME_STAT_HVSM_MC0_WERT                            (RXBUF_UINT32(11))
    #define I3_RES_EME_STAT_HVSM_MC0_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_HVSM_MC0_WERT_TYPE                       unsigned long
        // HVSM: Status Mc0 / HVSM: Status Mc0

    #define I3_RES_EME_STAT_HVSM_AKKUM_MC0_WERT                      (RXBUF_UINT32(15))
    #define I3_RES_EME_STAT_HVSM_AKKUM_MC0_WERT_UNIT                 'HEX'
    #define I3_RES_EME_STAT_HVSM_AKKUM_MC0_WERT_TYPE                 unsigned long
        // HVSM: Accum. Status MC0 / HVSM: Akkum. Status MC0

    #define I3_RES_EME_STAT_HVSM_MC2_WERT                            (RXBUF_UINT32(19))
    #define I3_RES_EME_STAT_HVSM_MC2_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_HVSM_MC2_WERT_TYPE                       unsigned long
        // HVSM: Status Mc2 / HVSM: Status Mc2

    #define I3_RES_EME_STAT_HVSM_AKKUM_MC2_WERT                      (RXBUF_UINT32(23))
    #define I3_RES_EME_STAT_HVSM_AKKUM_MC2_WERT_UNIT                 'HEX'
    #define I3_RES_EME_STAT_HVSM_AKKUM_MC2_WERT_TYPE                 unsigned long
        // HVSM: Accum. Status MC2 / HVSM: Akkum. Status MC2

    #define I3_RES_EME_STAT_CPLD_INFO_WERT                           (RXBUF_UCHAR(27))
    #define I3_RES_EME_STAT_CPLD_INFO_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_CPLD_INFO_WERT_TYPE                      unsigned char
        // CPLD: info / CPLD: Info

    #define I3_RES_EME_STAT_FUSI_MC2_WERT                            (RXBUF_UINT32(28))
    #define I3_RES_EME_STAT_FUSI_MC2_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_FUSI_MC2_WERT_TYPE                       unsigned long
        // FUSI: UWB MC2 / FUSI: UWB MC2

    #define I3_RES_EME_STAT_FUSI_MC0_WERT                            (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_FUSI_MC0_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_FUSI_MC0_WERT_TYPE                       unsigned long
        // FUSI: UWB MC0 / FUSI: UWB MC0

    #define I3_RES_EME_STAT_SSD_MC0_WERT                             (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_SSD_MC0_WERT_UNIT                        'HEX'
    #define I3_RES_EME_STAT_SSD_MC0_WERT_TYPE                        unsigned long
        // SSD: status / SSD: Status

    #define I3_RES_EME_STAT_ERR_UPDATE_IN_PROGRESS_WERT              (RXBUF_UCHAR(40))
    #define I3_RES_EME_STAT_ERR_UPDATE_IN_PROGRESS_WERT_UNIT         'HEX'
    #define I3_RES_EME_STAT_ERR_UPDATE_IN_PROGRESS_WERT_TYPE         unsigned char
        // Runtime: Update-In-Progress Error / Laufzeit: Update-In-Progress Fehler

    #define I3_RES_EME_STAT_FRM_WHY_WERT                             (RXBUF_UINT32(41))
    #define I3_RES_EME_STAT_FRM_WHY_WERT_UNIT                        'HEX'
    #define I3_RES_EME_STAT_FRM_WHY_WERT_TYPE                        unsigned long
        // FRM: Why word Attention: Value can only be interpreted in connection with the associated software version! /
        // FRM: Why-Wort Achtung: Wert kann nur m Zusammenhang mit dem zugehörigen Softwarestand interpretiert werden!

    #define I3_RES_EME_STAT_FRM_EM2_WERT                             (RXBUF_UINT32(45))
    #define I3_RES_EME_STAT_FRM_EM2_WERT_UNIT                        'HEX'
    #define I3_RES_EME_STAT_FRM_EM2_WERT_TYPE                        unsigned long
        // FRM: status bits / FRM: Statusbits

// Skipping AE_SN_SETZEN on 0x400C which takes arguments

// Skipping AE_HWCAL_SETZEN on 0x400D which takes arguments

// Skipping AE_HWCAL_FLASHEN on 0x400E which takes arguments

// Skipping AE_HWCAL_MODE on 0x400F which takes arguments

// Skipping STEUERN_START_LADEN on 0xADC0 which takes arguments

// Skipping STEUERN_STOP_LADEN on 0xADC1 which takes arguments

// Skipping REX_ON_OFF on 0xADC4 which takes arguments

// Skipping LAST_HISTOGRAMM_EMASCHINE on 0xADEB which takes arguments

// Skipping EME_DCDC_WANDLER on 0xADF1 which takes arguments

// Skipping EME_HV_SYSTEM_ON_OFF on 0xADF2 which takes arguments

// Skipping EME_AKS_EMK on 0xADF4 which takes arguments

// Skipping AE_ROTORLAGESENSOR_ANLERNEN on 0xADF6 which takes arguments

// Skipping AE_KLASSIERUNG on 0xADF8 which takes arguments

// Skipping AE_DCDC_HISTOGRAMM on 0xADF9 which takes arguments

// Skipping LADEHISTORIE_SATZ_LESEN on 0xADFC which takes arguments

// Skipping KLASSIERUNG_ZUG_SCHUB on 0xADFE which takes arguments

// Skipping LADEGERAET_HISTOGRAMM_LESEN on 0xAF42 which takes arguments

#define I3_PID_EME_EME_DCDC_LV                                       0xDDF6
        // Voltage / current DCDC (12V vehicle electrical system) at the B + bolt / Spannung / Strom DCDC (12V Bordnetz)
        // am B+ Bolzen

    #define I3_RES_EME_STAT_SPANNUNG_DCDC_LV_WERT                    (RXBUF_UINT(0)*0.01f)
    #define I3_RES_EME_STAT_SPANNUNG_DCDC_LV_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_DCDC_LV_WERT_TYPE               float
        // DCDC converter: ACTUAL voltage LV side at B + bolt / DCDC Wandler: IST-Spannung LV-Seite am B+ Bolzen

    #define I3_RES_EME_STAT_STROM_DCDC_LV_WERT                       (RXBUF_SINT(2)*0.1f)
    #define I3_RES_EME_STAT_STROM_DCDC_LV_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_STROM_DCDC_LV_WERT_TYPE                  float
        // DCDC converter: ACTUAL current LV side at the B + bolt / DCDC Wandler: IST-Strom LV-Seite am B+ Bolzen

#define I3_PID_EME_EME_HVPM_DCDC_ANSTEUERUNG                         0xDE00
        // Return values from the HVPM for DCDC control / Rückgabewerte vom HVPM für DCDC Ansteuerung

    #define I3_RES_EME_STAT_SOC_HVB_WERT                             (RXBUF_UINT(0)*0.1f)
    #define I3_RES_EME_STAT_SOC_HVB_WERT_UNIT                        '%'
    #define I3_RES_EME_STAT_SOC_HVB_WERT_TYPE                        float
        // HV battery charge level / Ladezustand HV Batterie

    #define I3_RES_EME_STAT_SOC_HVB_MIN_WERT                         (RXBUF_UCHAR(2)*0.5f)
    #define I3_RES_EME_STAT_SOC_HVB_MIN_WERT_UNIT                    '%'
    #define I3_RES_EME_STAT_SOC_HVB_MIN_WERT_TYPE                    float
        // Startability limit, state of charge HV battery / Startfähigkeitsgrenze Ladezustand HV Batterie

    #define I3_RES_EME_STAT_LADEGERAET                               (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_LADEGERAET_UNIT                          '0/1'
    #define I3_RES_EME_STAT_LADEGERAET_TYPE                          unsigned char
        // Charger recognized (1 = recognized / 0 = not recognized) / Ladegerät erkannt (1 = erkannt / 0 = nicht erkannt)

    #define I3_RES_EME_STAT_FREMDLADUNG                              (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_FREMDLADUNG_UNIT                         '0/1'
    #define I3_RES_EME_STAT_FREMDLADUNG_TYPE                         unsigned char
        // External charge (1 = recognized / 0 = not recognized) / Fremdladung (1 = erkannt / 0 = nicht erkannt)

    #define I3_RES_EME_STAT_FAHRB                                    (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_FAHRB_UNIT                               '0/1'
    #define I3_RES_EME_STAT_FAHRB_TYPE                               unsigned char
        // Ready to drive (1 = active / 0 = not active) / Fahrbereitschaft (1 = aktiv / 0 = nicht aktiv)

    #define I3_RES_EME_STAT_BA_DCDC_KOMM_NR                          (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_BA_DCDC_KOMM_NR_UNIT                     '0-n'
    #define I3_RES_EME_STAT_BA_DCDC_KOMM_NR_TYPE                     unsigned char
        // Commanded DC / DC converter operating mode / Kommandierte Betriebsart DC/DC Wandler

    #define I3_RES_EME_STAT_I_DCDC_HV_OUT_WERT                       (RXBUF_SINT(7)*0.1f)
    #define I3_RES_EME_STAT_I_DCDC_HV_OUT_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_I_DCDC_HV_OUT_WERT_TYPE                  float
        // Current limit HV side / Stromgrenze HV-Seite

    #define I3_RES_EME_STAT_U_DCDC_HV_OUT_WERT                       (RXBUF_UINT(9)*0.1f)
    #define I3_RES_EME_STAT_U_DCDC_HV_OUT_WERT_UNIT                  'V'
    #define I3_RES_EME_STAT_U_DCDC_HV_OUT_WERT_TYPE                  float
        // Voltage limit HV side / Spannungsgrenze HV-Seite

    #define I3_RES_EME_STAT_I_DCDC_LV_OUT_WERT                       (RXBUF_SINT(11)*0.1f)
    #define I3_RES_EME_STAT_I_DCDC_LV_OUT_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_I_DCDC_LV_OUT_WERT_TYPE                  float
        // Current limit NV side / Stromgrenze NV-Seite

    #define I3_RES_EME_STAT_U_DCDC_LV_OUT_WERT                       (RXBUF_UINT(13)*0.01f)
    #define I3_RES_EME_STAT_U_DCDC_LV_OUT_WERT_UNIT                  'V'
    #define I3_RES_EME_STAT_U_DCDC_LV_OUT_WERT_TYPE                  float
        // Voltage limit NV side / Spannungsgrenze NV-Seite

    #define I3_RES_EME_STAT_BA_DCDC_IST_NR                           (RXBUF_UCHAR(15))
    #define I3_RES_EME_STAT_BA_DCDC_IST_NR_UNIT                      '0-n'
    #define I3_RES_EME_STAT_BA_DCDC_IST_NR_TYPE                      unsigned char
        // ACTUAL operating mode DCDC converter / IST-Betriebsart DCDC-Wandler

    #define I3_RES_EME_STAT_ALS_DCDC_WERT                            (RXBUF_UCHAR(16)*0.5f)
    #define I3_RES_EME_STAT_ALS_DCDC_WERT_UNIT                       '%'
    #define I3_RES_EME_STAT_ALS_DCDC_WERT_TYPE                       float
        // DC / DC converter utilization / Auslastung DC/DC-Wandler

    #define I3_RES_EME_STAT_I_DCDC_HV_WERT                           (RXBUF_SINT(17)*0.1f)
    #define I3_RES_EME_STAT_I_DCDC_HV_WERT_UNIT                      'A'
    #define I3_RES_EME_STAT_I_DCDC_HV_WERT_TYPE                      float
        // Current HV side / Strom HV-Seite

    #define I3_RES_EME_STAT_U_DCDC_HV_WERT                           (RXBUF_UINT(19)*0.1f)
    #define I3_RES_EME_STAT_U_DCDC_HV_WERT_UNIT                      'V'
    #define I3_RES_EME_STAT_U_DCDC_HV_WERT_TYPE                      float
        // Voltage HV side / Spannung HV-Seite

    #define I3_RES_EME_STAT_I_DCDC_LV_WERT                           (RXBUF_SINT(21)*0.1f)
    #define I3_RES_EME_STAT_I_DCDC_LV_WERT_UNIT                      'A'
    #define I3_RES_EME_STAT_I_DCDC_LV_WERT_TYPE                      float
        // Electricity NV side / Strom NV-Seite

    #define I3_RES_EME_STAT_U_DCDC_LV_WERT                           (RXBUF_UINT(23)*0.01f)
    #define I3_RES_EME_STAT_U_DCDC_LV_WERT_UNIT                      'V'
    #define I3_RES_EME_STAT_U_DCDC_LV_WERT_TYPE                      float
        // Voltage NV side / Spannung NV-Seite

#define I3_PID_EME_EME_HVPM_HV_SYSTEM_ON_OFF                         0xDE02
        // High-voltage system on / off (HVPM 2013) / Hochvoltsystem An / Aus (HVPM 2013)

    #define I3_RES_EME_STAT_U_DC_HV_LE_WERT                          (RXBUF_SINT(0)*0.0313f)
    #define I3_RES_EME_STAT_U_DC_HV_LE_WERT_UNIT                     'V'
    #define I3_RES_EME_STAT_U_DC_HV_LE_WERT_TYPE                     float
        // HV intermediate circuit voltage / HV-Zwischenkreisspannung

    #define I3_RES_EME_STAT_HV_READY                                 (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_HV_READY_UNIT                            '0/1'
    #define I3_RES_EME_STAT_HV_READY_TYPE                            unsigned char
        // Release HV / Freigabe HV

    #define I3_RES_EME_STAT_HDCAC_EREQ                               (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_HDCAC_EREQ_UNIT                          '0/1'
    #define I3_RES_EME_STAT_HDCAC_EREQ_TYPE                          unsigned char
        // Request to close contactors HV battery / Anforderung Schließen Schütze HV-Batterie

    #define I3_RES_EME_STAT_I0ANF_HVB                                (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_I0ANF_HVB_UNIT                           '0-n'
    #define I3_RES_EME_STAT_I0ANF_HVB_TYPE                           unsigned char
        // Status of zero current requirement / Status Nullstromanforderung

    #define I3_RES_EME_STAT_ANF_ENTL_ZK                              (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_ANF_ENTL_ZK_UNIT                         '0/1'
    #define I3_RES_EME_STAT_ANF_ENTL_ZK_TYPE                         unsigned char
        // Requirement for discharge of the HV intermediate circuit through DCDC converter / Anforderung Entladung
        // HV-Zwischenkreis durch DCDC-Wandler

    #define I3_RES_EME_STAT_HVSTART_KOMM                             (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_HVSTART_KOMM_UNIT                        '0-n'
    #define I3_RES_EME_STAT_HVSTART_KOMM_TYPE                        unsigned char
        // Output of the Stateflow status of the HVPM start system / Ausgabe des Stateflow-Status des HVPM Startsystems

    #define I3_RES_EME_STAT_ANF_ENTL_EME                             (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_ANF_ENTL_EME_UNIT                        '0/1'
    #define I3_RES_EME_STAT_ANF_ENTL_EME_TYPE                        unsigned char
        // Emergency discharge request ZK: 0 = not active; 1 = active / Anforderung Notentladung ZK: 0 = nicht aktiv; 1 =
        // aktiv

#define I3_PID_EME_EME_HVPM_ENERGIEBORDNETZ_2                        0xDE04
        // Number of times the vehicle was ready to drive in the SOC area / Anzahl der Herstellung von Fahrbereitschaft
        // im SOC Bereich

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_0_20_WERT               (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_0_20_WERT_TYPE          unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_20_25_WERT              (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_20_25_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_25_30_WERT              (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_25_30_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_30_33_WERT              (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_30_33_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_33_36_WERT              (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_33_36_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_36_39_WERT              (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_36_39_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_39_42_WERT              (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_39_42_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_42_45_WERT              (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_42_45_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_45_48_WERT              (RXBUF_UCHAR(8))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_45_48_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_48_51_WERT              (RXBUF_UCHAR(9))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_48_51_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_51_56_WERT              (RXBUF_UCHAR(10))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_51_56_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_56_65_WERT              (RXBUF_UCHAR(11))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_56_65_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_65_80_WERT              (RXBUF_UCHAR(12))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_65_80_WERT_TYPE         unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_80_100_WERT             (RXBUF_UCHAR(13))
    #define I3_RES_EME_STAT_NV_HVB_SOC_FAHRB_80_100_WERT_TYPE        unsigned char
        // Charge status of the HV battery when ready to drive / Ladezustand HV-Batterie bei Herstellung Fahrbereitschaft

#define I3_PID_EME_EME_HVPM_PKOR                                     0xDE06
        // HVPM performance coordinator / HVPM Leistungskoordinator

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_0_WERT                     (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_0_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_0_WERT_TYPE                unsigned short
        // Heat Up - Time during which the function was requested. / Heat Up - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_1_WERT                     (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_1_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_1_WERT_TYPE                unsigned short
        // Electric heating - time during which the function was requested. / E-Heizen - Zeit, während der Funktion
        // angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_2_WERT                     (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_2_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_2_WERT_TYPE                unsigned short
        // Cool-Down - Time during which the function was requested. / Cool-Down - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_3_WERT                     (RXBUF_UINT(6))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_3_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_3_WERT_TYPE                unsigned short
        // Electric cooling - time during which the function was requested. / E-Kühlen - Zeit, während der Funktion
        // angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_4_WERT                     (RXBUF_UINT(8))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_4_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_4_WERT_TYPE                unsigned short
        // Fogging - time during which the function was requested. / Beschlag - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_5_WERT                     (RXBUF_UINT(10))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_5_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_5_WERT_TYPE                unsigned short
        // Defrost - Time during which the function was requested. / Defrost - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_6_WERT                     (RXBUF_UINT(12))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_6_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_6_WERT_TYPE                unsigned short
        // Battery cooling - time during which the function was requested. / Batterie Kühlung - Zeit, während der
        // Funktion angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_7_WERT                     (RXBUF_UINT(14))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_7_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_7_WERT_TYPE                unsigned short
        // Battery cooling urgent - time during which the function was requested. / Batterie Kühlung dringend - Zeit,
        // während der Funktion angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_8_WERT                     (RXBUF_UINT(16))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_8_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_8_WERT_TYPE                unsigned short
        // Battery heating - time during which the function was requested. / Batterieheizung - Zeit, während der Funktion
        // angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_9_WERT                     (RXBUF_UINT(18))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_9_WERT_UNIT                's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_9_WERT_TYPE                unsigned short
        // DC / DC converter - time during which the function was requested. / DC/DC-Wandler - Zeit, während der Funktion
        // angefordert war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_10_WERT                    (RXBUF_UINT(20))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_10_WERT_UNIT               's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_10_WERT_TYPE               unsigned short
        // Drive 1 - Time during which the function was requested. / Antrieb 1 - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_11_WERT                    (RXBUF_UINT(22))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_11_WERT_UNIT               's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_11_WERT_TYPE               unsigned short
        // Drive 2 - Time during which the function was requested. / Antrieb 2 - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_12_WERT                    (RXBUF_UINT(24))
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_12_WERT_UNIT               's'
    #define I3_RES_EME_STAT_T_P_WUNSCH_ID_12_WERT_TYPE               unsigned short
        // Drive 3 - Time during which the function was requested. / Antrieb 3 - Zeit, während der Funktion angefordert
        // war.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_0_WERT         (RXBUF_UINT(26))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_0_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_0_WERT_TYPE    unsigned short
        // Heat Up - Time during which the function was not fully enabled, SOC area 1. / Heat Up - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_1_WERT         (RXBUF_UINT(28))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_1_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_1_WERT_TYPE    unsigned short
        // Electric heating - time during which the function was not fully enabled, SOC area 1. / E-Heizen - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_2_WERT         (RXBUF_UINT(30))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_2_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_2_WERT_TYPE    unsigned short
        // Cool-Down - Time during which the function was not fully enabled, SOC area 1. / Cool-Down - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_3_WERT         (RXBUF_UINT(32))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_3_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_3_WERT_TYPE    unsigned short
        // Electric cooling - time during which the function was not fully enabled, SOC area 1. / E-Kühlen - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_4_WERT         (RXBUF_UINT(34))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_4_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_4_WERT_TYPE    unsigned short
        // Fogging - time during which the function was not fully enabled, SOC area 1. / Beschlag - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_5_WERT         (RXBUF_UINT(36))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_5_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_5_WERT_TYPE    unsigned short
        // Defrost - time during which the function was not fully enabled, SOC area 1. / Defrost - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_6_WERT         (RXBUF_UINT(38))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_6_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_6_WERT_TYPE    unsigned short
        // Battery cooling - time during which the function was not fully enabled, SOC area 1. / Batterie Kühlung - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_7_WERT         (RXBUF_UINT(40))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_7_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_7_WERT_TYPE    unsigned short
        // Battery cooling urgent - time during which the function was not fully enabled, SOC area 1. / Batterie Kühlung
        // dringend - Zeit, während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_8_WERT         (RXBUF_UINT(42))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_8_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_8_WERT_TYPE    unsigned short
        // Battery heating - time during which the function was not fully enabled, SOC area 1. / Batterieheizung - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_9_WERT         (RXBUF_UINT(44))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_9_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_9_WERT_TYPE    unsigned short
        // DC / DC converter - time during which the function was not fully enabled, SOC area 1. / DC/DC-Wandler - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_10_WERT        (RXBUF_UINT(46))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_10_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_10_WERT_TYPE   unsigned short
        // Drive 1 - Time during which the function was not fully enabled, SOC area 1. / Antrieb 1 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_11_WERT        (RXBUF_UINT(48))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_11_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_11_WERT_TYPE   unsigned short
        // Drive 2 - Time during which the function was not fully enabled, SOC area 1. / Antrieb 2 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_12_WERT        (RXBUF_UINT(50))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_12_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE1_ID_12_WERT_TYPE   unsigned short
        // Drive 3 - Time during which the function was not fully enabled, SOC area 1. / Antrieb 3 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 1.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_0_WERT         (RXBUF_UINT(52))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_0_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_0_WERT_TYPE    unsigned short
        // Heat Up - Time during which the function was not fully enabled, SOC area 2. / Heat Up - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_1_WERT         (RXBUF_UINT(54))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_1_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_1_WERT_TYPE    unsigned short
        // Electric heating - time during which the function was not fully enabled, SOC area 2. / E-Heizen - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_2_WERT         (RXBUF_UINT(56))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_2_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_2_WERT_TYPE    unsigned short
        // Cool-Down - Time during which the function was not fully enabled, SOC area 2. / Cool-Down - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_3_WERT         (RXBUF_UINT(58))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_3_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_3_WERT_TYPE    unsigned short
        // Electric cooling - time during which the function was not fully enabled, SOC area 2. / E-Kühlen - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_4_WERT         (RXBUF_UINT(60))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_4_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_4_WERT_TYPE    unsigned short
        // Fogging - time during which the function was not fully enabled, SOC area 2. / Beschlag - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_5_WERT         (RXBUF_UINT(62))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_5_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_5_WERT_TYPE    unsigned short
        // Defrost - time during which the function was not fully enabled, SOC area 2. / Defrost - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_6_WERT         (RXBUF_UINT(64))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_6_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_6_WERT_TYPE    unsigned short
        // Battery cooling - time during which the function was not fully enabled, SOC area 2. / Batterie Kühlung - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_7_WERT         (RXBUF_UINT(66))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_7_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_7_WERT_TYPE    unsigned short
        // Battery cooling urgent - time during which the function was not fully enabled, SOC area 2. / Batterie Kühlung
        // dringend - Zeit, während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_8_WERT         (RXBUF_UINT(68))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_8_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_8_WERT_TYPE    unsigned short
        // Battery heating - time during which the function was not fully enabled, SOC area 2. / Batterieheizung - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_9_WERT         (RXBUF_UINT(70))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_9_WERT_UNIT    's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_9_WERT_TYPE    unsigned short
        // DC / DC converter - time during which the function was not fully enabled, SOC area 2. / DC/DC-Wandler - Zeit,
        // während der Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_10_WERT        (RXBUF_UINT(72))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_10_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_10_WERT_TYPE   unsigned short
        // Drive 1 - Time during which the function was not fully enabled, SOC area 2. / Antrieb 1 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_11_WERT        (RXBUF_UINT(74))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_11_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_11_WERT_TYPE   unsigned short
        // Drive 2 - Time during which the function was not fully enabled, SOC area 2. / Antrieb 2 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_12_WERT        (RXBUF_UINT(76))
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_12_WERT_UNIT   's'
    #define I3_RES_EME_STAT_T_P_SOLL_WUNSCH_RANGE2_ID_12_WERT_TYPE   unsigned short
        // Drive 3 - Time during which the function was not fully enabled, SOC area 2. / Antrieb 3 - Zeit, während der
        // Funktion nicht vollständig freigegeben war, SOC-Bereich 2.

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_0_WERT          (RXBUF_UINT(78))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_0_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_0_WERT_TYPE     unsigned short
        // Average DCDC power 1st - 3rd minute / Mittlere DCDC-Leistung 1.- 3. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_1_WERT          (RXBUF_UINT(80))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_1_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_1_WERT_TYPE     unsigned short
        // Average DCDC power 4th - 6th minute / Mittlere DCDC-Leistung 4. - 6. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_2_WERT          (RXBUF_UINT(82))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_2_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_2_WERT_TYPE     unsigned short
        // Average DCDC power 7th - 9th minute / Mittlere DCDC-Leistung 7. - 9. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_3_WERT          (RXBUF_UINT(84))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_3_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_3_WERT_TYPE     unsigned short
        // Average DCDC power 10th - 12th minute / Mittlere DCDC-Leistung 10. - 12. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_4_WERT          (RXBUF_UINT(86))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_4_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_4_WERT_TYPE     unsigned short
        // Average DCDC power 13th - 15th minute / Mittlere DCDC-Leistung 13. - 15. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_5_WERT          (RXBUF_UINT(88))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_5_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_5_WERT_TYPE     unsigned short
        // Average DCDC power 16th - 18th minutes / Mittlere DCDC-Leistung 16. - 18. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_6_WERT          (RXBUF_UINT(90))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_6_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_6_WERT_TYPE     unsigned short
        // Average DCDC power 19th - 21st minute / Mittlere DCDC-Leistung 19. - 21. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_7_WERT          (RXBUF_UINT(92))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_7_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_7_WERT_TYPE     unsigned short
        // Average DCDC power 22nd - 24th minute / Mittlere DCDC-Leistung 22. - 24. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_8_WERT          (RXBUF_UINT(94))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_8_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_8_WERT_TYPE     unsigned short
        // Average DCDC power 25th - 27th minute / Mittlere DCDC-Leistung 25. - 27. Minute

    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_9_WERT          (RXBUF_UINT(96))
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_9_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_P_HVPM_DCDC_MITTEL_30MIN_9_WERT_TYPE     unsigned short
        // Average DCDC power 28th - 30th minute / Mittlere DCDC-Leistung 28. - 30. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_0_WERT       (RXBUF_UINT(98))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_0_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_0_WERT_TYPE  unsigned short
        // Average power comfort consumer 1st - 3rd minute / Mittlere Leistung Komfortverbraucher 1. - 3. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_1_WERT       (RXBUF_UINT(100))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_1_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_1_WERT_TYPE  unsigned short
        // Average power comfort consumer 4th - 6th minute / Mittlere Leistung Komfortverbraucher 4. - 6. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_2_WERT       (RXBUF_UINT(102))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_2_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_2_WERT_TYPE  unsigned short
        // Average power comfort consumer 7th - 9th minute / Mittlere Leistung Komfortverbraucher 7. - 9. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_3_WERT       (RXBUF_UINT(104))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_3_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_3_WERT_TYPE  unsigned short
        // Average power comfort consumer 10th - 12th minute / Mittlere Leistung Komfortverbraucher 10. - 12. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_4_WERT       (RXBUF_UINT(106))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_4_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_4_WERT_TYPE  unsigned short
        // Average power comfort consumer 13th - 15th minute / Mittlere Leistung Komfortverbraucher 13. - 15. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_5_WERT       (RXBUF_UINT(108))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_5_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_5_WERT_TYPE  unsigned short
        // Average power comfort consumer 16th - 18th minute / Mittlere Leistung Komfortverbraucher 16. - 18. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_6_WERT       (RXBUF_UINT(110))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_6_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_6_WERT_TYPE  unsigned short
        // Average power comfort consumer 19th - 21st minute / Mittlere Leistung Komfortverbraucher 19. - 21. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_7_WERT       (RXBUF_UINT(112))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_7_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_7_WERT_TYPE  unsigned short
        // Average power comfort consumer 22nd - 24th minute / Mittlere Leistung Komfortverbraucher 22. - 24. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_8_WERT       (RXBUF_UINT(114))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_8_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_8_WERT_TYPE  unsigned short
        // Average power comfort consumer 25th - 27th minute / Mittlere Leistung Komfortverbraucher 25. - 27. Minute

    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_9_WERT       (RXBUF_UINT(116))
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_9_WERT_UNIT  'W'
    #define I3_RES_EME_STAT_P_HVPM_KOMFORT_MITTEL_30MIN_9_WERT_TYPE  unsigned short
        // Average power comfort consumer 28th - 30th minute / Mittlere Leistung Komfortverbraucher 28. - 30. Minute

// Skipping EME_HVPM_INFOSPEICHER_PKOR_LOESCHEN on 0xDE08 which takes arguments

// Skipping EME_HVPM_INFOSPEICHER_STRZLR_LOESCHEN on 0xDE09 which takes arguments

// Skipping EME_HVPM_INFOSPEICHER_SPMON_LOESCHEN on 0xDE0A which takes arguments

#define I3_PID_EME_EME_HVIL_GESAMT                                   0xDE0C
        // Reading out the HVIL status in the EME; if HVIL is interrupted, then not ok / Auslesen des HVIL-Zustandes in
        // der EME; falls HVIL unterbrochen, dann n.i.O.

    #define I3_RES_EME_STAT_HVIL_GESAMT_NR                           (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_HVIL_GESAMT_NR_UNIT                      '0-n'
    #define I3_RES_EME_STAT_HVIL_GESAMT_NR_TYPE                      unsigned char
        // Reading out the HVIL status in the EME; if HVIL is interrupted, then not ok / Auslesen des HVIL-Zustandes in
        // der EME; falls HVIL unterbrochen, dann n.i.O.

#define I3_PID_EME_EME_ANSTEUERUNG_ELUP                              0xDE0E
        // Current switching status ELUP (0 - off; 1 - on) / Aktueller Schaltzustand ELUP (0 - Aus; 1 - Ein)

    #define I3_RES_EME_STAT_ANST_ELUP_ON                             (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_ANST_ELUP_ON_UNIT                        '0/1'
    #define I3_RES_EME_STAT_ANST_ELUP_ON_TYPE                        unsigned char
        // Current switching status ELUP (0 - off; 1 - on) / Aktueller Schaltzustand ELUP (0 - Aus; 1 - Ein)

// Skipping EME_ELUP on 0xDE19 which takes arguments

#define I3_PID_EME_EME_HVPM_DCDC_ALS                                 0xDE1C
        // HVPM DCDC ALS / HVPM DCDC ALS

    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_NULL_WERT       (RXBUF_UINT32(0)*0.1f)
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_NULL_WERT_UNIT  's'
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_NULL_WERT_TYPE  float
        // Time average DCDC current in buck mode on the LV side in range 0 / Zeit durchschnittlicher DCDC Strom im
        // Buckmode LV-seitig in Bereich 0

    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_1_WERT          (RXBUF_UINT32(4)*0.1f)
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_1_WERT_UNIT     's'
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_1_WERT_TYPE     float
        // Time average DCDC current in buck mode on the LV side in area 1 / Zeit durchschnittlicher DCDC Strom im
        // Buckmode LV-seitig in Bereich 1

    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_2_WERT          (RXBUF_UINT32(8)*0.1f)
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_2_WERT_UNIT     's'
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_2_WERT_TYPE     float
        // Time average DCDC current in buck mode on the LV side in area 2 / Zeit durchschnittlicher DCDC Strom im
        // Buckmode LV-seitig in Bereich 2

    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_3_WERT          (RXBUF_UINT32(12)*0.1f)
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_3_WERT_UNIT     's'
    #define I3_RES_EME_STAT_NV_DCDC_ALS_HIST_BEREICH_3_WERT_TYPE     float
        // Time average DCDC current in buck mode on the LV side in area 3 / Zeit durchschnittlicher DCDC Strom im
        // Buckmode LV-seitig in Bereich 3

#define I3_PID_EME_AE_CPLD_VERSION                                   0xDE2D
        // CPLD version / CPLD-Version

    #define I3_RES_EME_STAT_CPLD_VERSION_WERT                        (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_CPLD_VERSION_WERT_TYPE                   unsigned char
        // CPLD version / CPLD-Version

#define I3_PID_EME_AE_SYSTEMLEISTUNG_INV_EM                          0xDE39
        // Evaluation of the system performance of the INV & EM network. / Bewertung der Systemleistung des Verbundes
        // INV&EM.

    // BF_STAT_ST_ERR_MOT_TRCT is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Error status EM / Fehler Status EM
            // STAT_ST_ERR_MOT_TRCT_BIT0: Mask: 0x0001 - Error-related AKS
            // STAT_ST_ERR_MOT_TRCT_BIT1: Mask: 0x0002 - Error-related freewheel
            // STAT_ST_ERR_MOT_TRCT_BIT2: Mask: 0x0004 - Limited torque (0% - 25% or 50% Md_max)
            // STAT_ST_ERR_MOT_TRCT_BIT3: Mask: 0x0008 - Limited torque (25% Md_max)
            // STAT_ST_ERR_MOT_TRCT_BIT4: Mask: 0x0010 - Limited torque (50% Md_max)
            // STAT_ST_ERR_MOT_TRCT_BIT5: Mask: 0x0020 - Torque deviation EM
            // STAT_ST_ERR_MOT_TRCT_BIT6: Mask: 0x0040 - Temperature error EM
            // STAT_ST_ERR_MOT_TRCT_BIT7: Mask: 0x0080 - Interlock / crash clamp / emergency stop
            // STAT_ST_ERR_MOT_TRCT_BIT8: Mask: 0x0100 - AC power error
            // STAT_ST_ERR_MOT_TRCT_BIT9: Mask: 0x0200 - Resolver failure
            // STAT_ST_ERR_MOT_TRCT_BIT10: Mask: 0x0400 - CAN signal failure
            // STAT_ST_ERR_MOT_TRCT_BIT11: Mask: 0x0800 - Loss of signal for internal measured variables
            // STAT_ST_ERR_MOT_TRCT_BIT12: Mask: 0x1000 - EWS error
            // STAT_ST_ERR_MOT_TRCT_BIT13: Mask: 0x2000 - Hardware-related error LE
            // STAT_ST_ERR_MOT_TRCT_BIT14: Mask: 0x4000 - Temperature error LE
    #define I3_RES_EME_BF_STAT_ST_ERR_MOT_TRCT                       (RXBUF_UINT(0))
    #define I3_RES_EME_BF_STAT_ST_ERR_MOT_TRCT_UNIT                  'Bit'
    #define I3_RES_EME_BF_STAT_ST_ERR_MOT_TRCT_TYPE                  unsigned short
        // Error status EM / Fehler Status EM

    #define I3_RES_EME_STAT_AVL_TEMP_MOT_TRCT_WERT                   (RXBUF_UCHAR(2)-48.0)
    #define I3_RES_EME_STAT_AVL_TEMP_MOT_TRCT_WERT_UNIT              '°C'
    #define I3_RES_EME_STAT_AVL_TEMP_MOT_TRCT_WERT_TYPE              unsigned char
        // NTC temperature EM calculated / NTC Temperatur EM gerechnet

    #define I3_RES_EME_STAT_T_EM2TMODROT_WERT                        (RXBUF_SINT(3))
    #define I3_RES_EME_STAT_T_EM2TMODROT_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_T_EM2TMODROT_WERT_TYPE                   short
        // Rotor temperature calculated / Rotor Temperatur gerechnet

    #define I3_RES_EME_STAT_AVL_COL_TEMP_ENGMG_EL_WERT               (RXBUF_UCHAR(5)-48.0)
    #define I3_RES_EME_STAT_AVL_COL_TEMP_ENGMG_EL_WERT_UNIT          '°C'
    #define I3_RES_EME_STAT_AVL_COL_TEMP_ENGMG_EL_WERT_TYPE          unsigned char
        // Coolant temperature input calculated / Kühlmittel Temperatur Eingang gerechnet

    #define I3_RES_EME_STAT_TMOD_V_T_LE2_COOLANT_EXIT_EST_WERT       (RXBUF_SCHAR(6))
    #define I3_RES_EME_STAT_TMOD_V_T_LE2_COOLANT_EXIT_EST_WERT_UNIT  '°C'
    #define I3_RES_EME_STAT_TMOD_V_T_LE2_COOLANT_EXIT_EST_WERT_TYPE  char
        // Coolant temperature output calculated / Kühlmittel Temperatur Ausgang gerechnet

    #define I3_RES_EME_STAT_AVL_TEMP_INVE_IGBT_MAX_WERT              (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_AVL_TEMP_INVE_IGBT_MAX_WERT_UNIT         '°C'
    #define I3_RES_EME_STAT_AVL_TEMP_INVE_IGBT_MAX_WERT_TYPE         unsigned char
        // Temperature diode / Temperatur Diode

    // BF_STAT_ST_INFO_DER_MOT_TRCT is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Information status EM / Informationen Status EM
            // STAT_ST_INFO_DER_MOT_TRCT_BIT0: Mask: 0x0001 - Derating torque due to HV-DC voltage limit (motor operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT1: Mask: 0x0002 - Derating torque due to HV-DC voltage limit (generator operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT2: Mask: 0x0004 - Derating torque due to speed (motorized operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT3: Mask: 0x0008 - Derating torque due to speed (generator operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT4: Mask: 0x0010 - Derating torque due to HV-DC current limit (motor operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT5: Mask: 0x0020 - Derating torque due to HV-DC current limit (generator operation)
            // STAT_ST_INFO_DER_MOT_TRCT_BIT6: Mask: 0x0040 - Derating torque due to temperature EM
            // STAT_ST_INFO_DER_MOT_TRCT_BIT7: Mask: 0x0080 - Info: Motor AC current limit reached
            // STAT_ST_INFO_DER_MOT_TRCT_BIT8: Mask: 0x0100 - Info: Regenerative AC current limit reached
            // STAT_ST_INFO_DER_MOT_TRCT_BIT9: Mask: 0x0200 - Info: Resolver offset not taught
            // STAT_ST_INFO_DER_MOT_TRCT_BIT10: Mask: 0x0400 - Info: Field control active
            // STAT_ST_INFO_DER_MOT_TRCT_BIT11: Mask: 0x0800 - Info: Critical temperature at the end of the coil
            // STAT_ST_INFO_DER_MOT_TRCT_BIT12: Mask: 0x1000 - Info: Critical temperature rotor
            // STAT_ST_INFO_DER_MOT_TRCT_BIT13: Mask: 0x2000 - reserved
            // STAT_ST_INFO_DER_MOT_TRCT_BIT14: Mask: 0x4000 - reserved
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_MOT_TRCT                  (RXBUF_UINT(8))
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_MOT_TRCT_UNIT             'Bit'
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_MOT_TRCT_TYPE             unsigned short
        // Information status EM / Informationen Status EM

    // BF_STAT_ST_INFO_DER_INVE_TRCT is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Information status inverter / Informationen Status Inverter
            // STAT_ST_INFO_DER_INVE_TRCT_BIT0: Mask: 0x0001 - Derating due to overtemperature IGBT / diode
            // STAT_ST_INFO_DER_INVE_TRCT_BIT1: Mask: 0x0002 - Derating due to temperature spread between NTC and IGBT / diode
            // STAT_ST_INFO_DER_INVE_TRCT_BIT2: Mask: 0x0004 - Derating due to overtemperature NTC
            // STAT_ST_INFO_DER_INVE_TRCT_BIT3: Mask: 0x0008 - Derating due to overtemperature coolant
            // STAT_ST_INFO_DER_INVE_TRCT_BIT4: Mask: 0x0010 - Derating due to switching overvoltage due to U_DC level
            // STAT_ST_INFO_DER_INVE_TRCT_BIT5: Mask: 0x0020 - Derating due to speed range
            // STAT_ST_INFO_DER_INVE_TRCT_BIT6: Mask: 0x0040 - Derating due to insufficient coolant flow
            // STAT_ST_INFO_DER_INVE_TRCT_BIT7: Mask: 0x0080 - Derating due to excessive gate driver temperature
            // STAT_ST_INFO_DER_INVE_TRCT_BIT8: Mask: 0x0100 - Info: Short circuit UVW Highside
            // STAT_ST_INFO_DER_INVE_TRCT_BIT9: Mask: 0x0200 - Info: Short circuit UVW Lowside
            // STAT_ST_INFO_DER_INVE_TRCT_BIT10: Mask: 0x0400 -  Info: UVW switch open
            // STAT_ST_INFO_DER_INVE_TRCT_BIT11: Mask: 0x0800 - Info: controller active
            // STAT_ST_INFO_DER_INVE_TRCT_BIT12: Mask: 0x1000 - Info: Id controller in anti-windup
            // STAT_ST_INFO_DER_INVE_TRCT_BIT13: Mask: 0x2000 - Info: Iq controller in anti-windup
            // STAT_ST_INFO_DER_INVE_TRCT_BIT14: Mask: 0x4000 - reserved
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_INVE_TRCT                 (RXBUF_UINT(10))
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_INVE_TRCT_UNIT            'Bit'
    #define I3_RES_EME_BF_STAT_ST_INFO_DER_INVE_TRCT_TYPE            unsigned short
        // Information status inverter / Informationen Status Inverter

    // BF_STAT_V_E_EM2POMERROR50US is a BITFIELD of size unsigned long.  We don't yet generate definitions for each bit, we treat as the host data type
        // Status POM / Status POM
            // STAT_V_E_EM2POMERROR50US_BIT0: Mask: 0x00000001 - Violation of max phase current
            // STAT_V_E_EM2POMERROR50US_BIT1: Mask: 0x00000002 - Total current error AC
            // STAT_V_E_EM2POMERROR50US_BIT2: Mask: 0x00000004 - Injury to Max Idc
            // STAT_V_E_EM2POMERROR50US_BIT3: Mask: 0x00000008 - Violation of the positive Id current criterion
            // STAT_V_E_EM2POMERROR50US_BIT4: Mask: 0x00000010 - Error in plausibility check of the resolver angle
            // STAT_V_E_EM2POMERROR50US_BIT5: Mask: 0x00000020 - Angle observer limit violation of angle time error
            // STAT_V_E_EM2POMERROR50US_BIT6: Mask: 0x00000040 - Angle observer, angle error, absolute difference monitoring
    #define I3_RES_EME_BF_STAT_V_E_EM2POMERROR50US                   (RXBUF_UINT32(12))
    #define I3_RES_EME_BF_STAT_V_E_EM2POMERROR50US_UNIT              'Bit'
    #define I3_RES_EME_BF_STAT_V_E_EM2POMERROR50US_TYPE              unsigned long
        // Status POM / Status POM

    // BF_STAT_V_E_FUSILDUWB_MC2_UE2 is a BITFIELD of size unsigned long.  We don't yet generate definitions for each bit, we treat as the host data type
        // FuSi Umweltwort MC2 / FuSi Umweltwort MC2
            // STAT_V_E_FUSILDUWB_MC2_UE2_BIT0: Mask: 0x00000001 - reserved
            // STAT_V_E_FUSILDUWB_MC2_UE2_BIT1: Mask: 0x00000002 - Error target current calculation EM control
            // STAT_V_E_FUSILDUWB_MC2_UE2_BIT2: Mask: 0x00000004 - Current sensor error
            // STAT_V_E_FUSILDUWB_MC2_UE2_BIT3: Mask: 0x00000008 - Group error qualifier
            // STAT_V_E_FUSILDUWB_MC2_UE2_BIT4: Mask: 0x00000010 - Single error qualifier
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB_MC2_UE2                 (RXBUF_UINT32(16))
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB_MC2_UE2_UNIT            'Bit'
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB_MC2_UE2_TYPE            unsigned long
        // FuSi Umweltwort MC2 / FuSi Umweltwort MC2

    // BF_STAT_V_E_FUSILDUWB is a BITFIELD of size unsigned long.  We don't yet generate definitions for each bit, we treat as the host data type
        // FuSi Umweltwort MC0 / FuSi Umweltwort MC0
            // STAT_V_E_FUSILDUWB_BIT0: Mask: 0x00000001 - MGU: Static braking torque limit
            // STAT_V_E_FUSILDUWB_BIT1: Mask: 0x00000002 - MGU: torque direction
            // STAT_V_E_FUSILDUWB_BIT2: Mask: 0x00000004 - MGU: Upper torque limit
            // STAT_V_E_FUSILDUWB_BIT3: Mask: 0x00000008 - MGU: Lower torque limit
            // STAT_V_E_FUSILDUWB_BIT4: Mask: 0x00000010 - MGU: Invalid quadrant
            // STAT_V_E_FUSILDUWB_BIT5: Mask: 0x00000020 - MGU: violation of safe state
            // STAT_V_E_FUSILDUWB_BIT6: Mask: 0x00000040 - PGU: angle error (resolver vs. low-level)
            // STAT_V_E_FUSILDUWB_BIT7: Mask: 0x00000080 - PGU: angle error (low-level signal)
            // STAT_V_E_FUSILDUWB_BIT8: Mask: 0x00000100 - PGU: speed error (resolver vs. MC2)
            // STAT_V_E_FUSILDUWB_BIT9: Mask: 0x00000200 - PGU: speed error (MC2 vs low-level)
            // STAT_V_E_FUSILDUWB_BIT10: Mask: 0x00000400 - PGU: Dynamic speed error
            // STAT_V_E_FUSILDUWB_BIT11: Mask: 0x00000800 - CPL: Current error (current value MC0 vs. MC2)
            // STAT_V_E_FUSILDUWB_BIT12: Mask: 0x00001000 - CPL: Current error (values MC2 nominal vs. current)
            // STAT_V_E_FUSILDUWB_BIT13: Mask: 0x00002000 - MCU: Error reference current calculation (abs.)
            // STAT_V_E_FUSILDUWB_BIT14: Mask: 0x00004000 - MCU: Error reference current calculation (sign)
            // STAT_V_E_FUSILDUWB_BIT15: Mask: 0x00008000 - PMB: Torque limit violation
            // STAT_V_E_FUSILDUWB_BIT16: Mask: 0x00010000 - Collective qualifier
            // STAT_V_E_FUSILDUWB_BIT17: Mask: 0x00020000 - Resolver communication disturbed (DIO)
            // STAT_V_E_FUSILDUWB_BIT18: Mask: 0x00040000 - internal communication disturbed
            // STAT_V_E_FUSILDUWB_BIT19: Mask: 0x00080000 - internal communication disturbed
            // STAT_V_E_FUSILDUWB_BIT20: Mask: 0x00100000 - Communication disturbed (CAN / Flexray)
            // STAT_V_E_FUSILDUWB_BIT21: Mask: 0x00200000 - internal communication disturbed
            // STAT_V_E_FUSILDUWB_BIT22: Mask: 0x00400000 - other communication errors
            // STAT_V_E_FUSILDUWB_BIT23: Mask: 0x00800000 - other communication errors
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB                         (RXBUF_UINT32(20))
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB_UNIT                    'Bit'
    #define I3_RES_EME_BF_STAT_V_E_FUSILDUWB_TYPE                    unsigned long
        // FuSi Umweltwort MC0 / FuSi Umweltwort MC0

    #define I3_RES_EME_STAT_V_E_EMOPMO_IST                           (RXBUF_UCHAR(24))
    #define I3_RES_EME_STAT_V_E_EMOPMO_IST_UNIT                      '0-n'
    #define I3_RES_EME_STAT_V_E_EMOPMO_IST_TYPE                      unsigned char
        // Current operating mode / Aktuelle Betriebsart

    #define I3_RES_EME_STAT_V_E_BAMSTATUS                            (RXBUF_UCHAR(25))
    #define I3_RES_EME_STAT_V_E_BAMSTATUS_UNIT                       '0-n'
    #define I3_RES_EME_STAT_V_E_BAMSTATUS_TYPE                       unsigned char
        // Internal operating mode / Interne Betriebsart

    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_GEN_MAX_WERT            (RXBUF_UINT(26))
    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_GEN_MAX_WERT_UNIT       'Nm'
    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_GEN_MAX_WERT_TYPE       unsigned short
        // Maximum regenerative moment that the LE + EM system could provide for the next second / Maximales
        // generatorisches Moment, welches das System aus LE + EM für die naechste Sekunde stellen koennte

    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_MOT_MAX_WERT            (RXBUF_UINT(28))
    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_MOT_MAX_WERT_UNIT       'Nm'
    #define I3_RES_EME_STAT_V_LIM_TQP_MD_EM2_MOT_MAX_WERT_TYPE       unsigned short
        // Maximum motor moment that the system of LE + EM could provide for the next second / Maximales motorisches
        // Moment, welches das System aus LE + EM für die naechste Sekunde stellen koennte

    #define I3_RES_EME_STAT_V_U_INVEM2_UQ_WERT                       (RXBUF_SINT(30))
    #define I3_RES_EME_STAT_V_U_INVEM2_UQ_WERT_UNIT                  'V'
    #define I3_RES_EME_STAT_V_U_INVEM2_UQ_WERT_TYPE                  short
        // Q voltage / Q Spannung

    #define I3_RES_EME_STAT_V_U_INVEM2_UD_WERT                       (RXBUF_SINT(32))
    #define I3_RES_EME_STAT_V_U_INVEM2_UD_WERT_UNIT                  'V'
    #define I3_RES_EME_STAT_V_U_INVEM2_UD_WERT_TYPE                  short
        // D tension / D Spannung

    #define I3_RES_EME_STAT_V_I_INVEM2_IQ_WERT                       (RXBUF_SINT(34))
    #define I3_RES_EME_STAT_V_I_INVEM2_IQ_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_V_I_INVEM2_IQ_WERT_TYPE                  short
        // Q current / Q Strom

    #define I3_RES_EME_STAT_V_I_INVEM2_ID_WERT                       (RXBUF_SINT(36))
    #define I3_RES_EME_STAT_V_I_INVEM2_ID_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_V_I_INVEM2_ID_WERT_TYPE                  short
        // D current / D Strom

    #define I3_RES_EME_STAT_V_N_RSLV_STATUS                          (RXBUF_UCHAR(38))
    #define I3_RES_EME_STAT_V_N_RSLV_STATUS_UNIT                     '0-n'
    #define I3_RES_EME_STAT_V_N_RSLV_STATUS_TYPE                     unsigned char
        // Status word resolver signal speed / Statuswort Resolver Signal Drehzahl

    #define I3_RES_EME_STAT_V_PHI_RSLV_STATUS                        (RXBUF_UCHAR(39))
    #define I3_RES_EME_STAT_V_PHI_RSLV_STATUS_UNIT                   '0-n'
    #define I3_RES_EME_STAT_V_PHI_RSLV_STATUS_TYPE                   unsigned char
        // Status word resolver signal angle / Satuswort Resolver Signal Winkel

    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_ASD_WERT               (RXBUF_SINT(40)*0.1f)
    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_ASD_WERT_UNIT          'Nm'
    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_ASD_WERT_TYPE          float
        // ADA moment / ADA Moment

    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_WERT                   (RXBUF_UINT(42)*0.5f-1023.5)
    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_WERT_UNIT              'Nm'
    #define I3_RES_EME_STAT_TAR_TORQ_MOT_TRCT_WERT_TYPE              float
        // Torque FuSi / Drehmoment FuSi

    #define I3_RES_EME_STAT_V_N_EMMECHSLOW_UE2_WERT                  (RXBUF_SINT(44))
    #define I3_RES_EME_STAT_V_N_EMMECHSLOW_UE2_WERT_UNIT             '1/min'
    #define I3_RES_EME_STAT_V_N_EMMECHSLOW_UE2_WERT_TYPE             short
        // Speed Fusi / Drehzahl Fusi

    #define I3_RES_EME_STAT_V_E_RLSFUSI_ACVREQ                       (RXBUF_UCHAR(46))
    #define I3_RES_EME_STAT_V_E_RLSFUSI_ACVREQ_UNIT                  '0-n'
    #define I3_RES_EME_STAT_V_E_RLSFUSI_ACVREQ_TYPE                  unsigned char
        // Resolver offset Fusi / Resolveroffset Fusi

    // BF_STAT_V_ST_RLS_FUSI_MC0 is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Status resolverdiag for Fusi / Status Resolverdiag für Fusi
            // STAT_V_ST_RLS_FUSI_MC0_BIT0: Mask: 0x01 - Resolver not OK
    #define I3_RES_EME_BF_STAT_V_ST_RLS_FUSI_MC0                     (RXBUF_UCHAR(47))
    #define I3_RES_EME_BF_STAT_V_ST_RLS_FUSI_MC0_UNIT                'Bit'
    #define I3_RES_EME_BF_STAT_V_ST_RLS_FUSI_MC0_TYPE                unsigned char
        // Status resolverdiag for Fusi / Status Resolverdiag für Fusi

    #define I3_RES_EME_STAT_V_I_INV1_U_RMS_WERT                      (RXBUF_SINT(48))
    #define I3_RES_EME_STAT_V_I_INV1_U_RMS_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_V_I_INV1_U_RMS_WERT_TYPE                 short
        // RMS phase current U / RMS Phasenstrom U

    #define I3_RES_EME_STAT_V_I_INV1_V_RMS_WERT                      (RXBUF_SINT(50))
    #define I3_RES_EME_STAT_V_I_INV1_V_RMS_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_V_I_INV1_V_RMS_WERT_TYPE                 short
        // RMS phase current V / RMS Phasenstrom V

    #define I3_RES_EME_STAT_V_I_INV1_W_RMS_WERT                      (RXBUF_SINT(52))
    #define I3_RES_EME_STAT_V_I_INV1_W_RMS_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_V_I_INV1_W_RMS_WERT_TYPE                 short
        // RMS phase current W / RMS Phasenstrom W

// Skipping EME_HVPM_KONFIGURATION_LADEEINSTELLUNG on 0xDE3E which takes arguments

// Skipping AE_PARKSPERRE_VARIANTE on 0xDE69 which takes arguments

#define I3_PID_EME_AE_LSC_LADEN_2                                    0xDE6E
        // Last State Call Load (Extended) Feedback on the charging process / Last State Call Laden (Erweitert)
        // Rückmeldung zum Ladeverfahren

    #define I3_RES_EME_STAT_LADEMODUS                                (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_LADEMODUS_UNIT                           '0-n'
    #define I3_RES_EME_STAT_LADEMODUS_TYPE                           unsigned char
        // Selection of conductive / inductive / Auswahl Konduktiv / Induktiv

    #define I3_RES_EME_STAT_POSITIONIERUNG                           (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_POSITIONIERUNG_UNIT                      '0-n'
    #define I3_RES_EME_STAT_POSITIONIERUNG_TYPE                      unsigned char
        // Positioning status / Postionierungsstatus

    // BF_LADEUNTERBRECHUNG is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Reason charging interruption / Grund Ladeunterbrechung
            // STAT_LADEUNTERBRECHUNG_2: Mask: 0x0002 - AC_Sspannung_mehlt_oder_Netzverbindungen_instabil 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_3: Mask: 0x0004 - Ueberstrom_AC 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_5: Mask: 0x0010 - Overvoltage_DC 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_4: Mask: 0x0008 - Undervoltage_DC 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_8: Mask: 0x0080 - Communication_interrupted 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_7: Mask: 0x0040 - Living_Object_recognized_LOD 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_1: Mask: 0x0001 - Thermal_overload 0 = not active 1 = active
            // STAT_LADEUNTERBRECHUNG_6: Mask: 0x0020 - Ueberstrom_DC 0 = not active 1 = active
    #define I3_RES_EME_BF_LADEUNTERBRECHUNG                          (RXBUF_UINT(2))
    #define I3_RES_EME_BF_LADEUNTERBRECHUNG_UNIT                     'Bit'
    #define I3_RES_EME_BF_LADEUNTERBRECHUNG_TYPE                     unsigned short
        // Reason charging interruption / Grund Ladeunterbrechung

    #define I3_RES_EME_STAT_HVB_SOC_DISP_WERT                        (RXBUF_UCHAR(4)*0.5f)
    #define I3_RES_EME_STAT_HVB_SOC_DISP_WERT_UNIT                   '%'
    #define I3_RES_EME_STAT_HVB_SOC_DISP_WERT_TYPE                   float
        // Display SOC of the HV battery / Display-SOC der HV-Batterie

    // BF_STATUS_LSC_AUSWAHL_LADEN_MODUS is a BITFIELD of size unsigned char.  We don't yet generate definitions for each bit, we treat as the host data type
        // Setting charging mode charging departure time / Einstellung Lademodus Laden Abfahrtszeit
            // STAT_LSC_AUSWAHL_LADEN_MODUS_BIT0: Mask: 0x01 - 0 = loading on departure time active; 1 = Always_Simply_Loading
            // STAT_LSC_AUSWAHL_LADEN_MODUS_BIT2: Mask: 0x04 - 0 = intelligent charging inactive; 1 = intelligent charging active, if charging mode_auf_abfahrtzeit active; otherwise only preselected in HMI
            // STAT_LSC_AUSWAHL_LADEN_MODUS_BIT1: Mask: 0x02 - 0 = inexpensive charging inactive; 1 = Inexpensive loading active (if loading_on_departure time active; otherwise only preselected in HMI)
    #define I3_RES_EME_BF_STATUS_LSC_AUSWAHL_LADEN_MODUS             (RXBUF_UCHAR(5))
    #define I3_RES_EME_BF_STATUS_LSC_AUSWAHL_LADEN_MODUS_UNIT        'Bit'
    #define I3_RES_EME_BF_STATUS_LSC_AUSWAHL_LADEN_MODUS_TYPE        unsigned char
        // Setting charging mode charging departure time / Einstellung Lademodus Laden Abfahrtszeit

    #define I3_RES_EME_STAT_LSC_PROGNOSEMODE                         (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_LSC_PROGNOSEMODE_UNIT                    '0-n'
    #define I3_RES_EME_STAT_LSC_PROGNOSEMODE_TYPE                    unsigned char
        // current forecast mode LSC / aktueller Prognosemodus LSC

    #define I3_RES_EME_STAT_LSC_VERSION                              (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_LSC_VERSION_UNIT                         '0-n'
    #define I3_RES_EME_STAT_LSC_VERSION_TYPE                         unsigned char
        // current LSC version / aktuelle LSC version

    #define I3_RES_EME_STAT_AKT_PHASE_COUNT_AC_CHARGING              (RXBUF_UCHAR(8))
    #define I3_RES_EME_STAT_AKT_PHASE_COUNT_AC_CHARGING_UNIT         '0-n'
    #define I3_RES_EME_STAT_AKT_PHASE_COUNT_AC_CHARGING_TYPE         unsigned char
        // Phasing of the store / Phasigkeit des Ladens

    #define I3_RES_EME_STAT_HV_BATTERY_SIZE_WERT                     (RXBUF_UINT(9))
    #define I3_RES_EME_STAT_HV_BATTERY_SIZE_WERT_TYPE                unsigned short
        // Maximum memory size / Maximale Speichergröße

    #define I3_RES_EME_STAT_ENERGIEDELTA_VOLL_WERT                   (RXBUF_UINT(11)*0.02f)
    #define I3_RES_EME_STAT_ENERGIEDELTA_VOLL_WERT_UNIT              'kWh'
    #define I3_RES_EME_STAT_ENERGIEDELTA_VOLL_WERT_TYPE              float
        // Energy required to fully charge / Zum Volladen benötigte Energie

    #define I3_RES_EME_STAT_LADEENDE_URSACHE                         (RXBUF_UCHAR(13))
    #define I3_RES_EME_STAT_LADEENDE_URSACHE_UNIT                    '0-n'
    #define I3_RES_EME_STAT_LADEENDE_URSACHE_TYPE                    unsigned char
        // Cause of charging end (charging history) / Ursache Ladeende (Ladehistorie)

    #define I3_RES_EME_STAT_LADEVERFAHREN_NR                         (RXBUF_UCHAR(14))
    #define I3_RES_EME_STAT_LADEVERFAHREN_NR_UNIT                    '0-n'
    #define I3_RES_EME_STAT_LADEVERFAHREN_NR_TYPE                    unsigned char
        // Type of charge type / Art des Ladetyps

    #define I3_RES_EME_STAT_LADESTATUS_NR                            (RXBUF_UCHAR(15))
    #define I3_RES_EME_STAT_LADESTATUS_NR_UNIT                       '0-n'
    #define I3_RES_EME_STAT_LADESTATUS_NR_TYPE                       unsigned char
        // Type of charge status / Art des Ladestatus

    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT                  (RXBUF_UCHAR(16))
    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT_UNIT             'h'
    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT_TYPE             unsigned char
        // Only with AC charging: Start of the favorable charging window (hours) / Nur bei AC-Laden: Beginn des günstigen
        // Ladefensters (Stunden)

    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT                  (RXBUF_UCHAR(17))
    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT_UNIT             'min'
    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT_TYPE             unsigned char
        // Only with AC charging: Start of the favorable charging window (minutes) / Nur bei AC-Laden: Beginn des
        // günstigen Ladefensters (Minuten)

    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT                    (RXBUF_UCHAR(18))
    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT_UNIT               'h'
    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT_TYPE               unsigned char
        // Only with AC charging: End of the favorable charging window (hours) / Nur bei AC-Laden: Ende des günstigen
        // Ladefensters (Stunden)

    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT                    (RXBUF_UCHAR(19))
    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT_UNIT               'min'
    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT_TYPE               unsigned char
        // Only with AC charging: End of the favorable charging window (minutes) / Nur bei AC-Laden: Ende des günstigen
        // Ladefensters (Minuten)

    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR                  (RXBUF_UCHAR(20))
    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR_UNIT             '0-n'
    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR_TYPE             unsigned char
        // Only with AC charging, two-time alarm clock: selection of the favorable charging window / Nur bei AC-Laden,
        // Zwei Zeit Wecker: Auswahl des günstigen Ladefensters

    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR                  (RXBUF_UCHAR(21))
    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR_UNIT             '0-n'
    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR_TYPE             unsigned char
        // Only with AC charging, two-time alarm clock: selection of the favorable charging window / Nur bei AC-Laden,
        // Zwei Zeit Wecker: Auswahl des günstigen Ladefensters

    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR                (RXBUF_UCHAR(22))
    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR_UNIT           '0-n'
    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR_TYPE           unsigned char
        // Only with AC charging: Acknowledgment of the current limitation / Nur bei AC-Laden: Rückmeldung der
        // Strombegrenzung

    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR               (RXBUF_UCHAR(23))
    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR_UNIT          '0-n'
    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR_TYPE          unsigned char
        // Acknowledgment of the AC current limitation selection: Only with AC charging / Rückmeldung der AC-
        // Strombegrenzungauswahl: Nur bei AC-Laden

    #define I3_RES_EME_STAT_POLY_TIM_1_WERT                          (RXBUF_UCHAR(24)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_1_WERT_TYPE                     float
        // Feedback from the SOC support points: time (standardized) of the first support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des ersten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_1_WERT                          (RXBUF_UINT(25)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_1_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_POLY_SOC_1_WERT_TYPE                     float
        // Feedback from the SOC support points: SOC of the first support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des ersten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_2_WERT                          (RXBUF_UCHAR(27)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_2_WERT_TYPE                     float
        // Feedback from the SOC support points: time (normalized) of the second support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des zweiten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_2_WERT                          (RXBUF_UINT(28)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_2_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_POLY_SOC_2_WERT_TYPE                     float
        // Feedback from the SOC support points: SOC of the second support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des zweiten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_3_WERT                          (RXBUF_UCHAR(30)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_3_WERT_TYPE                     float
        // Feedback from the SOC support points: time (standardized) of the third support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des dritten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_3_WERT                          (RXBUF_UINT(31)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_3_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_POLY_SOC_3_WERT_TYPE                     float
        // Feedback from the SOC support points: SOC of the third support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des dritten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_4_WERT                          (RXBUF_UCHAR(33)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_4_WERT_TYPE                     float
        // Feedback from the SOC support points: time (standardized) of the fourth support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des vierten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_4_WERT                          (RXBUF_UINT(34)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_4_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_POLY_SOC_4_WERT_TYPE                     float
        // Feedback from the SOC support points: SOC of the fifth support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des fünften Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_5_WERT                          (RXBUF_UCHAR(36)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_5_WERT_TYPE                     float
        // Feedback from the SOC support points: time (standardized) of the fifth support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des fünften Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_5_WERT                          (RXBUF_UINT(37)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_5_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_POLY_SOC_5_WERT_TYPE                     float
        // Feedback from the SOC support points: SOC of the fifth support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des fünften Stützpunktes

    #define I3_RES_EME_STAT_HV_SOC_IST_WERT                          (RXBUF_UINT(39)*0.01f)
    #define I3_RES_EME_STAT_HV_SOC_IST_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_HV_SOC_IST_WERT_TYPE                     float
        // Current SOC of the HV battery / Aktueller SOC der HV-Batterie

    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT                      (RXBUF_UINT(41))
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT_UNIT                 'min'
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT_TYPE                 unsigned short
        // Loading time forecast / Ladezeitprognose

    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT                      (RXBUF_UCHAR(43))
    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT_UNIT                 'V'
    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT_TYPE                 unsigned char
        // AC charging voltage (only for AC charging) / AC-Ladespannung (nur bei AC Laden)

    #define I3_RES_EME_STAT_LADEN_STROM_WERT                         (RXBUF_UCHAR(44))
    #define I3_RES_EME_STAT_LADEN_STROM_WERT_UNIT                    'A'
    #define I3_RES_EME_STAT_LADEN_STROM_WERT_TYPE                    unsigned char
        // AC charging current (only for AC charging) / AC-Ladestrom (nur bei AC Laden)

    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT                   (RXBUF_UINT32(45)*3600.0f)
    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT_UNIT              'Ws'
    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT_TYPE              float
        // Predicted energy content depending on the state of charge and on-board power consumption / Prognostizierte
        // Energieinhalt in Abhängigkeit des Ladezustands und des Bordnetzverbrauches

    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR                    (RXBUF_UCHAR(49))
    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR_UNIT               '0-n'
    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR_TYPE               unsigned char
        // Status of the LSC trigger / Status des LSC-Triggers

    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT                   (RXBUF_UINT32(50))
    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT_UNIT              'Ws'
    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT_TYPE              unsigned long
        // Maximum possible energy content of the high-voltage storage system / Maximal möglicher Energieinhalt des
        // Hochvoltspeichers

    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT                 (RXBUF_UINT(54))
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT_UNIT            'min'
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT_TYPE            unsigned short
        // Predicted remaining charging time: 0-65531 = value range; 65533 = Not available; 65532 = initialization; 65534
        // = error; 65535 = signal valid / Prognostizierte Restladedauer: 0-65531 = Wertebereich; 65533 = Nicht
        // verfügbar; 65532 = Initialisierung; 65534  = Fehler; 65535 = Signal ugültig

    #define I3_RES_EME_STAT_LADESTECKER_NR                           (RXBUF_UCHAR(56))
    #define I3_RES_EME_STAT_LADESTECKER_NR_UNIT                      '0-n'
    #define I3_RES_EME_STAT_LADESTECKER_NR_TYPE                      unsigned char
        // Condition of charging plug / Zustand Ladestecker

    #define I3_RES_EME_STAT_LSC_AUSWAHL_LADEN_SOFORT_MODUS           (RXBUF_UCHAR(57))
    #define I3_RES_EME_STAT_LSC_AUSWAHL_LADEN_SOFORT_MODUS_UNIT      '0-n'
    #define I3_RES_EME_STAT_LSC_AUSWAHL_LADEN_SOFORT_MODUS_TYPE      unsigned char
        // Load one-time setting immediately / Einstellung einmalig sofort Laden

#define I3_PID_EME_AE_CHARGE_ENABLE                                  0xDE71
        // Statement about the granting of loading clearance / Aussage über die Erteilung der Ladefreigabe

    #define I3_RES_EME_STAT_CHARGE_ENABLE_NR                         (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_CHARGE_ENABLE_NR_UNIT                    '0-n'
    #define I3_RES_EME_STAT_CHARGE_ENABLE_NR_TYPE                    unsigned char
        // Statement about the granting of loading clearance / Aussage über die Erteilung der Ladefreigabe

#define I3_PID_EME_AE_PARKSPERRE_SENSOREN                            0xDE74
        // Parking lock status sensors / Status Sensoren der Parksperre

    #define I3_RES_EME_STAT_SENSOR_1_NR                              (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_SENSOR_1_NR_UNIT                         '0-n'
    #define I3_RES_EME_STAT_SENSOR_1_NR_TYPE                         unsigned char
        // Status sensor 1 / Status Sensor 1

    #define I3_RES_EME_STAT_SENSOR_2_NR                              (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_SENSOR_2_NR_UNIT                         '0-n'
    #define I3_RES_EME_STAT_SENSOR_2_NR_TYPE                         unsigned char
        // Status sensor 2 / Status Sensor 2

#define I3_PID_EME_AE_HV_SPANNUNG_LESEN                              0xDE75
        // Values of all intermediate circuit voltages / Werte aller Zwischenkreisspannungen

    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_WERT                     (RXBUF_UINT(0)*0.2f)
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_WERT_UNIT                'V'
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_WERT_TYPE                float
        // HV DC voltage in the SLE / HV DC Spannung in der SLE

    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_PFC_WERT                 (RXBUF_UINT(2)*0.2f)
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_PFC_WERT_UNIT            'V'
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_PFC_WERT_TYPE            float
        // SLE Power Factor Corrector Voltage / SLE Power Factor Corrector Spannung

    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_AC_WERT                  (RXBUF_UINT(4)*0.2f)
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_AC_WERT_UNIT             'V'
    #define I3_RES_EME_STAT_SPANNUNG_HV_SLE_AC_WERT_TYPE             float
        // SLE AC input voltage / SLE AC Eingangsspannung

    #define I3_RES_EME_STAT_SPANNUNG_HV_DCDC_WERT                    (RXBUF_UINT(6)*0.2f)
    #define I3_RES_EME_STAT_SPANNUNG_HV_DCDC_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_HV_DCDC_WERT_TYPE               float
        // HV voltage in the DC / DC converter / HV Spannung im DC/DC-Wandler

    #define I3_RES_EME_STAT_SPANNUNG_HV_UMRICHTER_WERT               (RXBUF_UINT(8)*0.2f)
    #define I3_RES_EME_STAT_SPANNUNG_HV_UMRICHTER_WERT_UNIT          'V'
    #define I3_RES_EME_STAT_SPANNUNG_HV_UMRICHTER_WERT_TYPE          float
        // HV voltage in the converter / HV Spannung im Umrichter

#define I3_PID_EME_AE_PARKSPERRE_SW                                  0xDE76
        // Parking lock software status / Status Parksperren Software

    #define I3_RES_EME_STAT_PS_SW_NR                                 (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_PS_SW_NR_UNIT                            '0-n'
    #define I3_RES_EME_STAT_PS_SW_NR_TYPE                            unsigned char
        // Parking lock software status / Status Parksperren Software

// Skipping AE_PARKSPERRE on 0xDE77 which takes arguments

// Skipping AE_PARKSPERRE_EINLERNEN on 0xDE78 which takes arguments

#define I3_PID_EME_AE_PARKSPERRE_POSITION                            0xDE79
        // Current position of the parking lock / Aktuelle Position der Parksperre

    #define I3_RES_EME_STAT_POSITION_PARKSPERRE_NR                   (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_POSITION_PARKSPERRE_NR_UNIT              '0-n'
    #define I3_RES_EME_STAT_POSITION_PARKSPERRE_NR_TYPE              unsigned short
        // Current position of the parking lock / Aktuelle Position der Parksperre

// Skipping AE_PARKSPERRE_POSITIONEN on 0xDE7A which takes arguments

#define I3_PID_EME_AE_PARKSPERRE_STROM                               0xDE7B
        // Current parking lock actuator current / Aktueller Strom Parksperrenaktuator

    #define I3_RES_EME_STAT_STROM_PARKSPERRE_WERT                    (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_STROM_PARKSPERRE_WERT_UNIT               'A'
    #define I3_RES_EME_STAT_STROM_PARKSPERRE_WERT_TYPE               unsigned short
        // Current parking lock actuator current / Aktueller Strom Parksperrenaktuator

#define I3_PID_EME_AE_PARKSPERRE_SPANNUNGEN                          0xDE7C
        // Parking lock tension / Spannungen der Parksperre

    #define I3_RES_EME_STAT_PS_SPG_HBRUECKE_WERT                     (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_PS_SPG_HBRUECKE_WERT_UNIT                'mV'
    #define I3_RES_EME_STAT_PS_SPG_HBRUECKE_WERT_TYPE                unsigned short
        // Tension of the H-bridge / Spannung der H-Brücke

    #define I3_RES_EME_STAT_PS_POSITION_OFFEN_WERT                   (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_PS_POSITION_OFFEN_WERT_UNIT              'mV'
    #define I3_RES_EME_STAT_PS_POSITION_OFFEN_WERT_TYPE              unsigned short
        // Tension of sensing / Spannung der Sensierung

#define I3_PID_EME_AE_ROHSIG_AUSGANG                                 0xDE7D
        // Raw signals output pins / Rohsignale Ausgangspins

    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE1_WERT    (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE1_WERT_UNIT '%'
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE1_WERT_TYPE unsigned short
        // Raw signal activation of parking lock (Duty Cycle H-Bridge). / Rohsignal Ansteuerung Parksperre (Duty Cycle
        // H-Bruecke).

    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE2         (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE2_UNIT    '0/1'
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE2_TYPE    unsigned char
        // Raw signal activation parking lock (direction). / Rohsignal Ansteuerung Parksperre (Richtung).

    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE_NOTENTRIEGELUNG (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE_NOTENTRIEGELUNG_UNIT '0/1'
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_PARKSPERRE_NOTENTRIEGELUNG_TYPE unsigned char
        // Raw signal activation of parking lock emergency unlocking magnet (0 = not activated; 1 = activated) /
        // Rohsignal Ansteuerung Parksperre Notentrieglungsmagnet ( 0 = nicht angesteuert; 1 = angesteuert )

    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_ELUP_NR             (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_ELUP_NR_UNIT        '0-n'
    #define I3_RES_EME_STAT_ROHSIGNAL_ANSTEURUNG_ELUP_NR_TYPE        unsigned char
        // Raw signal control ELUP. / Rohsignal Ansteuerung ELUP.

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_ELUP_BUDS                  0xDE7E
        // Raw signals output pins sensors ELUP, BUDS / Rohsignale Ausgangspins Sensoren ELUP, BUDS

    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_ENDSTUFE_ELUP_WERT        (RXBUF_UINT32(0)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_ENDSTUFE_ELUP_WERT_UNIT   'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_ENDSTUFE_ELUP_WERT_TYPE   float
        // Raw signal temperature measurement output stage for ELUP. / Rohsignal Temperaturmessung Endstufe für ELUP.

    #define I3_RES_EME_STAT_ROHSIGNAL_BUDS_WERT                      (RXBUF_UINT32(4)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_BUDS_WERT_UNIT                 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_BUDS_WERT_TYPE                 float
        // Raw signal BUDS. / Rohsignal BUDS.

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_EM_INV                     0xDE7F
        // Raw signals sensors / inputs for e-machines / converters / Rohsignale Sensoren/Eingänge für
        // E-Maschine/Umrichter

    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_EMASCHINE_STATOR_WERT     (RXBUF_UINT32(0)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_EMASCHINE_STATOR_WERT_UNIT 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_EMASCHINE_STATOR_WERT_TYPE float
        // Raw signal temperature sensor E-machine stator / Rohsignal Temperatursensor E-Maschine Stator

    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_U_WERT    (RXBUF_UINT32(4)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_U_WERT_UNIT 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_U_WERT_TYPE float
        // Raw signal temperature sensor converter phase U. / Rohsignal Temperatursensor Umrichter Phase U.

    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_V_WERT    (RXBUF_UINT32(8)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_V_WERT_UNIT 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_V_WERT_TYPE float
        // Raw signal temperature sensor converter phase V. / Rohsignal Temperatursensor Umrichter Phase V.

    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_W_WERT    (RXBUF_UINT32(12)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_W_WERT_UNIT 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_TEMP_UMRICHTER_PHASE_W_WERT_TYPE float
        // Raw signal temperature sensor converter phase W. / Rohsignal Temperatursensor Umrichter Phase W.

    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_HVDC_UMRICHTER_WERT   (RXBUF_UINT32(16)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_HVDC_UMRICHTER_WERT_UNIT 'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_HVDC_UMRICHTER_WERT_TYPE float
        // Raw signal HV DC voltage converter / Rohsignal HV DC Spannung Umrichter

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HVDC_UMRICHTER_WERT      (RXBUF_SINT32(20)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HVDC_UMRICHTER_WERT_UNIT 'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HVDC_UMRICHTER_WERT_TYPE float
        // Raw signal HV DC current converter. / Rohsignal HV DC Strom Umrichter.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_U_WERT                   (RXBUF_SINT32(24)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_U_WERT_UNIT              'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_U_WERT_TYPE              float
        // Raw signal current sensor phase U. / Rohsignal Stromsensor Phase U.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_V_WERT                   (RXBUF_SINT32(28)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_V_WERT_UNIT              'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_V_WERT_TYPE              float
        // Raw signal current sensor phase V. / Rohsignal Stromsensor Phase V.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_W_WERT                   (RXBUF_SINT32(32)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_W_WERT_UNIT              'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_W_WERT_TYPE              float
        // Raw signal current sensor phase W. / Rohsignal Stromsensor Phase W.

    #define I3_RES_EME_STAT_ROHSIGNAL_ROTORLAGESENSOR_WERT           (RXBUF_UINT(36)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_ROTORLAGESENSOR_WERT_UNIT      'rad'
    #define I3_RES_EME_STAT_ROHSIGNAL_ROTORLAGESENSOR_WERT_TYPE      float
        // Rotor position sensor corrected electrical angular position (radian) / Rotorlagesensor korrigierte elektrische
        // Winkelposition (Radian)

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_PARKSPERRE                 0xDE80
        // Raw signals sensors / inputs parking lock / Rohsignale Sensoren/Eingänge Parksperre

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PARKSPERRE_WERT          (RXBUF_SINT32(0)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PARKSPERRE_WERT_UNIT     'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PARKSPERRE_WERT_TYPE     float
        // Raw signal current measurement parking lock. / Rohsignal Strommessung Parksperre.

    #define I3_RES_EME_STAT_ROHSIGNAL_POSITION_PARKSPERRE3_WERT      (RXBUF_UINT32(4))
    #define I3_RES_EME_STAT_ROHSIGNAL_POSITION_PARKSPERRE3_WERT_TYPE unsigned long
        // Raw signal 3 position measurement parking lock (0-1000 = 0-100%; 2000 = invalid) / Rohsignal 3
        // Positionsmessung Parksperre ( 0-1000=0-100%; 2000=ungueltig)

    #define I3_RES_EME_STAT_ROHSIGNAL_POSITION_PARKSPERRE4_WERT      (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_ROHSIGNAL_POSITION_PARKSPERRE4_WERT_TYPE unsigned long
        // Raw signal 4 position measurement parking lock (0-1000 = 0-100%; 2000 = invalid) / Rohsignal 4
        // Positionsmessung Parksperre (0-1000=0-100%; 2000=ungueltig)

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_SG                         0xDE81
        // Raw signals sensors / inputs control unit / Rohsignale Sensoren/Eingänge Steuergerät

    #define I3_RES_EME_STAT_ROHSIGNAL_KL30B_WERT                     (RXBUF_UINT32(0)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_KL30B_WERT_UNIT                'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_KL30B_WERT_TYPE                float
        // Raw signal voltage measurement terminal 30b / Rohsignal Spannungsmessung Klemme30b

    #define I3_RES_EME_STAT_ROHSIGNAL_KL15WUO_NR                     (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_ROHSIGNAL_KL15WUO_NR_UNIT                '0-n'
    #define I3_RES_EME_STAT_ROHSIGNAL_KL15WUO_NR_TYPE                unsigned char
        // Raw signal terminal 15WUO (0 = not active, 1 = active) / Rohsignal  Klemme 15WUO (0 = nicht aktiv, 1 = aktiv)

    #define I3_RES_EME_STAT_ROHSIGNAL_CRASHSIGNAL_NR                 (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_ROHSIGNAL_CRASHSIGNAL_NR_UNIT            '0-n'
    #define I3_RES_EME_STAT_ROHSIGNAL_CRASHSIGNAL_NR_TYPE            unsigned char
        // Crash input raw signal Electrical crash signal (0 = not active; 1 = active) / Rohsignal Crasheingang
        // Crashsignal elektrisch ( 0 = nicht aktiv; 1 = aktiv )

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_SLE                        0xDE82
        // Raw signals sensors / inputs SLE / Rohsignale Sensoren/Eingänge SLE

    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_AC_NETZ_L1_WERT       (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_AC_NETZ_L1_WERT_UNIT  'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_AC_NETZ_L1_WERT_TYPE  unsigned short
        // Raw signal voltage measurement phase L1 in the AC network; Resolution, quantization, range etc. as used in
        // SG-internal function. / Rohsignal Spannungsmessung Phase L1 im AC Netz; Auflösung, Quantisierung, Range etc.
        // wie in SG-interner Funktion verwendet wird.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PFC_EFF_WERT             (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PFC_EFF_WERT_UNIT        'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_PFC_EFF_WERT_TYPE        unsigned short
        // Raw signal current measurement phase L1 in the AC network; Resolution, quantization, range etc. as used in
        // SG-internal function. / Rohsignal Strommessung Phase L1 im AC Netz; Auflösung, Quantisierung, Range etc. wie
        // in SG-interner Funktion verwendet wird.

    #define I3_RES_EME_STAT_ROHSIGNAL_E_S_CHARGE_EN_WERT             (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_ROHSIGNAL_E_S_CHARGE_EN_WERT_TYPE        unsigned short
        // Raw signal charge enable line; Resolution, quantization, range etc. as used in SG-internal function. /
        // Rohsignal Charge Enable Leitung; Auflösung, Quantisierung, Range etc. wie in SG-interner Funktion verwendet
        // wird.

#define I3_PID_EME_AE_ROHSIG_EINGANG_SENS_DCDC                       0xDE83
        // Raw signals sensors / inputs DC / DC converter / Rohsignale Sensoren/Eingänge DC/DC Wandler

    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_LV_DCDC_WERT          (RXBUF_UINT32(0)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_LV_DCDC_WERT_UNIT     'V'
    #define I3_RES_EME_STAT_ROHSIGNAL_SPANNUNG_LV_DCDC_WERT_TYPE     float
        // Raw signal voltage measurement LV DCDC converter. / Rohsignal Spannungsmessung LV DCDC Wandler.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_LV_DCDC_WERT             (RXBUF_SINT32(4)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_LV_DCDC_WERT_UNIT        'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_LV_DCDC_WERT_TYPE        float
        // Raw signal current measurement LV DCDC converter. / Rohsignal Strommessung LV DCDC Wandler.

    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HV_DCDC_WERT             (RXBUF_SINT32(8)*0.001f)
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HV_DCDC_WERT_UNIT        'A'
    #define I3_RES_EME_STAT_ROHSIGNAL_STROM_HV_DCDC_WERT_TYPE        float
        // Raw signal current measurement HV DCDC converter. / Rohsignal Strommessung HV DCDC Wandler.

#define I3_PID_EME_AE_BETRIEBSZUSTAND_SLE                            0xDE84
        // Operating modes SLE / Betriebsarten SLE

    #define I3_RES_EME_STAT_NETZFREQUENZ_PHASE_1_WERT                (RXBUF_UINT(0)*0.25f)
    #define I3_RES_EME_STAT_NETZFREQUENZ_PHASE_1_WERT_TYPE           float
        // Current grid frequency phase 1 / Aktuelle Netzfrequenz Phase 1

    #define I3_RES_EME_STAT_LADEDAUER_WERT                           (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_LADEDAUER_WERT_UNIT                      's'
    #define I3_RES_EME_STAT_LADEDAUER_WERT_TYPE                      unsigned short
        // Returns the charging time that has elapsed in the current charging cycle / Rückgabe der im aktuellen
        // Ladezyklus verstrichenen Ladezeit

    #define I3_RES_EME_STAT_FEHLERZUSTAND_NR                         (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_FEHLERZUSTAND_NR_UNIT                    '0-n'
    #define I3_RES_EME_STAT_FEHLERZUSTAND_NR_TYPE                    unsigned char
        // SLE error states: 0 = derating 1 = charging interruption 2 = emergency operation 3 = communication failure 4 =
        // reserved 255 signal invalid / SLE Fehlerzustände: 0=Derating 1=Ladeunterbrechung 2=Notlauf
        // 3=Kommunikationsausfall 4=Reserviert 255 Signal ungültig

    #define I3_RES_EME_STAT_SLE_DERATING_WERT                        (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_SLE_DERATING_WERT_UNIT                   '%'
    #define I3_RES_EME_STAT_SLE_DERATING_WERT_TYPE                   unsigned char
        // Value by which the DC-HV output power is reduced. 0-254% / Wert, um den die DC-HV-Ausgangsleistung reduziert
        // ist. 0-254%

    #define I3_RES_EME_STAT_BETRIEBSART_NR                           (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_BETRIEBSART_NR_UNIT                      '0-n'
    #define I3_RES_EME_STAT_BETRIEBSART_NR_TYPE                      unsigned char
        // Operating mode / Betriebsart

    #define I3_RES_EME_STAT_WIRKUNGSGRAD_LADEZYKLUS_WERT             (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_WIRKUNGSGRAD_LADEZYKLUS_WERT_UNIT        '%'
    #define I3_RES_EME_STAT_WIRKUNGSGRAD_LADEZYKLUS_WERT_TYPE        unsigned char
        // Charge cycle efficiency / Wirkungsgrad Ladezyklus

#define I3_PID_EME_AE_SLE_LEISTUNG                                   0xDE85
        // Power values intermediate circuit of the SLE / Leistungswerte Zwischenkreis der SLE

    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_WERT                  (RXBUF_UINT(0)-30000.0)
    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_WERT_UNIT             'W'
    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_WERT_TYPE             unsigned short
        // Instantaneous power output in the intermediate circuit / Abgegebende Momentanleistung in den Zwischenkreis

    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_MAX_WERT              (RXBUF_UINT(2)-30000.0)
    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_MAX_WERT_UNIT         'W'
    #define I3_RES_EME_STAT_SLE_DC_HV_LEISTUNG_MAX_WERT_TYPE         unsigned short
        // Maximum power that can be output in the intermediate circuit / Maximal abgebbare Leistung in den Zwischenkreis

    #define I3_RES_EME_STAT_SLE_AC_WIRKLEISTUNG_WERT                 (RXBUF_UINT(4)-30000.0)
    #define I3_RES_EME_STAT_SLE_AC_WIRKLEISTUNG_WERT_UNIT            'W'
    #define I3_RES_EME_STAT_SLE_AC_WIRKLEISTUNG_WERT_TYPE            unsigned short
        // Instantaneous active power drawn from the network / Entnommene Momentanwirkleistung aus dem Netz

#define I3_PID_EME_AE_SLE_SPANNUNG                                   0xDE86
        // AC and DC voltages SLE / AC und DC Spannungen SLE

    #define I3_RES_EME_STAT_SPANNUNG_RMS_AC_PHASE_1_WERT             (RXBUF_UINT(0)*0.1f)
    #define I3_RES_EME_STAT_SPANNUNG_RMS_AC_PHASE_1_WERT_UNIT        'V'
    #define I3_RES_EME_STAT_SPANNUNG_RMS_AC_PHASE_1_WERT_TYPE        float
        // RMS values of the AC conductor voltages (phase 1) / Effektivwerte der AC Leiterspannungen (Phase1)

    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_WERT                  (RXBUF_UINT(2)*0.1f)
    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_WERT_UNIT             'V'
    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_WERT_TYPE             float
        // SLE DC HV voltage / SLE DC HV Spannung

    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_OBERGRENZE_WERT       (RXBUF_UINT(4)*0.1f)
    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_OBERGRENZE_WERT_UNIT  'V'
    #define I3_RES_EME_STAT_SPANNUNG_SLE_DC_HV_OBERGRENZE_WERT_TYPE  float
        // SLE DC HV upper voltage limit / SLE DC HV Spannungsobergrenze

#define I3_PID_EME_AE_SLE_STROM                                      0xDE87
        // calibrated SLE transformer current / kalibrierter SLE Trafostrom

    #define I3_RES_EME_STAT_STROM_TRAFO_WERT                         (RXBUF_UINT(0)*0.01f-100.0)
    #define I3_RES_EME_STAT_STROM_TRAFO_WERT_UNIT                    'A'
    #define I3_RES_EME_STAT_STROM_TRAFO_WERT_TYPE                    float
        // calibrated SLE transformer current / kalibrierter SLE Trafostrom

#define I3_PID_EME_AE_SPANNUNG_KLEMME30B                             0xDE88
        // current voltage at KL30B / aktuelle Spannung an KL30B

    #define I3_RES_EME_STAT_SPANNUNG_KL30B_WERT                      (RXBUF_UINT(0)*0.01f)
    #define I3_RES_EME_STAT_SPANNUNG_KL30B_WERT_UNIT                 'V'
    #define I3_RES_EME_STAT_SPANNUNG_KL30B_WERT_TYPE                 float
        // current voltage at KL30B / aktuelle Spannung an KL30B

#define I3_PID_EME_AE_STROM_DCDC                                     0xDE89
        // DC / DC converter currents / Ströme DC/DC Wandler

    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_HV_WERT               (RXBUF_UINT(0)*0.05f-100.0)
    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_HV_WERT_UNIT          'A'
    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_HV_WERT_TYPE          float
        // Current of the DCDC converter on the HV side / Strom des DCDC-Wandlers auf der HV-Seite

    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_12V_WERT              (RXBUF_UINT(2)-1000.0)
    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_12V_WERT_UNIT         'A'
    #define I3_RES_EME_STAT_STROM_DCDC_WANDLER_12V_WERT_TYPE         unsigned short
        // Current of the DCDC converter on the 12V side / Strom des DCDC-Wandlers auf der 12V-Seite

    #define I3_RES_EME_STAT_STROM_DCDC_TS1_WERT                      (RXBUF_UINT(4)*0.01f)
    #define I3_RES_EME_STAT_STROM_DCDC_TS1_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_STROM_DCDC_TS1_WERT_TYPE                 float
        // DC / DC buck converter current 1 / DC/DC Tiefsetzsteller-Strom 1

    #define I3_RES_EME_STAT_STROM_DCDC_TS2_WERT                      (RXBUF_UINT(6)*0.01f)
    #define I3_RES_EME_STAT_STROM_DCDC_TS2_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_STROM_DCDC_TS2_WERT_TYPE                 float
        // DC / DC buck converter current 2 / DC/DC Tiefsetzsteller-Strom 2

    #define I3_RES_EME_STAT_STROM_DCDC_TRAFO1_WERT                   (RXBUF_UINT(8)*0.01f)
    #define I3_RES_EME_STAT_STROM_DCDC_TRAFO1_WERT_UNIT              'A'
    #define I3_RES_EME_STAT_STROM_DCDC_TRAFO1_WERT_TYPE              float
        // DC / DC transformer current 1 / DC/DC Trafostrom 1

#define I3_PID_EME_AE_STROM_EMASCHINE                                0xDE8A
        // E-machine / converter currents / Ströme E-Maschine / Umrichter

    #define I3_RES_EME_STAT_STROM_AC_EFF_W_WERT                      (RXBUF_SINT(0)*0.0625f)
    #define I3_RES_EME_STAT_STROM_AC_EFF_W_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_STROM_AC_EFF_W_WERT_TYPE                 float
        // Effective supply current phase W / Effektiver Zuleitungsstrom Phase W

    #define I3_RES_EME_STAT_STROM_AC_EFF_V_WERT                      (RXBUF_SINT(2)*0.0625f)
    #define I3_RES_EME_STAT_STROM_AC_EFF_V_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_STROM_AC_EFF_V_WERT_TYPE                 float
        // Effective supply current phase V / Effektiver Zuleitungsstrom Phase V

    #define I3_RES_EME_STAT_STROM_AC_EFF_U_WERT                      (RXBUF_SINT(4)*0.0625f)
    #define I3_RES_EME_STAT_STROM_AC_EFF_U_WERT_UNIT                 'A'
    #define I3_RES_EME_STAT_STROM_AC_EFF_U_WERT_TYPE                 float
        // Effective supply current phase U / Effektiver Zuleitungsstrom Phase U

    #define I3_RES_EME_STAT_ERREGERSTROM_WERT                        (RXBUF_SINT(6)*0.0625f)
    #define I3_RES_EME_STAT_ERREGERSTROM_WERT_UNIT                   'A'
    #define I3_RES_EME_STAT_ERREGERSTROM_WERT_TYPE                   float
        // Current excitation current / Aktueller Erregerstrom

    #define I3_RES_EME_STAT_STROM_DC_HV_UMRICHTER_EM_WERT            (RXBUF_SINT(8)*0.1f)
    #define I3_RES_EME_STAT_STROM_DC_HV_UMRICHTER_EM_WERT_UNIT       'A'
    #define I3_RES_EME_STAT_STROM_DC_HV_UMRICHTER_EM_WERT_TYPE       float
        // HV-DC current of the converter for the EM stator / HV-DC Strom des Umrichters für den EM-Stator

#define I3_PID_EME_AE_TEMP_LE                                        0xDE8C
        // Temperatures control unit drive electronics / Temperaturen Steuergerät Antriebselektronik

    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_U_WERT              (RXBUF_SINT(0)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_U_WERT_UNIT         '°C'
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_U_WERT_TYPE         float
        // Temperature converter phase U / Temperatur Umrichter Phase U

    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_V_WERT              (RXBUF_SINT(2)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_V_WERT_UNIT         '°C'
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_V_WERT_TYPE         float
        // Temperature converter phase V / Temperatur Umrichter Phase V

    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_W_WERT              (RXBUF_SINT(4)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_W_WERT_UNIT         '°C'
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_PHASE_W_WERT_TYPE         float
        // Temperature converter phase W / Temperatur Umrichter Phase W

    #define I3_RES_EME_STAT_TEMP_UMRICHTER_GT_WERT                   (RXBUF_SINT(6)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_GT_WERT_UNIT              '°C'
    #define I3_RES_EME_STAT_TEMP_UMRICHTER_GT_WERT_TYPE              float
        // Temperature inverter gate driver / Temperatur Inverter Gatedriver

    #define I3_RES_EME_STAT_TEMP_DCDC_BO_WERT                        (RXBUF_SINT(8)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_DCDC_BO_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_DCDC_BO_WERT_TYPE                   float
        // Temperature of the DCDC board / Temperatur des DCDC Boards

    #define I3_RES_EME_STAT_TEMP_DCDC_GTW_WERT                       (RXBUF_SINT(10)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_DCDC_GTW_WERT_UNIT                  '°C'
    #define I3_RES_EME_STAT_TEMP_DCDC_GTW_WERT_TYPE                  float
        // Temperature DC / DC push-pull converter / Temperatur DC/DC-Gegentaktwandler

    #define I3_RES_EME_STAT_TEMP_DCDC_TS_WERT                        (RXBUF_SINT(12)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_DCDC_TS_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_DCDC_TS_WERT_TYPE                   float
        // Temperature DC / DC buck converter / Temperatur DC/DC-Tiefsetzer

    #define I3_RES_EME_STAT_TEMP_DCDC_GR_WERT                        (RXBUF_SINT(14)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_DCDC_GR_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_DCDC_GR_WERT_TYPE                   float
        // Temperature of the DCDC board / Temperatur des DCDC Boards

    #define I3_RES_EME_STAT_TEMP_SLE_PFC_WERT                        (RXBUF_SINT(16)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_SLE_PFC_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_SLE_PFC_WERT_TYPE                   float
        // Temperature SLE-PowerFactorCorrection / Temperatur SLE-PowerFactorCorrection

    #define I3_RES_EME_STAT_TEMP_SLE_GR_WERT                         (RXBUF_SINT(18)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_SLE_GR_WERT_UNIT                    '°C'
    #define I3_RES_EME_STAT_TEMP_SLE_GR_WERT_TYPE                    float
        // Temperature SLE rectifier / Temperatur SLE-Gleichrichter

    #define I3_RES_EME_STAT_TEMP_SLE_GTW_WERT                        (RXBUF_SINT(20)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_SLE_GTW_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_SLE_GTW_WERT_TYPE                   float
        // Temperature SLE push-pull converter / Temperatur SLE-Gegentaktwandler

    #define I3_RES_EME_STAT_TEMP_SLE_BO_WERT                         (RXBUF_SINT(22)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_SLE_BO_WERT_UNIT                    '°C'
    #define I3_RES_EME_STAT_TEMP_SLE_BO_WERT_TYPE                    float
        // Temperature of the SLE board / Temperatur des SLE Boards

    #define I3_RES_EME_STAT_TEMP_ELUP_LE_WERT                        (RXBUF_SINT(24)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_ELUP_LE_WERT_UNIT                   '°C'
    #define I3_RES_EME_STAT_TEMP_ELUP_LE_WERT_TYPE                   float
        // Temperature on the power board - measuring point ELUP power output stage / Temperatur auf dem Powerbord -
        // Messstelle ELUP Leistungsendstufe

    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC0_WERT                  (RXBUF_SINT(26)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC0_WERT_UNIT             '°C'
    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC0_WERT_TYPE             float
        // Temperature processor MC0 / Temperatur Prozessor MC0

    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC2_WERT                  (RXBUF_SINT(28)*0.0156f)
    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC2_WERT_UNIT             '°C'
    #define I3_RES_EME_STAT_TEMP_PROZESSOR_MC2_WERT_TYPE             float
        // Temperature processor MC2 / Temperatur Prozessor MC2

#define I3_PID_EME_AE_ZUSTAND_1_DCDC                                 0xDE92
        // DC / DC converter status / Status DC/DC-Wandler

    #define I3_RES_EME_STAT_BETRIEBSART_DCDC_IST                     (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_BETRIEBSART_DCDC_IST_UNIT                '0-n'
    #define I3_RES_EME_STAT_BETRIEBSART_DCDC_IST_TYPE                unsigned char
        // Actual operating mode of the DCDC converter / Ist-Betriebsart des DCDC-Wandlers

    #define I3_RES_EME_STAT_SPANNUNG_LV_IST_WERT                     (RXBUF_UINT(1)*0.05f)
    #define I3_RES_EME_STAT_SPANNUNG_LV_IST_WERT_UNIT                'V'
    #define I3_RES_EME_STAT_SPANNUNG_LV_IST_WERT_TYPE                float
        // Electrical system voltage / Bordnetzspannung

    #define I3_RES_EME_STAT_AUSLASTUNG_WERT                          (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_AUSLASTUNG_WERT_UNIT                     '%'
    #define I3_RES_EME_STAT_AUSLASTUNG_WERT_TYPE                     unsigned char
        // Utilization of the DCDC converter / Auslastung des DCDC-Wandlers

// Skipping AE_ELUP on 0xDE93 which takes arguments

// Skipping AE_PARKSPERRE_NVRAM_LOESCHEN on 0xDE95 which takes arguments

#define I3_PID_EME_AE_ZUSTAND_DCDC_FEHLERBILD                        0xDE96
        // Return of active / inactive errors DC / DC converter / Rückgabe aktiver/inaktiver Fehler DC/DC-Wandler

    // RES_0xDE96_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // Return of active / inactive errors DC / DC converter / Rückgabe aktiver/inaktiver Fehler DC/DC-Wandler
    #define I3_RES_EME_RES_0xDE96_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_EME_RES_0xDE96_D_UNIT                             'Bit'
    #define I3_RES_EME_RES_0xDE96_D_TYPE                             unsigned char
        // Return of active / inactive errors DC / DC converter / Rückgabe aktiver/inaktiver Fehler DC/DC-Wandler

#define I3_PID_EME_STATUS_CONNECTED_DRIVE                            0xDE9E
        // Information about Connected Drive / Informationen über Connected Drive

    #define I3_RES_EME_STAT_LADEN_NR                                 (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_LADEN_NR_UNIT                            '0-n'
    #define I3_RES_EME_STAT_LADEN_NR_TYPE                            unsigned char
        // Information about the current status of the loading (see TAB_EDME_STATUS_LADEN) / Information über den
        // aktuellen Status des Ladens (siehe TAB_EDME_STATUS_LADEN)

    #define I3_RES_EME_STAT_REMOTE_LADEN_NR                          (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_REMOTE_LADEN_NR_UNIT                     '0-n'
    #define I3_RES_EME_STAT_REMOTE_LADEN_NR_TYPE                     unsigned char
        // Bit0: RemoteLaden not active Bit1: RemoteLaden on Hold Bit2: RemoteLaden active / Bit0: RemoteLaden nicht
        // aktiv Bit1: RemoteLaden on Hold Bit2: RemoteLaden aktiv

    #define I3_RES_EME_STAT_TIMER_LADEN_NR                           (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_TIMER_LADEN_NR_UNIT                      '0-n'
    #define I3_RES_EME_STAT_TIMER_LADEN_NR_TYPE                      unsigned char
        // Bit0: Timer loading not active Bit1: Timer loading on hold Bit2: Timer loading active / Bit0: TimerLaden nicht
        // aktiv Bit1: TimerLaden on Hold Bit2: TimerLaden aktiv

    #define I3_RES_EME_STAT_HV_SOC_WERT                              (RXBUF_UCHAR(3)*0.5f)
    #define I3_RES_EME_STAT_HV_SOC_WERT_UNIT                         '%'
    #define I3_RES_EME_STAT_HV_SOC_WERT_TYPE                         float
        // HV battery charge status display / Anzeige Ladezustand HV-Batterie

    #define I3_RES_EME_STAT_ZEIT_LADEENDE_WERT                       (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_ZEIT_LADEENDE_WERT_UNIT                  'min'
    #define I3_RES_EME_STAT_ZEIT_LADEENDE_WERT_TYPE                  unsigned short
        // Charging time / Ladedauer

    #define I3_RES_EME_STAT_MAX_LADESTROM_LADEGERAET_WERT            (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_MAX_LADESTROM_LADEGERAET_WERT_UNIT       'A'
    #define I3_RES_EME_STAT_MAX_LADESTROM_LADEGERAET_WERT_TYPE       unsigned char
        // Maximum AC charging current charger / Maximaler AC-Ladestrom Ladegerät

    #define I3_RES_EME_STAT_IST_AC_SPANNUNG_LADEGERAET_WERT          (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_IST_AC_SPANNUNG_LADEGERAET_WERT_UNIT     'V'
    #define I3_RES_EME_STAT_IST_AC_SPANNUNG_LADEGERAET_WERT_TYPE     unsigned char
        // Actual AC voltage charger / Ist-AC-Spannung Ladegerät

    #define I3_RES_EME_STAT_REICHWEITE_WERT                          (RXBUF_UINT(8))
    #define I3_RES_EME_STAT_REICHWEITE_WERT_UNIT                     'km'
    #define I3_RES_EME_STAT_REICHWEITE_WERT_TYPE                     unsigned short
        // Range / Reichweite

    #define I3_RES_EME_STAT_HVB_TEMP_WERT                            (RXBUF_SINT(10)*0.1f)
    #define I3_RES_EME_STAT_HVB_TEMP_WERT_UNIT                       '°'
    #define I3_RES_EME_STAT_HVB_TEMP_WERT_TYPE                       float
        // HV battery temperature / Temperatur der HV-Batterie

    #define I3_RES_EME_STAT_TRIGGER_SEGMENTSPEICHER_WERT             (RXBUF_UCHAR(12))
    #define I3_RES_EME_STAT_TRIGGER_SEGMENTSPEICHER_WERT_TYPE        unsigned char
        // Trigger condition for reading the segment memory / Auslösebedingung für das Lesen des Segmentspeichers

// Skipping LADEHISTORIE on 0xDEA1 which takes arguments

#define I3_PID_EME_AE_BUDS                                           0xDEA5
        // Brake vacuum sensor value / Sensorwert des Bremsunterdrucks

    #define I3_RES_EME_STAT_BUDS_WERT                                (RXBUF_UCHAR(0)*4.0f-1000.0)
    #define I3_RES_EME_STAT_BUDS_WERT_UNIT                           'hPa'
    #define I3_RES_EME_STAT_BUDS_WERT_TYPE                           float
        // Brake vacuum sensor value / Sensorwert des Bremsunterdrucks

#define I3_PID_EME_AE_TEMP_EMASCHINE                                 0xDEA6
        // Value of the current temperatures of the e-machine in degrees Celsius / Wert der aktuellen Temperaturen der
        // E-Maschine in Grad Celsius

    #define I3_RES_EME_STAT_TEMP1_E_MOTOR_WERT                       (RXBUF_SINT(0)*0.0156f)
    #define I3_RES_EME_STAT_TEMP1_E_MOTOR_WERT_UNIT                  '°C'
    #define I3_RES_EME_STAT_TEMP1_E_MOTOR_WERT_TYPE                  float
        // E-motor temperature 1 / E-Motor Temperatur 1

    #define I3_RES_EME_STAT_TEMP2_E_MOTOR_WERT                       (RXBUF_SINT(2)*0.0156f)
    #define I3_RES_EME_STAT_TEMP2_E_MOTOR_WERT_UNIT                  '°C'
    #define I3_RES_EME_STAT_TEMP2_E_MOTOR_WERT_TYPE                  float
        // E-motor temperature 2 / E-Motor Temperatur 2

#define I3_PID_EME_AE_ELEKTRISCHE_MASCHINE                           0xDEA7
        // Reading out the speed, torque and operating mode of the electric machine / Auslesen von Drehzahl, Drehmoment
        // und Betriebsart der E-Maschine

    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_DREHZAHL_WERT       (RXBUF_UINT(0)*0.5f-5000.0)
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_DREHZAHL_WERT_UNIT  '1/min'
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_DREHZAHL_WERT_TYPE  float
        // Speed of the electric machine / Drehzahl der E-Maschine

    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_IST_MOMENT_WERT     (RXBUF_SINT(2)*0.5f)
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_IST_MOMENT_WERT_UNIT 'Nm'
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_IST_MOMENT_WERT_TYPE float
        // IS the moment of the e-machine / IST Moment der E-Maschine

    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_SOLL_MOMENT_WERT    (RXBUF_SINT(4)*0.5f)
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_SOLL_MOMENT_WERT_UNIT 'Nm'
    #define I3_RES_EME_STAT_ELEKTRISCHE_MASCHINE_SOLL_MOMENT_WERT_TYPE float
        // SHOULD moment of the electric machine / SOLL Moment der E-Maschine

    #define I3_RES_EME_STAT_ELEKTRISCHE_BETRIEBSART_NR               (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_ELEKTRISCHE_BETRIEBSART_NR_UNIT          '0-n'
    #define I3_RES_EME_STAT_ELEKTRISCHE_BETRIEBSART_NR_TYPE          unsigned char
        // current operating mode of the e-machine / aktuelle Betriebsart der E-Maschine

#define I3_PID_EME_AE_ZUSTAND_2_DCDC                                 0xDEA9
        // Various statuses returned from the DCDC converter / Rückgabe verschiederer Status vom DCDC-Wandler

    // RES_0xDEA9_D is a BITFIELD of unknown size.  We don't have definitions for each bit, and we GUESSED it is one byte ***
        // Various statuses returned from the DCDC converter / Rückgabe verschiederer Status vom DCDC-Wandler
    #define I3_RES_EME_RES_0xDEA9_D                                  (RXBUF_UCHAR(0))
    #define I3_RES_EME_RES_0xDEA9_D_UNIT                             'Bit'
    #define I3_RES_EME_RES_0xDEA9_D_TYPE                             unsigned char
        // Various statuses returned from the DCDC converter / Rückgabe verschiederer Status vom DCDC-Wandler

// Skipping LADEHISTOGRAMM on 0xDEAE which takes arguments

#define I3_PID_EME_AE_PARKSPERRE_VERSION                             0xDEB0
        // Return of the current version of the parking lock software / Rückgabe der aktuellen Version der Parksperren-SW

    #define I3_RES_EME_STAT_PS_VERSION_MAIN_WERT                     (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_PS_VERSION_MAIN_WERT_TYPE                unsigned char
        // Main version parking lock SW / Main-Version Parksperren-SW

    #define I3_RES_EME_STAT_PS_VERSION_SUB_WERT                      (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_PS_VERSION_SUB_WERT_TYPE                 unsigned char
        // Revision of the parking lock software / Revision Parksperren-SW

// Skipping AE_ROTORLAGESENSOR on 0xDEB1 which takes arguments

// Skipping AE_DCDC_TEMPHISTOGRAMM_LESEN on 0xDEB2 which takes arguments

// Skipping AE_DCDC_LEISTUNGSHISTOGRAMM on 0xDEB3 which takes arguments

// Skipping AE_RESET_TEMP_MIN_MAX on 0xDEB4 which takes arguments

// Skipping AE_ROTORLAGESENSOR_RESET on 0xDEB6 which takes arguments

// Skipping AE_KLASSIERUNG_LOESCHEN on 0xDEB7 which takes arguments

#define I3_PID_EME_AE_CTRL_VERSION                                   0xDEBC
        // Controller board version / Controllerbord-Version

    #define I3_RES_EME_STAT_CTRL_VERSION_WERT                        (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_CTRL_VERSION_WERT_TYPE                   unsigned char
        // Controller board version / Controllerbord-Version

#define I3_PID_EME_AE_SPANNUNG_DCDC                                  0xDEBD
        // DC / DC voltage low-voltage side / DC/DC-Spannung Niedervoltseite

    #define I3_RES_EME_STAT_SPANNUNG_LV_WERT                         (RXBUF_UINT(0)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_LV_WERT_UNIT                    'V'
    #define I3_RES_EME_STAT_SPANNUNG_LV_WERT_TYPE                    float
        // DC / DC voltage low-voltage side / DC/DC-Spannung Niedervoltseite

#define I3_PID_EME_AE_SPANNUNG_LE                                    0xDEBE
        // Internal voltages of the power electronics / Interne Spannungen der Leistungselektronik

    #define I3_RES_EME_STAT_SPANNUNG_CY0_5V0_WERT                    (RXBUF_UINT(0)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY0_5V0_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY0_5V0_WERT_TYPE               float
        // Voltage monitoring of the internal 5V of CY320_MC0 / Spannungsüberwachung der internen 5V von CY320_MC0

    #define I3_RES_EME_STAT_SPANNUNG_CY2_5V0_WERT                    (RXBUF_UINT(2)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY2_5V0_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY2_5V0_WERT_TYPE               float
        // Voltage monitoring of the internal 5V of CY320_MC2 / Spannungsüberwachung der internen 5V von CY320_MC2

    #define I3_RES_EME_STAT_SPANNUNG_CY0_3V3_WERT                    (RXBUF_UINT(4)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY0_3V3_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY0_3V3_WERT_TYPE               float
        // Voltage monitoring of the internal 3.3V of CY320_MC0 / Spannungsüberwachung der internen 3,3V von CY320_MC0

    #define I3_RES_EME_STAT_SPANNUNG_CY2_3V3_WERT                    (RXBUF_UINT(6)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY2_3V3_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY2_3V3_WERT_TYPE               float
        // Voltage monitoring of the internal 3.3V of CY320_MC2 / Spannungsüberwachung der internen 3,3V von CY320_MC2

    #define I3_RES_EME_STAT_SPANNUNG_CY0_1V5_WERT                    (RXBUF_UINT(8)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY0_1V5_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY0_1V5_WERT_TYPE               float
        // Voltage monitoring of the internal 1.5V of CY320_MC0 / Spannungsüberwachung der internen 1,5V von CY320_MC0

    #define I3_RES_EME_STAT_SPANNUNG_CY2_1V5_WERT                    (RXBUF_UINT(10)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_CY2_1V5_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPANNUNG_CY2_1V5_WERT_TYPE               float
        // Voltage monitoring of the internal 1.5V of CY320_MC2 / Spannungsüberwachung der internen 1,5V von CY320_MC2

    #define I3_RES_EME_STAT_SPANNUNG_32V_WERT                        (RXBUF_UINT(12)*0.001f)
    #define I3_RES_EME_STAT_SPANNUNG_32V_WERT_UNIT                   'V'
    #define I3_RES_EME_STAT_SPANNUNG_32V_WERT_TYPE                   float
        // Back measurement of the internal 32 V. / Rückmessung der internen 32 V

#define I3_PID_EME_AE_SYSSTATE                                       0xDEBF
        // Internal status states of the control unit / Interne Statuszustände des Steuergerät

    #define I3_RES_EME_STAT_SYSSTATE_DPR                             (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_SYSSTATE_DPR_UNIT                        '0/1'
    #define I3_RES_EME_STAT_SYSSTATE_DPR_TYPE                        unsigned char
        // Dualported RAM active 0 = not active 1 = active / Dualported RAM aktiv 0 = nicht aktiv 1 = aktiv

    #define I3_RES_EME_STAT_SYSSTATE_MC0_NR                          (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_SYSSTATE_MC0_NR_UNIT                     '0-n'
    #define I3_RES_EME_STAT_SYSSTATE_MC0_NR_TYPE                     unsigned char
        // System status of the MC0 / Systemzustand des MC0

    #define I3_RES_EME_STAT_SYSSTATE_MC2_NR                          (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_SYSSTATE_MC2_NR_UNIT                     '0-n'
    #define I3_RES_EME_STAT_SYSSTATE_MC2_NR_TYPE                     unsigned char
        // System status of the MC2 / Systemzustand des MC2

    // BF_SYSSTATE_KLEMMEN is a BITFIELD of size unsigned int.  We don't yet generate definitions for each bit, we treat as the host data type
        // Terminal status / Klemmenzustand
            // STAT_SYSSTATE_KL15WUP_1: Mask: 0x0001 - Terminal status (bit-coded): Bit1 = Kl15WUP
            // STAT_SYSSTATE_KL30B_2: Mask: 0x0002 - Terminal status (bit-coded): Bit2 = KL30B
            // STAT_SYSSTATE_KL30C_3: Mask: 0x0004 - Terminal status (bit-coded): Bit3 = KL30C
    #define I3_RES_EME_BF_SYSSTATE_KLEMMEN                           (RXBUF_UINT(3))
    #define I3_RES_EME_BF_SYSSTATE_KLEMMEN_UNIT                      'Bit'
    #define I3_RES_EME_BF_SYSSTATE_KLEMMEN_TYPE                      unsigned short
        // Terminal status / Klemmenzustand

#define I3_PID_EME_SPANNUNG_ELUP                                     0xDEC2
        // Voltage level at the ELUP output of the EME / Spannungspegel am ELUP - Ausgang der EME

    #define I3_RES_EME_STAT_U_ELUP_WERT                              (RXBUF_UINT(0)*0.1f)
    #define I3_RES_EME_STAT_U_ELUP_WERT_UNIT                         'V'
    #define I3_RES_EME_STAT_U_ELUP_WERT_TYPE                         float
        // Voltage level at the ELUP output of the EME / Spannungspegel am ELUP - Ausgang der EME

#define I3_PID_EME_STROM_ELUP                                        0xDEC3
        // Voltage level at the ELUP output of the EME / Spannungspegel am ELUP - Ausgang der EME

    #define I3_RES_EME_STAT_I_ELUP_WERT                              (RXBUF_UINT(0)*0.1f)
    #define I3_RES_EME_STAT_I_ELUP_WERT_UNIT                         'A'
    #define I3_RES_EME_STAT_I_ELUP_WERT_TYPE                         float
        // Voltage level at the ELUP output of the EME / Spannungspegel am ELUP - Ausgang der EME

// Skipping REX_RESONANZ on 0xDED1 which takes arguments

#define I3_PID_EME_AE_FAHRSTUFE                                      0xDEDD
        // current actual position of the drive train (PRND) / aktuelle Ist-Position des Antriebsstrangs (PRND)

    #define I3_RES_EME_STAT_POS_PRND_NR                              (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_POS_PRND_NR_UNIT                         '0-n'
    #define I3_RES_EME_STAT_POS_PRND_NR_TYPE                         unsigned char
        // current actual position of the drive train (PRND) / aktuelle Ist-Position des Antriebsstrangs (PRND)

#define I3_PID_EME_AE_LSC_LADEN                                      0xDEDE
        // Feedback on the charging process / Rückmeldung zum Ladeverfahrens

    #define I3_RES_EME_STAT_LADEVERFAHREN_NR_0XDEDE                  (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_LADEVERFAHREN_NR_0XDEDE_UNIT             '0-n'
    #define I3_RES_EME_STAT_LADEVERFAHREN_NR_0XDEDE_TYPE             unsigned char
        // Type of charge type / Art des Ladetyps

    #define I3_RES_EME_STAT_LADESTATUS_NR_0XDEDE                     (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_LADESTATUS_NR_0XDEDE_UNIT                '0-n'
    #define I3_RES_EME_STAT_LADESTATUS_NR_0XDEDE_TYPE                unsigned char
        // Type of charge status / Art des Ladestatus

    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT_0XDEDE           (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT_0XDEDE_UNIT      'h'
    #define I3_RES_EME_STAT_BEGINN_FENSTER_STD_WERT_0XDEDE_TYPE      unsigned char
        // Only with AC charging: Start of the favorable charging window (hours) / Nur bei AC-Laden: Beginn des günstigen
        // Ladefensters (Stunden)

    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT_0XDEDE           (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT_0XDEDE_UNIT      'min'
    #define I3_RES_EME_STAT_BEGINN_FENSTER_MIN_WERT_0XDEDE_TYPE      unsigned char
        // Only with AC charging: Start of the favorable charging window (minutes) / Nur bei AC-Laden: Beginn des
        // günstigen Ladefensters (Minuten)

    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT_0XDEDE             (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT_0XDEDE_UNIT        'h'
    #define I3_RES_EME_STAT_ENDE_FENSTER_STD_WERT_0XDEDE_TYPE        unsigned char
        // Only with AC charging: End of the favorable charging window (hours) / Nur bei AC-Laden: Ende des günstigen
        // Ladefensters (Stunden)

    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT_0XDEDE             (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT_0XDEDE_UNIT        'min'
    #define I3_RES_EME_STAT_ENDE_FENSTER_MIN_WERT_0XDEDE_TYPE        unsigned char
        // Only with AC charging: End of the favorable charging window (minutes) / Nur bei AC-Laden: Ende des günstigen
        // Ladefensters (Minuten)

    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR_0XDEDE           (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR_0XDEDE_UNIT      '0-n'
    #define I3_RES_EME_STAT_LADEFENSTER1_AUSWAHL_NR_0XDEDE_TYPE      unsigned char
        // Only with AC charging, two-time alarm clock: selection of the favorable charging window / Nur bei AC-Laden,
        // Zwei Zeit Wecker: Auswahl des günstigen Ladefensters

    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR_0XDEDE           (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR_0XDEDE_UNIT      '0-n'
    #define I3_RES_EME_STAT_LADEFENSTER2_AUSWAHL_NR_0XDEDE_TYPE      unsigned char
        // Only with AC charging, two-time alarm clock: selection of the favorable charging window / Nur bei AC-Laden,
        // Zwei Zeit Wecker: Auswahl des günstigen Ladefensters

    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR_0XDEDE         (RXBUF_UCHAR(8))
    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR_0XDEDE_UNIT    '0-n'
    #define I3_RES_EME_STAT_FAKTOR_STROMBEGRENZUNG_NR_0XDEDE_TYPE    unsigned char
        // Only with AC charging: Acknowledgment of the current limitation / Nur bei AC-Laden: Rückmeldung der
        // Strombegrenzung

    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR_0XDEDE        (RXBUF_UCHAR(9))
    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR_0XDEDE_UNIT   '0-n'
    #define I3_RES_EME_STAT_STROMBEGRENZUNG_AUSWAHL_NR_0XDEDE_TYPE   unsigned char
        // Acknowledgment of the AC current limitation selection: Only with AC charging / Rückmeldung der AC-
        // Strombegrenzungauswahl: Nur bei AC-Laden

    #define I3_RES_EME_STAT_POLY_TIM_1_WERT_0XDEDE                   (RXBUF_UCHAR(10)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_1_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: time (standardized) of the first support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des ersten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_1_WERT_0XDEDE                   (RXBUF_UINT(11)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_1_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_POLY_SOC_1_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: SOC of the first support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des ersten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_2_WERT_0XDEDE                   (RXBUF_UCHAR(13)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_2_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: time (normalized) of the second support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des zweiten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_2_WERT_0XDEDE                   (RXBUF_UINT(14)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_2_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_POLY_SOC_2_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: SOC of the second support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des zweiten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_3_WERT_0XDEDE                   (RXBUF_UCHAR(16)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_3_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: time (standardized) of the third support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des dritten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_3_WERT_0XDEDE                   (RXBUF_UINT(17)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_3_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_POLY_SOC_3_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: SOC of the third support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des dritten Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_4_WERT_0XDEDE                   (RXBUF_UCHAR(19)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_4_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: time (standardized) of the fourth support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des vierten Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_4_WERT_0XDEDE                   (RXBUF_UINT(20)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_4_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_POLY_SOC_4_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: SOC of the fifth support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des fünften Stützpunktes

    #define I3_RES_EME_STAT_POLY_TIM_5_WERT_0XDEDE                   (RXBUF_UCHAR(22)*0.01f)
    #define I3_RES_EME_STAT_POLY_TIM_5_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: time (standardized) of the fifth support point / Rückmeldung der SOC
        // Unterstützpunkte: Zeit(normiert) des fünften Stützpunktes

    #define I3_RES_EME_STAT_POLY_SOC_5_WERT_0XDEDE                   (RXBUF_UINT(23)*0.01f)
    #define I3_RES_EME_STAT_POLY_SOC_5_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_POLY_SOC_5_WERT_0XDEDE_TYPE              float
        // Feedback from the SOC support points: SOC of the fifth support point / Rückmeldung der SOC Unterstützpunkte:
        // SOC des fünften Stützpunktes

    #define I3_RES_EME_STAT_HV_SOC_IST_WERT_0XDEDE                   (RXBUF_UINT(25)*0.01f)
    #define I3_RES_EME_STAT_HV_SOC_IST_WERT_0XDEDE_UNIT              '%'
    #define I3_RES_EME_STAT_HV_SOC_IST_WERT_0XDEDE_TYPE              float
        // Current SOC of the HV battery / Aktueller SOC der HV-Batterie

    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT_0XDEDE               (RXBUF_UCHAR(27)*5.0f)
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT_0XDEDE_UNIT          'min'
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_WERT_0XDEDE_TYPE          float
        // Loading time forecast / Ladezeitprognose

    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT_0XDEDE               (RXBUF_UCHAR(28))
    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT_0XDEDE_UNIT          'V'
    #define I3_RES_EME_STAT_LADEN_SPANNUNG_WERT_0XDEDE_TYPE          unsigned char
        // AC charging voltage (only for AC charging) / AC-Ladespannung (nur bei AC Laden)

    #define I3_RES_EME_STAT_LADEN_STROM_WERT_0XDEDE                  (RXBUF_UCHAR(29))
    #define I3_RES_EME_STAT_LADEN_STROM_WERT_0XDEDE_UNIT             'A'
    #define I3_RES_EME_STAT_LADEN_STROM_WERT_0XDEDE_TYPE             unsigned char
        // AC charging current (only for AC charging) / AC-Ladestrom (nur bei AC Laden)

    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT_0XDEDE            (RXBUF_UINT32(30)*3600.0f)
    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT_0XDEDE_UNIT       'Ws'
    #define I3_RES_EME_STAT_ENERGIEINHALT_IST_WERT_0XDEDE_TYPE       float
        // Predicted energy content depending on the state of charge and on-board power consumption / Prognostizierte
        // Energieinhalt in Abhängigkeit des Ladezustands und des Bordnetzverbrauches

    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR_0XDEDE             (RXBUF_UCHAR(34))
    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR_0XDEDE_UNIT        '0-n'
    #define I3_RES_EME_STAT_LSC_TRIGGER_INHALT_NR_0XDEDE_TYPE        unsigned char
        // Status of the LSC trigger / Status des LSC-Triggers

    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT_0XDEDE            (RXBUF_UINT32(35))
    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT_0XDEDE_UNIT       'Ws'
    #define I3_RES_EME_STAT_ENERGIEINHALT_MAX_WERT_0XDEDE_TYPE       unsigned long
        // Maximum possible energy content of the high-voltage storage system / Maximal möglicher Energieinhalt des
        // Hochvoltspeichers

    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT_0XDEDE          (RXBUF_UINT(39))
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT_0XDEDE_UNIT     'min'
    #define I3_RES_EME_STAT_LADEN_PROGNOSE_REST_WERT_0XDEDE_TYPE     unsigned short
        // Predicted remaining charging time: 0-65531 = value range; 65533 = Not available; 65532 = initialization; 65534
        // = error; 65535 = signal valid / Prognostizierte Restladedauer: 0-65531 = Wertebereich; 65533 = Nicht
        // verfügbar; 65532 = Initialisierung; 65534  = Fehler; 65535 = Signal ugültig

    #define I3_RES_EME_STAT_LADESTECKER_NR_0XDEDE                    (RXBUF_UCHAR(41))
    #define I3_RES_EME_STAT_LADESTECKER_NR_0XDEDE_UNIT               '0-n'
    #define I3_RES_EME_STAT_LADESTECKER_NR_0XDEDE_TYPE               unsigned char
        // Condition of charging plug / Zustand Ladestecker

// Skipping UI_DERATING_EM1 on 0xDEDF which takes arguments

// Skipping UI_DERATING_EM2 on 0xDEE0 which takes arguments

// Skipping KLASSIERUNG_ZUG_SCHUB_LOESCHEN on 0xDEE5 which takes arguments

#define I3_PID_EME_HISTOGRAMM_ANTRIEB                                0xDEED
        // History values for drive / Historienwerte für Antrieb

    #define I3_RES_EME_STAT_ANTR_HIST_010_WERT                       (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_ANTR_HIST_010_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_010 / Historienwert ANTR_HIST_010

    #define I3_RES_EME_STAT_ANTR_HIST_011_WERT                       (RXBUF_UINT32(4))
    #define I3_RES_EME_STAT_ANTR_HIST_011_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_011 / Historienwert ANTR_HIST_011

    #define I3_RES_EME_STAT_ANTR_HIST_012_WERT                       (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_ANTR_HIST_012_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_012 / Historienwert ANTR_HIST_012

    #define I3_RES_EME_STAT_ANTR_HIST_013_WERT                       (RXBUF_UINT32(12))
    #define I3_RES_EME_STAT_ANTR_HIST_013_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_013 / Historienwert ANTR_HIST_013

    #define I3_RES_EME_STAT_ANTR_HIST_014_WERT                       (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_ANTR_HIST_014_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_014 / Historienwert ANTR_HIST_014

    #define I3_RES_EME_STAT_ANTR_HIST_015_WERT                       (RXBUF_UINT32(20))
    #define I3_RES_EME_STAT_ANTR_HIST_015_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_015 / Historienwert ANTR_HIST_015

    #define I3_RES_EME_STAT_ANTR_HIST_016_WERT                       (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_ANTR_HIST_016_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_016 / Historienwert ANTR_HIST_016

    #define I3_RES_EME_STAT_ANTR_HIST_017_WERT                       (RXBUF_UINT32(28))
    #define I3_RES_EME_STAT_ANTR_HIST_017_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_017 / Historienwert ANTR_HIST_017

    #define I3_RES_EME_STAT_ANTR_HIST_018_WERT                       (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_ANTR_HIST_018_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_018 / Historienwert ANTR_HIST_018

    #define I3_RES_EME_STAT_ANTR_HIST_019_WERT                       (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_ANTR_HIST_019_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_019 / Historienwert ANTR_HIST_019

    #define I3_RES_EME_STAT_ANTR_HIST_020_WERT                       (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_ANTR_HIST_020_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_020 / Historienwert ANTR_HIST_020

    #define I3_RES_EME_STAT_ANTR_HIST_021_WERT                       (RXBUF_UINT32(44))
    #define I3_RES_EME_STAT_ANTR_HIST_021_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_021 / Historienwert ANTR_HIST_021

    #define I3_RES_EME_STAT_ANTR_HIST_022_WERT                       (RXBUF_UINT32(48))
    #define I3_RES_EME_STAT_ANTR_HIST_022_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_022 / Historienwert ANTR_HIST_022

    #define I3_RES_EME_STAT_ANTR_HIST_023_WERT                       (RXBUF_UINT32(52))
    #define I3_RES_EME_STAT_ANTR_HIST_023_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_023 / Historienwert ANTR_HIST_023

    #define I3_RES_EME_STAT_ANTR_HIST_024_WERT                       (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_ANTR_HIST_024_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_024 / Historienwert ANTR_HIST_024

    #define I3_RES_EME_STAT_ANTR_HIST_025_WERT                       (RXBUF_UINT32(60))
    #define I3_RES_EME_STAT_ANTR_HIST_025_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_025 / Historienwert ANTR_HIST_025

    #define I3_RES_EME_STAT_ANTR_HIST_026_WERT                       (RXBUF_UINT32(64))
    #define I3_RES_EME_STAT_ANTR_HIST_026_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_026 / Historienwert ANTR_HIST_026

    #define I3_RES_EME_STAT_ANTR_HIST_027_WERT                       (RXBUF_UINT32(68))
    #define I3_RES_EME_STAT_ANTR_HIST_027_WERT_TYPE                  unsigned long
        // History value ANTR_HIST_027 / Historienwert ANTR_HIST_027

    #define I3_RES_EME_STAT_ANTR_HIST_1601_WERT                      (RXBUF_UINT32(72))
    #define I3_RES_EME_STAT_ANTR_HIST_1601_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1601 / Historienwert ANTR_HIST_1601

    #define I3_RES_EME_STAT_ANTR_HIST_1602_WERT                      (RXBUF_UINT32(76))
    #define I3_RES_EME_STAT_ANTR_HIST_1602_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1602 / Historienwert ANTR_HIST_1602

    #define I3_RES_EME_STAT_ANTR_HIST_1603_WERT                      (RXBUF_UINT32(80))
    #define I3_RES_EME_STAT_ANTR_HIST_1603_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1603 / Historienwert ANTR_HIST_1603

    #define I3_RES_EME_STAT_ANTR_HIST_1604_WERT                      (RXBUF_UINT32(84))
    #define I3_RES_EME_STAT_ANTR_HIST_1604_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1604 / Historienwert ANTR_HIST_1604

    #define I3_RES_EME_STAT_ANTR_HIST_1605_WERT                      (RXBUF_UINT32(88))
    #define I3_RES_EME_STAT_ANTR_HIST_1605_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1605 / Historienwert ANTR_HIST_1605

    #define I3_RES_EME_STAT_ANTR_HIST_1606_WERT                      (RXBUF_UINT32(92))
    #define I3_RES_EME_STAT_ANTR_HIST_1606_WERT_TYPE                 unsigned long
        // History value ANTR_HIST_1606 / Historienwert ANTR_HIST_1606

    #define I3_RES_EME_STAT_ANTR_HIST_3214_WERT                      (RXBUF_UINT32(96)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3214_WERT_TYPE                 float
        // History value ANTR_HIST_3214 / Historienwert ANTR_HIST_3214

    #define I3_RES_EME_STAT_ANTR_HIST_3215_WERT                      (RXBUF_UINT32(100)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3215_WERT_TYPE                 float
        // History value ANTR_HIST_3215 / Historienwert ANTR_HIST_3215

    #define I3_RES_EME_STAT_ANTR_HIST_3216_WERT                      (RXBUF_UINT32(104)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3216_WERT_TYPE                 float
        // History value ANTR_HIST_3216 / Historienwert ANTR_HIST_3216

    #define I3_RES_EME_STAT_ANTR_HIST_3217_WERT                      (RXBUF_UINT32(108)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3217_WERT_TYPE                 float
        // History value ANTR_HIST_3217 / Historienwert ANTR_HIST_3217

    #define I3_RES_EME_STAT_ANTR_HIST_3218_WERT                      (RXBUF_UINT32(112)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3218_WERT_TYPE                 float
        // History value ANTR_HIST_3218 / Historienwert ANTR_HIST_3218

    #define I3_RES_EME_STAT_ANTR_HIST_3219_WERT                      (RXBUF_UINT32(116)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3219_WERT_TYPE                 float
        // History value ANTR_HIST_3219 / Historienwert ANTR_HIST_3219

    #define I3_RES_EME_STAT_ANTR_HIST_3220_WERT                      (RXBUF_UINT32(120)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3220_WERT_TYPE                 float
        // History value ANTR_HIST_3220 / Historienwert ANTR_HIST_3220

    #define I3_RES_EME_STAT_ANTR_HIST_3221_WERT                      (RXBUF_UINT32(124)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3221_WERT_TYPE                 float
        // History value ANTR_HIST_3221 / Historienwert ANTR_HIST_3221

    #define I3_RES_EME_STAT_ANTR_HIST_3278_WERT                      (RXBUF_UINT32(128)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3278_WERT_TYPE                 float
        // History value ANTR_HIST_3278 / Historienwert ANTR_HIST_3278

    #define I3_RES_EME_STAT_ANTR_HIST_3279_WERT                      (RXBUF_UINT32(132)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3279_WERT_TYPE                 float
        // History value ANTR_HIST_3279 / Historienwert ANTR_HIST_3279

    #define I3_RES_EME_STAT_ANTR_HIST_3280_WERT                      (RXBUF_UINT32(136)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3280_WERT_TYPE                 float
        // History value ANTR_HIST_3280 / Historienwert ANTR_HIST_3280

    #define I3_RES_EME_STAT_ANTR_HIST_3281_WERT                      (RXBUF_UINT32(140)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3281_WERT_TYPE                 float
        // History value ANTR_HIST_3281 / Historienwert ANTR_HIST_3281

    #define I3_RES_EME_STAT_ANTR_HIST_3282_WERT                      (RXBUF_UINT32(144)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3282_WERT_TYPE                 float
        // History value ANTR_HIST_3282 / Historienwert ANTR_HIST_3282

    #define I3_RES_EME_STAT_ANTR_HIST_3283_WERT                      (RXBUF_UINT32(148)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3283_WERT_TYPE                 float
        // History value ANTR_HIST_3283 / Historienwert ANTR_HIST_3283

    #define I3_RES_EME_STAT_ANTR_HIST_3284_WERT                      (RXBUF_UINT32(152)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3284_WERT_TYPE                 float
        // History value ANTR_HIST_3284 / Historienwert ANTR_HIST_3284

    #define I3_RES_EME_STAT_ANTR_HIST_3285_WERT                      (RXBUF_UINT32(156)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3285_WERT_TYPE                 float
        // History value ANTR_HIST_3285 / Historienwert ANTR_HIST_3285

    #define I3_RES_EME_STAT_ANTR_HIST_3286_WERT                      (RXBUF_UINT32(160)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3286_WERT_TYPE                 float
        // History value ANTR_HIST_3286 / Historienwert ANTR_HIST_3286

    #define I3_RES_EME_STAT_ANTR_HIST_3287_WERT                      (RXBUF_UINT32(164)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3287_WERT_TYPE                 float
        // History value ANTR_HIST_3287 / Historienwert ANTR_HIST_3287

    #define I3_RES_EME_STAT_ANTR_HIST_3288_WERT                      (RXBUF_UINT32(168)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3288_WERT_TYPE                 float
        // History value ANTR_HIST_3288 / Historienwert ANTR_HIST_3288

    #define I3_RES_EME_STAT_ANTR_HIST_3289_WERT                      (RXBUF_UINT32(172)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3289_WERT_TYPE                 float
        // History value ANTR_HIST_3289 / Historienwert ANTR_HIST_3289

    #define I3_RES_EME_STAT_ANTR_HIST_3290_WERT                      (RXBUF_UINT32(176)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3290_WERT_TYPE                 float
        // History value ANTR_HIST_3290 / Historienwert ANTR_HIST_3290

// Skipping REX_HISTOGRAMM on 0xDEEE which takes arguments

#define I3_PID_EME_HISTOGRAMM_DEGRADATION                            0xDEEF
        // Historical values degradation / Historienwerte Degradation

    #define I3_RES_EME_STAT_ANTR_HIST_3238_WERT                      (RXBUF_UINT32(0)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3238_WERT_TYPE                 float
        // History value ANTR_HIST_3238 / Historienwert ANTR_HIST_3238

    #define I3_RES_EME_STAT_ANTR_HIST_3239_WERT                      (RXBUF_UINT32(4)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3239_WERT_TYPE                 float
        // History value ANTR_HIST_3239 / Historienwert ANTR_HIST_3239

    #define I3_RES_EME_STAT_ANTR_HIST_3240_WERT                      (RXBUF_UINT32(8)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3240_WERT_TYPE                 float
        // History value ANTR_HIST_3240 / Historienwert ANTR_HIST_3240

    #define I3_RES_EME_STAT_ANTR_HIST_3241_WERT                      (RXBUF_UINT32(12)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3241_WERT_TYPE                 float
        // History value ANTR_HIST_3241 / Historienwert ANTR_HIST_3241

    #define I3_RES_EME_STAT_ANTR_HIST_3242_WERT                      (RXBUF_UINT32(16)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3242_WERT_TYPE                 float
        // History value ANTR_HIST_3242 / Historienwert ANTR_HIST_3242

    #define I3_RES_EME_STAT_ANTR_HIST_3243_WERT                      (RXBUF_UINT32(20)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3243_WERT_TYPE                 float
        // History value ANTR_HIST_3243 / Historienwert ANTR_HIST_3243

    #define I3_RES_EME_STAT_ANTR_HIST_3244_WERT                      (RXBUF_UINT32(24)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3244_WERT_TYPE                 float
        // History value ANTR_HIST_3244 / Historienwert ANTR_HIST_3244

    #define I3_RES_EME_STAT_ANTR_HIST_3245_WERT                      (RXBUF_UINT32(28)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3245_WERT_TYPE                 float
        // History value ANTR_HIST_3245 / Historienwert ANTR_HIST_3245

    #define I3_RES_EME_STAT_ANTR_HIST_3246_WERT                      (RXBUF_UINT32(32)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3246_WERT_TYPE                 float
        // History value ANTR_HIST_3246 / Historienwert ANTR_HIST_3246

    #define I3_RES_EME_STAT_ANTR_HIST_3247_WERT                      (RXBUF_UINT32(36)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3247_WERT_TYPE                 float
        // History value ANTR_HIST_3247 / Historienwert ANTR_HIST_3247

    #define I3_RES_EME_STAT_ANTR_HIST_3248_WERT                      (RXBUF_UINT32(40)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3248_WERT_TYPE                 float
        // History value ANTR_HIST_3248 / Historienwert ANTR_HIST_3248

    #define I3_RES_EME_STAT_ANTR_HIST_3249_WERT                      (RXBUF_UINT32(44)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3249_WERT_TYPE                 float
        // History value ANTR_HIST_3249 / Historienwert ANTR_HIST_3249

    #define I3_RES_EME_STAT_ANTR_HIST_3250_WERT                      (RXBUF_UINT32(48)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3250_WERT_TYPE                 float
        // History value ANTR_HIST_3250 / Historienwert ANTR_HIST_3250

    #define I3_RES_EME_STAT_ANTR_HIST_3251_WERT                      (RXBUF_UINT32(52)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3251_WERT_TYPE                 float
        // History value ANTR_HIST_3251 / Historienwert ANTR_HIST_3251

    #define I3_RES_EME_STAT_ANTR_HIST_3252_WERT                      (RXBUF_UINT32(56)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3252_WERT_TYPE                 float
        // History value ANTR_HIST_3252 / Historienwert ANTR_HIST_3252

    #define I3_RES_EME_STAT_ANTR_HIST_3253_WERT                      (RXBUF_UINT32(60)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3253_WERT_TYPE                 float
        // History value ANTR_HIST_3253 / Historienwert ANTR_HIST_3253

    #define I3_RES_EME_STAT_ANTR_HIST_3254_WERT                      (RXBUF_UINT32(64)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3254_WERT_TYPE                 float
        // History value ANTR_HIST_3254 / Historienwert ANTR_HIST_3254

    #define I3_RES_EME_STAT_ANTR_HIST_3255_WERT                      (RXBUF_UINT32(68)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3255_WERT_TYPE                 float
        // History value ANTR_HIST_3255 / Historienwert ANTR_HIST_3255

    #define I3_RES_EME_STAT_ANTR_HIST_3256_WERT                      (RXBUF_UINT32(72)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3256_WERT_TYPE                 float
        // History value ANTR_HIST_3256 / Historienwert ANTR_HIST_3256

    #define I3_RES_EME_STAT_ANTR_HIST_3257_WERT                      (RXBUF_UINT32(76)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3257_WERT_TYPE                 float
        // History value ANTR_HIST_3257 / Historienwert ANTR_HIST_3257

    #define I3_RES_EME_STAT_ANTR_HIST_3258_WERT                      (RXBUF_UINT32(80)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3258_WERT_TYPE                 float
        // History value ANTR_HIST_3258 / Historienwert ANTR_HIST_3258

    #define I3_RES_EME_STAT_ANTR_HIST_3259_WERT                      (RXBUF_UINT32(84)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3259_WERT_TYPE                 float
        // History value ANTR_HIST_3259 / Historienwert ANTR_HIST_3259

    #define I3_RES_EME_STAT_ANTR_HIST_3260_WERT                      (RXBUF_UINT32(88)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3260_WERT_TYPE                 float
        // History value ANTR_HIST_3260 / Historienwert ANTR_HIST_3260

    #define I3_RES_EME_STAT_ANTR_HIST_3261_WERT                      (RXBUF_UINT32(92)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3261_WERT_TYPE                 float
        // History value ANTR_HIST_3261 / Historienwert ANTR_HIST_3261

    #define I3_RES_EME_STAT_ANTR_HIST_3262_WERT                      (RXBUF_UINT32(96)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3262_WERT_TYPE                 float
        // History value ANTR_HIST_3262 / Historienwert ANTR_HIST_3262

    #define I3_RES_EME_STAT_ANTR_HIST_3263_WERT                      (RXBUF_UINT32(100)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3263_WERT_TYPE                 float
        // History value ANTR_HIST_3263 / Historienwert ANTR_HIST_3263

    #define I3_RES_EME_STAT_ANTR_HIST_3264_WERT                      (RXBUF_UINT32(104)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3264_WERT_TYPE                 float
        // History value ANTR_HIST_3264 / Historienwert ANTR_HIST_3264

    #define I3_RES_EME_STAT_ANTR_HIST_3265_WERT                      (RXBUF_UINT32(108)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3265_WERT_TYPE                 float
        // History value ANTR_HIST_3265 / Historienwert ANTR_HIST_3265

    #define I3_RES_EME_STAT_ANTR_HIST_3266_WERT                      (RXBUF_UINT32(112)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3266_WERT_TYPE                 float
        // History value ANTR_HIST_3266 / Historienwert ANTR_HIST_3266

    #define I3_RES_EME_STAT_ANTR_HIST_3267_WERT                      (RXBUF_UINT32(116)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3267_WERT_TYPE                 float
        // History value ANTR_HIST_3267 / Historienwert ANTR_HIST_3267

    #define I3_RES_EME_STAT_ANTR_HIST_3268_WERT                      (RXBUF_UINT32(120)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3268_WERT_TYPE                 float
        // History value ANTR_HIST_3268 / Historienwert ANTR_HIST_3268

    #define I3_RES_EME_STAT_ANTR_HIST_3269_WERT                      (RXBUF_UINT32(124)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3269_WERT_TYPE                 float
        // History value ANTR_HIST_3269 / Historienwert ANTR_HIST_3269

    #define I3_RES_EME_STAT_ANTR_HIST_3270_WERT                      (RXBUF_UINT32(128)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3270_WERT_TYPE                 float
        // History value ANTR_HIST_3270 / Historienwert ANTR_HIST_3270

    #define I3_RES_EME_STAT_ANTR_HIST_3271_WERT                      (RXBUF_UINT32(132)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3271_WERT_TYPE                 float
        // History value ANTR_HIST_3271 / Historienwert ANTR_HIST_3271

    #define I3_RES_EME_STAT_ANTR_HIST_3272_WERT                      (RXBUF_UINT32(136)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3272_WERT_TYPE                 float
        // History value ANTR_HIST_3272 / Historienwert ANTR_HIST_3272

    #define I3_RES_EME_STAT_ANTR_HIST_3273_WERT                      (RXBUF_UINT32(140)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3273_WERT_TYPE                 float
        // History value ANTR_HIST_3273 / Historienwert ANTR_HIST_3273

    #define I3_RES_EME_STAT_ANTR_HIST_3274_WERT                      (RXBUF_UINT32(144)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3274_WERT_TYPE                 float
        // History value ANTR_HIST_3274 / Historienwert ANTR_HIST_3274

    #define I3_RES_EME_STAT_ANTR_HIST_3275_WERT                      (RXBUF_UINT32(148)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3275_WERT_TYPE                 float
        // History value ANTR_HIST_3275 / Historienwert ANTR_HIST_3275

    #define I3_RES_EME_STAT_ANTR_HIST_3276_WERT                      (RXBUF_UINT32(152)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3276_WERT_TYPE                 float
        // History value ANTR_HIST_3276 / Historienwert ANTR_HIST_3276

    #define I3_RES_EME_STAT_ANTR_HIST_3277_WERT                      (RXBUF_UINT32(156)*0.01f)
    #define I3_RES_EME_STAT_ANTR_HIST_3277_WERT_TYPE                 float
        // History value ANTR_HIST_3277 / Historienwert ANTR_HIST_3277

#define I3_PID_EME_AUTOP_SBW                                         0xDEFB
        // Frequency counter for the reasons for Auto-P and SW version shift-by-wire / Häufigkeitszähler für die Gründe
        // von Auto-P und SW Version Shift-by-Wire

    #define I3_RES_EME_STAT_COUNT_AUTOP_LVEH_WERT                    (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_COUNT_AUTOP_LVEH_WERT_TYPE               unsigned short
        // Exit frequency counter for Auto-P on vehicle / Häufigkeitszähler für Auto-P bei Fahrzeug verlassen

    #define I3_RES_EME_STAT_COUNT_AUTOP_EMF_N_WERT                   (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_COUNT_AUTOP_EMF_N_WERT_TYPE              unsigned short
        // Frequency counter for Auto-P by EMF call for help in N / Häufigkeitszähler für Auto-P durch EMF-Hilferuf in N

    #define I3_RES_EME_STAT_COUNT_AUTOP_EMF_DR_WERT                  (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_COUNT_AUTOP_EMF_DR_WERT_TYPE             unsigned short
        // Frequency counter for Auto-P by EMF call for help in D or R / Häufigkeitszähler für Auto-P durch EMF-Hilferuf
        // in D oder R

    #define I3_RES_EME_STAT_COUNT_AUTOP_FB_WERT                      (RXBUF_UINT(6))
    #define I3_RES_EME_STAT_COUNT_AUTOP_FB_WERT_TYPE                 unsigned short
        // Frequency counter for Auto-P in the event of loss of driving readiness / Häufigkeitszähler für Auto-P bei
        // Fahrbereitschaftsverlust

    #define I3_RES_EME_STAT_COUNT_AUTOP_KL15_WERT                    (RXBUF_UINT(8))
    #define I3_RES_EME_STAT_COUNT_AUTOP_KL15_WERT_TYPE               unsigned short
        // Frequency counter for Auto-P when terminal 15 is switched off / Häufigkeitszähler für Auto-P bei Klemme15
        // Abschaltung

    #define I3_RES_EME_STAT_COUNT_AUTOP_CHRGWIRE_WERT                (RXBUF_UINT(10))
    #define I3_RES_EME_STAT_COUNT_AUTOP_CHRGWIRE_WERT_TYPE           unsigned short
        // Frequency counter for Auto-P when the charging cable is plugged in / Häufigkeitszähler für Auto-P bei
        // gestecktem Ladekabel

    // Can't process STAT_SW_VERSION_SBW_WERT - don't know type motorola float (*** this will mean all the following offsets are wrong!!! ****)

#define I3_PID_EME_FAHRSTUFEN_ZAEHLER_SBW                            0xDEFF
        // Frequency counter of speed step changes / Häufigkeitszähler von Fahrstufenwechsel

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_R_WERT            (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_R_WERT_TYPE       unsigned long
        // Number of speed step changes from P to R / Anzahl Fahrstufenwechsel von P nach R

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_N_WERT            (RXBUF_UINT32(4))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_N_WERT_TYPE       unsigned long
        // Number of speed step changes from P to N / Anzahl Fahrstufenwechsel von P nach N

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_D_WERT            (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_P_NACH_D_WERT_TYPE       unsigned long
        // Number of speed step changes from P to D / Anzahl Fahrstufenwechsel von P nach D

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_P_WERT            (RXBUF_UINT32(12))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_P_WERT_TYPE       unsigned long
        // Number of speed step changes from R to P / Anzahl Fahrstufenwechsel von R nach P

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_N_WERT            (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_N_WERT_TYPE       unsigned long
        // Number of speed step changes from R to N / Anzahl Fahrstufenwechsel von R nach N

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_D_WERT            (RXBUF_UINT32(20))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_R_NACH_D_WERT_TYPE       unsigned long
        // Number of speed step changes from R to D / Anzahl Fahrstufenwechsel von R nach D

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_P_WERT            (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_P_WERT_TYPE       unsigned long
        // Number of speed step changes from N to P / Anzahl Fahrstufenwechsel von N nach P

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_R_WERT            (RXBUF_UINT32(28))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_R_WERT_TYPE       unsigned long
        // Number of speed step changes from N to R / Anzahl Fahrstufenwechsel von N nach R

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_D_WERT            (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_N_NACH_D_WERT_TYPE       unsigned long
        // Number of speed step changes from N to D / Anzahl Fahrstufenwechsel von N nach D

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_P_WERT            (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_P_WERT_TYPE       unsigned long
        // Number of speed step changes from D to P / Anzahl Fahrstufenwechsel von D nach P

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_R_WERT            (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_R_WERT_TYPE       unsigned long
        // Number of speed step changes from D to R / Anzahl Fahrstufenwechsel von D nach R

    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_N_WERT            (RXBUF_UINT32(44))
    #define I3_RES_EME_STAT_ZAEHLER_WECHSEL_D_NACH_N_WERT_TYPE       unsigned long
        // Number of speed step changes from D to N / Anzahl Fahrstufenwechsel von D nach N

// Skipping VERBAUKENNUNG_UCX_RUECKSETZEN on 0xDF1F which takes arguments

// Skipping LADESTROM_EINSTELLUNG on 0xDF45 which takes arguments

#define I3_PID_EME_HISTOGRAMM_LADEKOORDINATOR                        0xDF49
        // Charge coordinator histograms / Histogramme des Ladekoordinators

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_1_WERT                 (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_1_WERT_TYPE            unsigned long
        // Power histrogram value 1 from internal charger / Leistungshistrogramm Wert 1 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_2_WERT                 (RXBUF_UINT32(4))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_2_WERT_TYPE            unsigned long
        // Power histrogram value 2 from the internal charger / Leistungshistrogramm Wert 2 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_3_WERT                 (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_3_WERT_TYPE            unsigned long
        // Power histrogram value 3 from the internal charger / Leistungshistrogramm Wert 3 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_4_WERT                 (RXBUF_UINT32(12))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_4_WERT_TYPE            unsigned long
        // Power histrogram value 4 from the internal charger / Leistungshistrogramm Wert 4 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_5_WERT                 (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_5_WERT_TYPE            unsigned long
        // Power histrogram value 5 from the internal charger / Leistungshistrogramm Wert 5 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_6_WERT                 (RXBUF_UINT32(20))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_INT_6_WERT_TYPE            unsigned long
        // Power histrogram value 6 from internal charger / Leistungshistrogramm Wert 6 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_1_WERT                     (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_1_WERT_TYPE                unsigned long
        // Temperature histogram value 1 from the internal charger / Temperaturhistogramm Wert 1 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_2_WERT                     (RXBUF_UINT32(28))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_2_WERT_TYPE                unsigned long
        // Temperature histogram value 2 from the internal charger / Temperaturhistogramm Wert 2 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_3_WERT                     (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_3_WERT_TYPE                unsigned long
        // Temperature histogram value 3 from the internal charger / Temperaturhistogramm Wert 3 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_4_WERT                     (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_4_WERT_TYPE                unsigned long
        // Temperature histogram value 4 from the internal charger / Temperaturhistogramm Wert 4 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_5_WERT                     (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_5_WERT_TYPE                unsigned long
        // Temperature histogram value 5 from the internal charger / Temperaturhistogramm Wert 5 vom internen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_INT_6_WERT                     (RXBUF_UINT32(44))
    #define I3_RES_EME_STAT_TEMP_HIST_INT_6_WERT_TYPE                unsigned long
        // Temperature histogram value 6 from the internal charger / Temperaturhistogramm Wert 6 vom internen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_1_WERT                 (RXBUF_UINT32(48))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_1_WERT_TYPE            unsigned long
        // Power histrogram value 1 from external charger / Leistungshistrogramm Wert 1 vom externen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_2_WERT                 (RXBUF_UINT32(52))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_2_WERT_TYPE            unsigned long
        // Power histrogram value 2 from external charger / Leistungshistrogramm Wert 2 vom externen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_3_WERT                 (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_3_WERT_TYPE            unsigned long
        // Power histrogram value 3 from external charger / Leistungshistrogramm Wert 3 vom externen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_4_WERT                 (RXBUF_UINT32(60))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_4_WERT_TYPE            unsigned long
        // Power histrogram value 4 from external charger / Leistungshistrogramm Wert 4 vom externen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_5_WERT                 (RXBUF_UINT32(64))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_5_WERT_TYPE            unsigned long
        // Power histrogram value 5 from external charger / Leistungshistrogramm Wert 5 vom externen Ladegerät

    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_6_WERT                 (RXBUF_UINT32(68))
    #define I3_RES_EME_STAT_LEISTUNG_HIST_EXT_6_WERT_TYPE            unsigned long
        // Power histrogram value 6 from external charger / Leistungshistrogramm Wert 6 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_1_WERT                     (RXBUF_UINT32(72))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_1_WERT_TYPE                unsigned long
        // Temperature histogram value 1 from external charger / Temperaturhistogramm Wert 1 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_2_WERT                     (RXBUF_UINT32(76))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_2_WERT_TYPE                unsigned long
        // Temperature histogram value 2 from the external charger / Temperaturhistogramm Wert 2 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_3_WERT                     (RXBUF_UINT32(80))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_3_WERT_TYPE                unsigned long
        // Temperature histogram value 3 from the external charger / Temperaturhistogramm Wert 3 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_4_WERT                     (RXBUF_UINT32(84))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_4_WERT_TYPE                unsigned long
        // Temperature histogram value 4 from the external charger / Temperaturhistogramm Wert 4 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_5_WERT                     (RXBUF_UINT32(88))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_5_WERT_TYPE                unsigned long
        // Temperature histogram value 5 from the external charger / Temperaturhistogramm Wert 5 vom externen Ladegerät

    #define I3_RES_EME_STAT_TEMP_HIST_EXT_6_WERT                     (RXBUF_UINT32(92))
    #define I3_RES_EME_STAT_TEMP_HIST_EXT_6_WERT_TYPE                unsigned long
        // Temperature histogram value 6 from the external charger / Temperaturhistogramm Wert 6 vom externen Ladegerät

#define I3_PID_EME_INVERTER_HISTOGRAMM                               0xDF4D
        // Reading out the calculated lifetime data of the inverter / Auslesen der berechneten Lebenszeitdaten des
        // Inverters

    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_WERT            (RXBUF_UCHAR(0)-10.0)
    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_WERT_UNIT       '%'
    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_WERT_TYPE       unsigned char
        // Total IGBT lifetime consumption / Summierter Lebensdauerverbrauch IGBT

    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_KONST_KUEHLUNG_WERT (RXBUF_UCHAR(1)-10.0)
    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_KONST_KUEHLUNG_WERT_UNIT '%'
    #define I3_RES_EME_STAT_INVERTER_IGBT_LEBENSZEIT_KONST_KUEHLUNG_WERT_TYPE unsigned char
        // Total IGBT service life consumption for a constant coolant temperature of 70 ° C / Summierter
        // Lebensdauerverbrauch IGBT für konstante Kühlmitteltemperatur von 70°C

    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_WERT           (RXBUF_UCHAR(2)-10.0)
    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_WERT_UNIT      '%'
    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_WERT_TYPE      unsigned char
        // Total diode lifetime consumption / Summierter Lebensdauerverbrauch Diode

    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_KONST_KUEHLUNG_WERT (RXBUF_UCHAR(3)-10.0)
    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_KONST_KUEHLUNG_WERT_UNIT '%'
    #define I3_RES_EME_STAT_INVERTER_DIODE_LEBENSZEIT_KONST_KUEHLUNG_WERT_TYPE unsigned char
        // Total service life consumption diode for constant coolant temperature of 70 ° C / Summierter
        // Lebensdauerverbrauch Diode für konstante Kühlmitteltemperatur von 70°C

    #define I3_RES_EME_STAT_INVERTER_RESET_LEBENSZEIT_WERT           (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_INVERTER_RESET_LEBENSZEIT_WERT_TYPE      unsigned char
        // Number of residual overflows that occurred / Anzahl der aufgetretenen Überläufe des Residuums

// Skipping LADEMODUS_WERK on 0xDF50 which takes arguments

// Skipping ELUP_DATEN_RESET on 0xDF51 which takes arguments

// Skipping ROTORLAGESENSOR_WINKELCODE on 0xDF52 which takes arguments

#define I3_PID_EME_INVERTER_RBM_INFO                                 0xDF58
        // RBM information for the non-running inverter diagnosis in I01 and I12 / RBM Information für die nicht
        // durchlaufende Umrichter Diagnose im I01 und I12

    #define I3_RES_EME_STAT_SAE_DTC1_WERT                            (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_TYPE                       unsigned long
        // SAE DTC 1 / SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT                        (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 1 / Zähler für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT                        (RXBUF_UINT(6))
    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 1 / Nenner für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC2_WERT                            (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_TYPE                       unsigned long
        // SAE DTC 2 / SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT                        (RXBUF_UINT(12))
    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 2 / Zähler für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT                        (RXBUF_UINT(14))
    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 2 / Nenner für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC3_WERT                            (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_TYPE                       unsigned long
        // SAE DTC 3 / SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT                        (RXBUF_UINT(20))
    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 3 / Zähler für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT                        (RXBUF_UINT(22))
    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 3 / Nenner für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC4_WERT                            (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_TYPE                       unsigned long
        // SAE DTC 4 / SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT                        (RXBUF_UINT(28))
    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 4 / Zähler für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT                        (RXBUF_UINT(30))
    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 4 / Nenner für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC5_WERT                            (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_TYPE                       unsigned long
        // SAE DTC 5 / SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT                        (RXBUF_UINT(36))
    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 5 / Zähler für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT                        (RXBUF_UINT(38))
    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 5 / Nenner für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC6_WERT                            (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_TYPE                       unsigned long
        // SAE DTC 6 / SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT                        (RXBUF_UINT(44))
    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 6 / Zähler für den SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT                        (RXBUF_UINT(46))
    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 6 / Nenner für den SAE DTC 6

#define I3_PID_EME_DCDC_RBM_INFO                                     0xDF59
        // RBM information for the discontinuous DC / DC converter diagnosis in I01 and I12 / RBM Information für die
        // nicht kontinuierliche DC/DC-Wandler Diagnose in I01 und I12

    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF59                     (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 1 / SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT_0XDF59                 (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 1 / Zähler für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT_0XDF59                 (RXBUF_UINT(6))
    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 1 / Nenner für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF59                     (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 2 / SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT_0XDF59                 (RXBUF_UINT(12))
    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 2 / Zähler für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT_0XDF59                 (RXBUF_UINT(14))
    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 2 / Nenner für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF59                     (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 3 / SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT_0XDF59                 (RXBUF_UINT(20))
    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 3 / Zähler für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT_0XDF59                 (RXBUF_UINT(22))
    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 3 / Nenner für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF59                     (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 4 / SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT_0XDF59                 (RXBUF_UINT(28))
    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 4 / Zähler für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT_0XDF59                 (RXBUF_UINT(30))
    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 4 / Nenner für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF59                     (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 5 / SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT_0XDF59                 (RXBUF_UINT(36))
    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 5 / Zähler für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT_0XDF59                 (RXBUF_UINT(38))
    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 5 / Nenner für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF59                     (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF59_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF59_TYPE                unsigned long
        // SAE DTC 6 / SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT_0XDF59                 (RXBUF_UINT(44))
    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT_0XDF59_TYPE            unsigned short
        // Counter for the SAE DTC 6 / Zähler für den SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT_0XDF59                 (RXBUF_UINT(46))
    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT_0XDF59_TYPE            unsigned short
        // Denominator for the SAE DTC 6 / Nenner für den SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC7_WERT                            (RXBUF_UINT32(48))
    #define I3_RES_EME_STAT_SAE_DTC7_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC7_WERT_TYPE                       unsigned long
        // SAE DTC 7 / SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC_NUM7_WERT                        (RXBUF_UINT(52))
    #define I3_RES_EME_STAT_SAE_DTC_NUM7_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 7 / Zähler für den SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC_DEN7_WERT                        (RXBUF_UINT(54))
    #define I3_RES_EME_STAT_SAE_DTC_DEN7_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 7 / Nenner für den SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC8_WERT                            (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_SAE_DTC8_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC8_WERT_TYPE                       unsigned long
        // SAE DTC 8 / SAE DTC 8

    #define I3_RES_EME_STAT_SAE_DTC_NUM8_WERT                        (RXBUF_UINT(60))
    #define I3_RES_EME_STAT_SAE_DTC_NUM8_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 8 / Zähler für den SAE DTC 8

    #define I3_RES_EME_STAT_SAE_DTC_DEN8_WERT                        (RXBUF_UINT(62))
    #define I3_RES_EME_STAT_SAE_DTC_DEN8_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 8 / Nenner für den SAE DTC 8

#define I3_PID_EME_LADEGERAET_RBM_INFO                               0xDF5A
        // RBM information for the discontinuous charger diagnosis at I01 and I12 / RBM Information für die nicht
        // kontinuierliche Ladegerät Diagnose bei I01 und I12

    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF5A                     (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC1_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 1 / SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT_0XDF5A                 (RXBUF_UINT(4))
    #define I3_RES_EME_STAT_SAE_DTC_NUM1_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 1 / Zähler für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT_0XDF5A                 (RXBUF_UINT(6))
    #define I3_RES_EME_STAT_SAE_DTC_DEN1_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 1 / Nenner für den SAE DTC 1

    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF5A                     (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC2_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 2 / SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT_0XDF5A                 (RXBUF_UINT(12))
    #define I3_RES_EME_STAT_SAE_DTC_NUM2_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 2 / Zähler für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT_0XDF5A                 (RXBUF_UINT(14))
    #define I3_RES_EME_STAT_SAE_DTC_DEN2_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 2 / Nenner für den SAE DTC 2

    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF5A                     (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC3_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 3 / SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT_0XDF5A                 (RXBUF_UINT(20))
    #define I3_RES_EME_STAT_SAE_DTC_NUM3_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 3 / Zähler für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT_0XDF5A                 (RXBUF_UINT(22))
    #define I3_RES_EME_STAT_SAE_DTC_DEN3_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 3 / Nenner für den SAE DTC 3

    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF5A                     (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC4_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 4 / SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT_0XDF5A                 (RXBUF_UINT(28))
    #define I3_RES_EME_STAT_SAE_DTC_NUM4_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 4 / Zähler für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT_0XDF5A                 (RXBUF_UINT(30))
    #define I3_RES_EME_STAT_SAE_DTC_DEN4_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 4 / Nenner für den SAE DTC 4

    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF5A                     (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC5_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 5 / SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT_0XDF5A                 (RXBUF_UINT(36))
    #define I3_RES_EME_STAT_SAE_DTC_NUM5_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 5 / Zähler für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT_0XDF5A                 (RXBUF_UINT(38))
    #define I3_RES_EME_STAT_SAE_DTC_DEN5_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 5 / Nenner für den SAE DTC 5

    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF5A                     (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC6_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 6 / SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT_0XDF5A                 (RXBUF_UINT(44))
    #define I3_RES_EME_STAT_SAE_DTC_NUM6_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 6 / Zähler für den SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT_0XDF5A                 (RXBUF_UINT(46))
    #define I3_RES_EME_STAT_SAE_DTC_DEN6_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 6 / Nenner für den SAE DTC 6

    #define I3_RES_EME_STAT_SAE_DTC7_WERT_0XDF5A                     (RXBUF_UINT32(48))
    #define I3_RES_EME_STAT_SAE_DTC7_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC7_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 7 / SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC_NUM7_WERT_0XDF5A                 (RXBUF_UINT(52))
    #define I3_RES_EME_STAT_SAE_DTC_NUM7_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 7 / Zähler für den SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC_DEN7_WERT_0XDF5A                 (RXBUF_UINT(54))
    #define I3_RES_EME_STAT_SAE_DTC_DEN7_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 7 / Nenner für den SAE DTC 7

    #define I3_RES_EME_STAT_SAE_DTC8_WERT_0XDF5A                     (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_SAE_DTC8_WERT_0XDF5A_UNIT                'HEX'
    #define I3_RES_EME_STAT_SAE_DTC8_WERT_0XDF5A_TYPE                unsigned long
        // SAE DTC 8 / SAE DTC 8

    #define I3_RES_EME_STAT_SAE_DTC_NUM8_WERT_0XDF5A                 (RXBUF_UINT(60))
    #define I3_RES_EME_STAT_SAE_DTC_NUM8_WERT_0XDF5A_TYPE            unsigned short
        // Counter for the SAE DTC 8 / Zähler für den SAE DTC 8

    #define I3_RES_EME_STAT_SAE_DTC_DEN8_WERT_0XDF5A                 (RXBUF_UINT(62))
    #define I3_RES_EME_STAT_SAE_DTC_DEN8_WERT_0XDF5A_TYPE            unsigned short
        // Denominator for the SAE DTC 8 / Nenner für den SAE DTC 8

    #define I3_RES_EME_STAT_SAE_DTC9_WERT                            (RXBUF_UINT32(64))
    #define I3_RES_EME_STAT_SAE_DTC9_WERT_UNIT                       'HEX'
    #define I3_RES_EME_STAT_SAE_DTC9_WERT_TYPE                       unsigned long
        // SAE DTC 9 / SAE DTC 9

    #define I3_RES_EME_STAT_SAE_DTC_NUM9_WERT                        (RXBUF_UINT(68))
    #define I3_RES_EME_STAT_SAE_DTC_NUM9_WERT_TYPE                   unsigned short
        // Counter for the SAE DTC 9 / Zähler für den SAE DTC 9

    #define I3_RES_EME_STAT_SAE_DTC_DEN9_WERT                        (RXBUF_UINT(70))
    #define I3_RES_EME_STAT_SAE_DTC_DEN9_WERT_TYPE                   unsigned short
        // Denominator for the SAE DTC 9 / Nenner für den SAE DTC 9

    #define I3_RES_EME_STAT_SAE_DTC10_WERT                           (RXBUF_UINT32(72))
    #define I3_RES_EME_STAT_SAE_DTC10_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC10_WERT_TYPE                      unsigned long
        // SAE DTC 10 / SAE DTC 10

    #define I3_RES_EME_STAT_SAE_DTC_NUM10_WERT                       (RXBUF_UINT(76))
    #define I3_RES_EME_STAT_SAE_DTC_NUM10_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 10 / Zähler für den SAE DTC 10

    #define I3_RES_EME_STAT_SAE_DTC_DEN10_WERT                       (RXBUF_UINT(78))
    #define I3_RES_EME_STAT_SAE_DTC_DEN10_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 10 / Nenner für den SAE DTC 10

    #define I3_RES_EME_STAT_SAE_DTC11_WERT                           (RXBUF_UINT32(80))
    #define I3_RES_EME_STAT_SAE_DTC11_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC11_WERT_TYPE                      unsigned long
        // SAE DTC 11 / SAE DTC 11

    #define I3_RES_EME_STAT_SAE_DTC_NUM11_WERT                       (RXBUF_UINT(84))
    #define I3_RES_EME_STAT_SAE_DTC_NUM11_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 11 / Zähler für den SAE DTC 11

    #define I3_RES_EME_STAT_SAE_DTC_DEN11_WERT                       (RXBUF_UINT(86))
    #define I3_RES_EME_STAT_SAE_DTC_DEN11_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 11 / Nenner für den SAE DTC 11

    #define I3_RES_EME_STAT_SAE_DTC12_WERT                           (RXBUF_UINT32(88))
    #define I3_RES_EME_STAT_SAE_DTC12_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC12_WERT_TYPE                      unsigned long
        // SAE DTC 12 / SAE DTC 12

    #define I3_RES_EME_STAT_SAE_DTC_NUM12_WERT                       (RXBUF_UINT(92))
    #define I3_RES_EME_STAT_SAE_DTC_NUM12_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 12 / Zähler für den SAE DTC 12

    #define I3_RES_EME_STAT_SAE_DTC_DEN12_WERT                       (RXBUF_UINT(94))
    #define I3_RES_EME_STAT_SAE_DTC_DEN12_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 12 / Nenner für den SAE DTC 12

    #define I3_RES_EME_STAT_SAE_DTC13_WERT                           (RXBUF_UINT32(96))
    #define I3_RES_EME_STAT_SAE_DTC13_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC13_WERT_TYPE                      unsigned long
        // SAE DTC 13 / SAE DTC 13

    #define I3_RES_EME_STAT_SAE_DTC_NUM13_WERT                       (RXBUF_UINT(100))
    #define I3_RES_EME_STAT_SAE_DTC_NUM13_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 13 / Zähler für den SAE DTC 13

    #define I3_RES_EME_STAT_SAE_DTC_DEN13_WERT                       (RXBUF_UINT(102))
    #define I3_RES_EME_STAT_SAE_DTC_DEN13_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 13 / Nenner für den SAE DTC 13

    #define I3_RES_EME_STAT_SAE_DTC14_WERT                           (RXBUF_UINT32(104))
    #define I3_RES_EME_STAT_SAE_DTC14_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC14_WERT_TYPE                      unsigned long
        // SAE DTC 14 / SAE DTC 14

    #define I3_RES_EME_STAT_SAE_DTC_NUM14_WERT                       (RXBUF_UINT(108))
    #define I3_RES_EME_STAT_SAE_DTC_NUM14_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 14 / Zähler für den SAE DTC 14

    #define I3_RES_EME_STAT_SAE_DTC_DEN14_WERT                       (RXBUF_UINT(110))
    #define I3_RES_EME_STAT_SAE_DTC_DEN14_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 14 / Nenner für den SAE DTC 14

    #define I3_RES_EME_STAT_SAE_DTC15_WERT                           (RXBUF_UINT32(112))
    #define I3_RES_EME_STAT_SAE_DTC15_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC15_WERT_TYPE                      unsigned long
        // SAE DTC 15 / SAE DTC 15

    #define I3_RES_EME_STAT_SAE_DTC_NUM15_WERT                       (RXBUF_UINT(116))
    #define I3_RES_EME_STAT_SAE_DTC_NUM15_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 15 / Zähler für den SAE DTC 15

    #define I3_RES_EME_STAT_SAE_DTC_DEN15_WERT                       (RXBUF_UINT(118))
    #define I3_RES_EME_STAT_SAE_DTC_DEN15_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 15 / Nenner für den SAE DTC 15

    #define I3_RES_EME_STAT_SAE_DTC16_WERT                           (RXBUF_UINT32(120))
    #define I3_RES_EME_STAT_SAE_DTC16_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC16_WERT_TYPE                      unsigned long
        // SAE DTC 16 / SAE DTC 16

    #define I3_RES_EME_STAT_SAE_DTC_NUM16_WERT                       (RXBUF_UINT(124))
    #define I3_RES_EME_STAT_SAE_DTC_NUM16_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 16 / Zähler für den SAE DTC 16

    #define I3_RES_EME_STAT_SAE_DTC_DEN16_WERT                       (RXBUF_UINT(126))
    #define I3_RES_EME_STAT_SAE_DTC_DEN16_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 16 / Nenner für den SAE DTC 16

    #define I3_RES_EME_STAT_SAE_DTC17_WERT                           (RXBUF_UINT32(128))
    #define I3_RES_EME_STAT_SAE_DTC17_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC17_WERT_TYPE                      unsigned long
        // SAE DTC 17 / SAE DTC 17

    #define I3_RES_EME_STAT_SAE_DTC_NUM17_WERT                       (RXBUF_UINT(132))
    #define I3_RES_EME_STAT_SAE_DTC_NUM17_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 17 / Zähler für den SAE DTC 17

    #define I3_RES_EME_STAT_SAE_DTC_DEN17_WERT                       (RXBUF_UINT(134))
    #define I3_RES_EME_STAT_SAE_DTC_DEN17_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 17 / Nenner für den SAE DTC 17

    #define I3_RES_EME_STAT_SAE_DTC18_WERT                           (RXBUF_UINT32(136))
    #define I3_RES_EME_STAT_SAE_DTC18_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC18_WERT_TYPE                      unsigned long
        // SAE DTC 18 / SAE DTC 18

    #define I3_RES_EME_STAT_SAE_DTC_NUM18_WERT                       (RXBUF_UINT(140))
    #define I3_RES_EME_STAT_SAE_DTC_NUM18_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 18 / Zähler für den SAE DTC 18

    #define I3_RES_EME_STAT_SAE_DTC_DEN18_WERT                       (RXBUF_UINT(142))
    #define I3_RES_EME_STAT_SAE_DTC_DEN18_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 18 / Nenner für den SAE DTC 18

    #define I3_RES_EME_STAT_SAE_DTC19_WERT                           (RXBUF_UINT32(144))
    #define I3_RES_EME_STAT_SAE_DTC19_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC19_WERT_TYPE                      unsigned long
        // SAE DTC 19 / SAE DTC 19

    #define I3_RES_EME_STAT_SAE_DTC_NUM19_WERT                       (RXBUF_UINT(148))
    #define I3_RES_EME_STAT_SAE_DTC_NUM19_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 19 / Zähler für den SAE DTC 19

    #define I3_RES_EME_STAT_SAE_DTC_DEN19_WERT                       (RXBUF_UINT(150))
    #define I3_RES_EME_STAT_SAE_DTC_DEN19_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 19 / Nenner für den SAE DTC 19

    #define I3_RES_EME_STAT_SAE_DTC20_WERT                           (RXBUF_UINT32(152))
    #define I3_RES_EME_STAT_SAE_DTC20_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC20_WERT_TYPE                      unsigned long
        // SAE DTC 20 / SAE DTC 20

    #define I3_RES_EME_STAT_SAE_DTC_NUM20_WERT                       (RXBUF_UINT(156))
    #define I3_RES_EME_STAT_SAE_DTC_NUM20_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 20 / Zähler für den SAE DTC 20

    #define I3_RES_EME_STAT_SAE_DTC_DEN20_WERT                       (RXBUF_UINT(158))
    #define I3_RES_EME_STAT_SAE_DTC_DEN20_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 20 / Nenner für den SAE DTC 20

    #define I3_RES_EME_STAT_SAE_DTC21_WERT                           (RXBUF_UINT32(160))
    #define I3_RES_EME_STAT_SAE_DTC21_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC21_WERT_TYPE                      unsigned long
        // SAE DTC 21 / SAE DTC 21

    #define I3_RES_EME_STAT_SAE_DTC_NUM21_WERT                       (RXBUF_UINT(164))
    #define I3_RES_EME_STAT_SAE_DTC_NUM21_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 21 / Zähler für den SAE DTC 21

    #define I3_RES_EME_STAT_SAE_DTC_DEN21_WERT                       (RXBUF_UINT(166))
    #define I3_RES_EME_STAT_SAE_DTC_DEN21_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 21 / Nenner für den SAE DTC 21

    #define I3_RES_EME_STAT_SAE_DTC22_WERT                           (RXBUF_UINT32(168))
    #define I3_RES_EME_STAT_SAE_DTC22_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC22_WERT_TYPE                      unsigned long
        // SAE DTC 22 / SAE DTC 22

    #define I3_RES_EME_STAT_SAE_DTC_NUM22_WERT                       (RXBUF_UINT(172))
    #define I3_RES_EME_STAT_SAE_DTC_NUM22_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 22 / Zähler für den SAE DTC 22

    #define I3_RES_EME_STAT_SAE_DTC_DEN22_WERT                       (RXBUF_UINT(174))
    #define I3_RES_EME_STAT_SAE_DTC_DEN22_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 22 / Nenner für den SAE DTC 22

    #define I3_RES_EME_STAT_SAE_DTC23_WERT                           (RXBUF_UINT32(176))
    #define I3_RES_EME_STAT_SAE_DTC23_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC23_WERT_TYPE                      unsigned long
        // SAE DTC 23 / SAE DTC 23

    #define I3_RES_EME_STAT_SAE_DTC_NUM23_WERT                       (RXBUF_UINT(180))
    #define I3_RES_EME_STAT_SAE_DTC_NUM23_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 23 / Zähler für den SAE DTC 23

    #define I3_RES_EME_STAT_SAE_DTC_DEN23_WERT                       (RXBUF_UINT(182))
    #define I3_RES_EME_STAT_SAE_DTC_DEN23_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 23 / Nenner für den SAE DTC 23

    #define I3_RES_EME_STAT_SAE_DTC24_WERT                           (RXBUF_UINT32(184))
    #define I3_RES_EME_STAT_SAE_DTC24_WERT_UNIT                      'HEX'
    #define I3_RES_EME_STAT_SAE_DTC24_WERT_TYPE                      unsigned long
        // SAE DTC 24 / SAE DTC 24

    #define I3_RES_EME_STAT_SAE_DTC_NUM24_WERT                       (RXBUF_UINT(188))
    #define I3_RES_EME_STAT_SAE_DTC_NUM24_WERT_TYPE                  unsigned short
        // Counter for the SAE DTC 24 / Zähler für den SAE DTC 24

    #define I3_RES_EME_STAT_SAE_DTC_DEN24_WERT                       (RXBUF_UINT(190))
    #define I3_RES_EME_STAT_SAE_DTC_DEN24_WERT_TYPE                  unsigned short
        // Denominator for the SAE DTC 24 / Nenner für den SAE DTC 24

#define I3_PID_EME_LIEFERANT_TRACE_NUMMER                            0xDF5B
        // 29 bytes SG manufacturer trace number / 29 Byte SG-Hersteller Tracenummer

    // Can't yet generate code for STAT_TRACE_NUMMER_TEXT of type string[29], at offset 0. But we account for the 29 bytes
        // 29 bytes SG manufacturer trace number / 29 Byte SG-Hersteller Tracenummer

// Skipping LAST_HISTOGRAMM_EMASCHINE_RESET on 0xDF5D which takes arguments

// Skipping LADEGERAET_KONFIGURATION on 0xDFB3 which takes arguments

// Skipping LADEGERAET_HISTOGRAMM_RESET on 0xDFB4 which takes arguments

#define I3_PID_EME_LADEGERAET_TEMPERATUR_HISTOGRAMM                  0xDFB5
        // Temperature histograms of the charging electronics (SLE) present within the drive electronics (AE) /
        // Temperatur-Histogramme der innerhalb der Antriebselektronik (AE) vorhandenen Ladeelektronik (SLE)

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_1_WERT                     (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_1_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 1 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 1

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_2_WERT                     (RXBUF_UINT32(4))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_2_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 2 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 2

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_3_WERT                     (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_3_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 3 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 3

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_4_WERT                     (RXBUF_UINT32(12))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_4_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 4 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 4

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_5_WERT                     (RXBUF_UINT32(16))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_5_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 5 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 5

    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_6_WERT                     (RXBUF_UINT32(20))
    #define I3_RES_EME_STAT_TEMP_LLCHVFIL_6_WERT_TYPE                unsigned long
        // Temperature histogram of LLCHVFIL sensor value 6 / Temperaturhistogramm von LLCHVFIL-Sensor Wert 6

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_1_WERT                    (RXBUF_UINT32(24))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_1_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 1 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 1

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_2_WERT                    (RXBUF_UINT32(28))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_2_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 2 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 2

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_3_WERT                    (RXBUF_UINT32(32))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_3_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 3 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 3

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_4_WERT                    (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_4_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 4 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 4

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_5_WERT                    (RXBUF_UINT32(40))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_5_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 5 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 5

    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_6_WERT                    (RXBUF_UINT32(44))
    #define I3_RES_EME_STAT_TEMP_LLCTRAFIL_6_WERT_TYPE               unsigned long
        // Temperature histogram from LLCTRAFIL sensor value 6 / Temperaturhistogramm von LLCTRAFIL-Sensor Wert 6

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_1_WERT                     (RXBUF_UINT32(48))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_1_WERT_TYPE                unsigned long
        // Temperature histogram from LLCZKFIL sensor value 1 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 1

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_2_WERT                     (RXBUF_UINT32(52))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_2_WERT_TYPE                unsigned long
        // Temperature histogram of LLCZKFIL sensor value 2 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 2

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_3_WERT                     (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_3_WERT_TYPE                unsigned long
        // Temperature histogram from LLCZKFIL sensor value 3 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 3

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_4_WERT                     (RXBUF_UINT32(60))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_4_WERT_TYPE                unsigned long
        // Temperature histogram from LLCZKFIL sensor value 4 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 4

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_5_WERT                     (RXBUF_UINT32(64))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_5_WERT_TYPE                unsigned long
        // Temperature histogram from LLCZKFIL sensor value 5 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 5

    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_6_WERT                     (RXBUF_UINT32(68))
    #define I3_RES_EME_STAT_TEMP_LLCZKFIL_6_WERT_TYPE                unsigned long
        // Temperature histogram from LLCZKFIL sensor value 6 / Temperaturhistogramm von LLCZKFIL-Sensor Wert 6

#define I3_PID_EME_LADEGERAET_HV_UEBERSTROM                          0xDFB7
        // Charger overcurrent meter based on HV DC current sensor raw value / Ladegerät Überstromzähler auf Basis HV
        // DC-Stromsensorrohwert

    #define I3_RES_EME_STAT_ZAEHLER_HV_UEBERSTROM_WERT               (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_ZAEHLER_HV_UEBERSTROM_WERT_TYPE          unsigned long
        // Charger overcurrent meter based on HV DC current sensor raw value / Ladegerät Überstromzähler auf Basis HV
        // DC-Stromsensorrohwert

#define I3_PID_EME_EMASCHINE_MAX_DREHZAHL                            0xDFCE
        // Reading out the absolute time in the critical electric machine speed range / Auslesen der Absolutzeit im
        // kritischen E-Maschinen Drehzahl Bereich

    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_1_WERT                  (RXBUF_UINT(0))
    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_1_WERT_UNIT             's'
    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_1_WERT_TYPE             unsigned short
        // Absolute time in the critical electric machine speed range 1 (seconds) / Absolutzeit im kritischen E-Maschinen
        // Drehzahl Bereich 1 (Sekunden)

    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_2_WERT                  (RXBUF_UINT(2))
    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_2_WERT_UNIT             's'
    #define I3_RES_EME_STAT_DREHZAHL_BEREICH_2_WERT_TYPE             unsigned short
        // Absolute time in the critical electric machine speed range 2 (seconds) / Absolutzeit im kritischen E-Maschinen
        // Drehzahl Bereich 2 (Sekunden)

#define I3_PID_EME_LAST_HISTOGRAMM_EMASCHINE_LESEN                   0xDFD0
        // Reading out the histograms of the electric machine (speed, torque, change of sign of the torque) / Auslesen
        // der Histogramme der Elektromaschine (Drehzahl, Drehmoment, Vorzeichenwechsel Drehmoment)

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_1_WERT       (RXBUF_UINT(0)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_1_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_1_WERT_TYPE  float
        // Speed torque range 1 / Drehzahl Drehmoment Bereich 1

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_2_WERT       (RXBUF_UINT(2)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_2_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_2_WERT_TYPE  float
        // Speed torque range 2 / Drehzahl Drehmoment Bereich 2

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_3_WERT       (RXBUF_UINT(4)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_3_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_3_WERT_TYPE  float
        // Speed torque range 3 / Drehzahl Drehmoment Bereich 3

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_4_WERT       (RXBUF_UINT(6)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_4_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_4_WERT_TYPE  float
        // Speed torque range 4 / Drehzahl Drehmoment Bereich 4

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_5_WERT       (RXBUF_UINT(8)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_5_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_5_WERT_TYPE  float
        // Speed torque range 5 / Drehzahl Drehmoment Bereich 5

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_6_WERT       (RXBUF_UINT(10)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_6_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_6_WERT_TYPE  float
        // Speed torque range 6 / Drehzahl Drehmoment Bereich 6

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_7_WERT       (RXBUF_UINT(12)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_7_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_7_WERT_TYPE  float
        // Speed torque range 7 / Drehzahl Drehmoment Bereich 7

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_8_WERT       (RXBUF_UINT(14)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_8_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_8_WERT_TYPE  float
        // Speed torque range 8 / Drehzahl Drehmoment Bereich 8

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_9_WERT       (RXBUF_UINT(16)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_9_WERT_UNIT  '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_9_WERT_TYPE  float
        // Speed torque range 9 / Drehzahl Drehmoment Bereich 9

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_10_WERT      (RXBUF_UINT(18)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_10_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_10_WERT_TYPE float
        // Speed torque range 10 / Drehzahl Drehmoment Bereich 10

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_11_WERT      (RXBUF_UINT(20)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_11_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_11_WERT_TYPE float
        // Speed torque range 11 / Drehzahl Drehmoment Bereich 11

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_12_WERT      (RXBUF_UINT(22)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_12_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_12_WERT_TYPE float
        // Speed torque range 12 / Drehzahl Drehmoment Bereich 12

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_13_WERT      (RXBUF_UINT(24)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_13_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_13_WERT_TYPE float
        // Speed torque range 13 / Drehzahl Drehmoment Bereich 13

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_14_WERT      (RXBUF_UINT(26)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_14_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_14_WERT_TYPE float
        // Speed torque range 14 / Drehzahl Drehmoment Bereich 14

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_15_WERT      (RXBUF_UINT(28)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_15_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_15_WERT_TYPE float
        // Speed torque range 15 / Drehzahl Drehmoment Bereich 15

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_16_WERT      (RXBUF_UINT(30)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_16_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_16_WERT_TYPE float
        // Speed torque range 16 / Drehzahl Drehmoment Bereich 16

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_17_WERT      (RXBUF_UINT(32)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_17_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_17_WERT_TYPE float
        // Speed torque range 17 / Drehzahl Drehmoment Bereich 17

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_18_WERT      (RXBUF_UINT(34)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_18_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_18_WERT_TYPE float
        // Speed torque range 18 / Drehzahl Drehmoment Bereich 18

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_19_WERT      (RXBUF_UINT(36)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_19_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_19_WERT_TYPE float
        // Speed torque range 19 / Drehzahl Drehmoment Bereich 19

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_20_WERT      (RXBUF_UINT(38)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_20_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_20_WERT_TYPE float
        // Speed torque range 20 / Drehzahl Drehmoment Bereich 20

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_21_WERT      (RXBUF_UINT(40)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_21_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_21_WERT_TYPE float
        // Speed torque range 21 / Drehzahl Drehmoment Bereich 21

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_22_WERT      (RXBUF_UINT(42)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_22_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_22_WERT_TYPE float
        // Speed torque range 22 / Drehzahl Drehmoment Bereich 22

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_23_WERT      (RXBUF_UINT(44)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_23_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_23_WERT_TYPE float
        // Speed torque range 23 / Drehzahl Drehmoment Bereich 23

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_24_WERT      (RXBUF_UINT(46)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_24_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_24_WERT_TYPE float
        // Speed torque range 24 / Drehzahl Drehmoment Bereich 24

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_25_WERT      (RXBUF_UINT(48)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_25_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_25_WERT_TYPE float
        // Speed torque range 25 / Drehzahl Drehmoment Bereich 25

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_26_WERT      (RXBUF_UINT(50)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_26_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_26_WERT_TYPE float
        // Speed torque range 26 / Drehzahl Drehmoment Bereich 26

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_27_WERT      (RXBUF_UINT(52)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_27_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_27_WERT_TYPE float
        // Speed torque range 27 / Drehzahl Drehmoment Bereich 27

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_28_WERT      (RXBUF_UINT(54)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_28_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_28_WERT_TYPE float
        // Speed torque range 28 / Drehzahl Drehmoment Bereich 28

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_29_WERT      (RXBUF_UINT(56)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_29_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_29_WERT_TYPE float
        // Speed torque range 29 / Drehzahl Drehmoment Bereich 29

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_30_WERT      (RXBUF_UINT(58)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_30_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_30_WERT_TYPE float
        // Speed torque range 30 / Drehzahl Drehmoment Bereich 30

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_31_WERT      (RXBUF_UINT(60)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_31_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_31_WERT_TYPE float
        // Speed torque range 31 / Drehzahl Drehmoment Bereich 31

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_32_WERT      (RXBUF_UINT(62)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_32_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_32_WERT_TYPE float
        // Speed torque range 32 / Drehzahl Drehmoment Bereich 32

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_33_WERT      (RXBUF_UINT(64)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_33_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_33_WERT_TYPE float
        // Speed torque range 33 / Drehzahl Drehmoment Bereich 33

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_34_WERT      (RXBUF_UINT(66)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_34_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_34_WERT_TYPE float
        // Speed torque range 34 / Drehzahl Drehmoment Bereich 34

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_35_WERT      (RXBUF_UINT(68)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_35_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_35_WERT_TYPE float
        // Speed torque range 35 / Drehzahl Drehmoment Bereich 35

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_36_WERT      (RXBUF_UINT(70)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_36_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_36_WERT_TYPE float
        // Speed torque range 36 / Drehzahl Drehmoment Bereich 36

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_37_WERT      (RXBUF_UINT(72)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_37_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_37_WERT_TYPE float
        // Speed torque range 37 / Drehzahl Drehmoment Bereich 37

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_38_WERT      (RXBUF_UINT(74)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_38_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_38_WERT_TYPE float
        // Speed torque range 38 / Drehzahl Drehmoment Bereich 38

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_39_WERT      (RXBUF_UINT(76)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_39_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_39_WERT_TYPE float
        // Speed torque range 39 / Drehzahl Drehmoment Bereich 39

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_40_WERT      (RXBUF_UINT(78)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_40_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_40_WERT_TYPE float
        // Speed torque range 40 / Drehzahl Drehmoment Bereich 40

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_41_WERT      (RXBUF_UINT(80)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_41_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_41_WERT_TYPE float
        // Speed torque range 41 / Drehzahl Drehmoment Bereich 41

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_42_WERT      (RXBUF_UINT(82)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_42_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_42_WERT_TYPE float
        // Speed torque range 42 / Drehzahl Drehmoment Bereich 42

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_43_WERT      (RXBUF_UINT(84)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_43_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_43_WERT_TYPE float
        // Speed torque range 43 / Drehzahl Drehmoment Bereich 43

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_44_WERT      (RXBUF_UINT(86)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_44_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_44_WERT_TYPE float
        // Speed torque range 44 / Drehzahl Drehmoment Bereich 44

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_45_WERT      (RXBUF_UINT(88)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_45_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_45_WERT_TYPE float
        // Speed torque range 45 / Drehzahl Drehmoment Bereich 45

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_46_WERT      (RXBUF_UINT(90)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_46_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_46_WERT_TYPE float
        // Speed torque range 46 / Drehzahl Drehmoment Bereich 46

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_47_WERT      (RXBUF_UINT(92)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_47_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_47_WERT_TYPE float
        // Speed torque range 47 / Drehzahl Drehmoment Bereich 47

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_48_WERT      (RXBUF_UINT(94)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_48_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_48_WERT_TYPE float
        // Speed torque range 48 / Drehzahl Drehmoment Bereich 48

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_49_WERT      (RXBUF_UINT(96)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_49_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_49_WERT_TYPE float
        // Speed torque range 49 / Drehzahl Drehmoment Bereich 49

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_50_WERT      (RXBUF_UINT(98)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_50_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_50_WERT_TYPE float
        // Speed torque range 50 / Drehzahl Drehmoment Bereich 50

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_51_WERT      (RXBUF_UINT(100)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_51_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_51_WERT_TYPE float
        // Speed torque range 51 / Drehzahl Drehmoment Bereich 51

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_52_WERT      (RXBUF_UINT(102)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_52_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_52_WERT_TYPE float
        // Speed torque range 52 / Drehzahl Drehmoment Bereich 52

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_53_WERT      (RXBUF_UINT(104)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_53_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_53_WERT_TYPE float
        // Speed torque range 53 / Drehzahl Drehmoment Bereich 53

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_54_WERT      (RXBUF_UINT(106)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_54_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_54_WERT_TYPE float
        // Speed torque range 54 / Drehzahl Drehmoment Bereich 54

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_55_WERT      (RXBUF_UINT(108)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_55_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_55_WERT_TYPE float
        // Speed torque range 55 / Drehzahl Drehmoment Bereich 55

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_56_WERT      (RXBUF_UINT(110)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_56_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_56_WERT_TYPE float
        // Speed torque range 56 / Drehzahl Drehmoment Bereich 56

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_57_WERT      (RXBUF_UINT(112)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_57_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_57_WERT_TYPE float
        // Speed torque range 57 / Drehzahl Drehmoment Bereich 57

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_58_WERT      (RXBUF_UINT(114)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_58_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_58_WERT_TYPE float
        // Speed torque range 58 / Drehzahl Drehmoment Bereich 58

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_59_WERT      (RXBUF_UINT(116)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_59_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_59_WERT_TYPE float
        // Speed torque range 59 / Drehzahl Drehmoment Bereich 59

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_60_WERT      (RXBUF_UINT(118)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_60_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_60_WERT_TYPE float
        // Speed torque range 60 / Drehzahl Drehmoment Bereich 60

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_61_WERT      (RXBUF_UINT(120)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_61_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_61_WERT_TYPE float
        // Speed torque range 61 / Drehzahl Drehmoment Bereich 61

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_62_WERT      (RXBUF_UINT(122)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_62_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_62_WERT_TYPE float
        // Speed torque range 62 / Drehzahl Drehmoment Bereich 62

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_63_WERT      (RXBUF_UINT(124)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_63_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_63_WERT_TYPE float
        // Speed torque range 63 / Drehzahl Drehmoment Bereich 63

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_64_WERT      (RXBUF_UINT(126)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_64_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_64_WERT_TYPE float
        // Speed torque range 64 / Drehzahl Drehmoment Bereich 64

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_65_WERT      (RXBUF_UINT(128)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_65_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_65_WERT_TYPE float
        // Speed torque range 65 / Drehzahl Drehmoment Bereich 65

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_66_WERT      (RXBUF_UINT(130)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_66_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_66_WERT_TYPE float
        // Speed torque range 66 / Drehzahl Drehmoment Bereich 66

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_67_WERT      (RXBUF_UINT(132)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_67_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_67_WERT_TYPE float
        // Speed torque range 67 / Drehzahl Drehmoment Bereich 67

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_68_WERT      (RXBUF_UINT(134)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_68_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_68_WERT_TYPE float
        // Speed torque range 68 / Drehzahl Drehmoment Bereich 68

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_69_WERT      (RXBUF_UINT(136)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_69_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_69_WERT_TYPE float
        // Speed torque range 69 / Drehzahl Drehmoment Bereich 69

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_70_WERT      (RXBUF_UINT(138)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_70_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_70_WERT_TYPE float
        // Speed torque range 70 / Drehzahl Drehmoment Bereich 70

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_71_WERT      (RXBUF_UINT(140)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_71_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_71_WERT_TYPE float
        // Speed torque range 71 / Drehzahl Drehmoment Bereich 71

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_72_WERT      (RXBUF_UINT(142)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_72_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_72_WERT_TYPE float
        // Speed torque range 72 / Drehzahl Drehmoment Bereich 72

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_73_WERT      (RXBUF_UINT(144)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_73_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_73_WERT_TYPE float
        // Speed torque range 73 / Drehzahl Drehmoment Bereich 73

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_74_WERT      (RXBUF_UINT(146)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_74_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_74_WERT_TYPE float
        // Speed torque range 74 / Drehzahl Drehmoment Bereich 74

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_75_WERT      (RXBUF_UINT(148)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_75_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_75_WERT_TYPE float
        // Speed torque range 75 / Drehzahl Drehmoment Bereich 75

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_76_WERT      (RXBUF_UINT(150)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_76_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_76_WERT_TYPE float
        // Speed torque range 76 / Drehzahl Drehmoment Bereich 76

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_77_WERT      (RXBUF_UINT(152)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_77_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_77_WERT_TYPE float
        // Speed torque range 77 / Drehzahl Drehmoment Bereich 77

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_78_WERT      (RXBUF_UINT(154)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_78_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_78_WERT_TYPE float
        // Speed torque range 78 / Drehzahl Drehmoment Bereich 78

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_79_WERT      (RXBUF_UINT(156)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_79_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_79_WERT_TYPE float
        // Speed torque range 79 / Drehzahl Drehmoment Bereich 79

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_80_WERT      (RXBUF_UINT(158)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_80_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_80_WERT_TYPE float
        // Speed torque range 80 / Drehzahl Drehmoment Bereich 80

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_81_WERT      (RXBUF_UINT(160)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_81_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_81_WERT_TYPE float
        // Speed torque range 81 / Drehzahl Drehmoment Bereich 81

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_82_WERT      (RXBUF_UINT(162)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_82_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_82_WERT_TYPE float
        // Speed torque range 82 / Drehzahl Drehmoment Bereich 82

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_83_WERT      (RXBUF_UINT(164)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_83_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_83_WERT_TYPE float
        // Speed torque range 83 / Drehzahl Drehmoment Bereich 83

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_84_WERT      (RXBUF_UINT(166)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_84_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_84_WERT_TYPE float
        // Speed torque range 84 / Drehzahl Drehmoment Bereich 84

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_85_WERT      (RXBUF_UINT(168)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_85_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_85_WERT_TYPE float
        // Speed torque range 85 / Drehzahl Drehmoment Bereich 85

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_86_WERT      (RXBUF_UINT(170)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_86_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_86_WERT_TYPE float
        // Speed torque range 86 / Drehzahl Drehmoment Bereich 86

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_87_WERT      (RXBUF_UINT(172)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_87_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_87_WERT_TYPE float
        // Speed torque range 87 / Drehzahl Drehmoment Bereich 87

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_88_WERT      (RXBUF_UINT(174)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_88_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_88_WERT_TYPE float
        // Speed torque range 88 / Drehzahl Drehmoment Bereich 88

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_89_WERT      (RXBUF_UINT(176)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_89_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_89_WERT_TYPE float
        // Speed torque range 89 / Drehzahl Drehmoment Bereich 89

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_90_WERT      (RXBUF_UINT(178)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_90_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_90_WERT_TYPE float
        // Speed torque range 90 / Drehzahl Drehmoment Bereich 90

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_91_WERT      (RXBUF_UINT(180)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_91_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_91_WERT_TYPE float
        // Speed torque range 91 / Drehzahl Drehmoment Bereich 91

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_92_WERT      (RXBUF_UINT(182)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_92_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_92_WERT_TYPE float
        // Speed torque range 92 / Drehzahl Drehmoment Bereich 92

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_93_WERT      (RXBUF_UINT(184)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_93_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_93_WERT_TYPE float
        // Speed torque range 93 / Drehzahl Drehmoment Bereich 93

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_94_WERT      (RXBUF_UINT(186)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_94_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_94_WERT_TYPE float
        // Speed torque range 94 / Drehzahl Drehmoment Bereich 94

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_95_WERT      (RXBUF_UINT(188)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_95_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_95_WERT_TYPE float
        // Speed torque range 95 / Drehzahl Drehmoment Bereich 95

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_96_WERT      (RXBUF_UINT(190)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_96_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_96_WERT_TYPE float
        // Speed torque range 96 / Drehzahl Drehmoment Bereich 96

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_97_WERT      (RXBUF_UINT(192)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_97_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_97_WERT_TYPE float
        // Speed torque range 97 / Drehzahl Drehmoment Bereich 97

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_98_WERT      (RXBUF_UINT(194)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_98_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_98_WERT_TYPE float
        // Speed torque range 98 / Drehzahl Drehmoment Bereich 98

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_99_WERT      (RXBUF_UINT(196)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_99_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_99_WERT_TYPE float
        // Speed torque range 99 / Drehzahl Drehmoment Bereich 99

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_100_WERT     (RXBUF_UINT(198)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_100_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_100_WERT_TYPE float
        // Speed torque range 100 / Drehzahl Drehmoment Bereich 100

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_101_WERT     (RXBUF_UINT(200)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_101_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_101_WERT_TYPE float
        // Speed torque range 101 / Drehzahl Drehmoment Bereich 101

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_102_WERT     (RXBUF_UINT(202)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_102_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_102_WERT_TYPE float
        // Speed torque range 102 / Drehzahl Drehmoment Bereich 102

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_103_WERT     (RXBUF_UINT(204)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_103_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_103_WERT_TYPE float
        // Speed torque range 103 / Drehzahl Drehmoment Bereich 103

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_104_WERT     (RXBUF_UINT(206)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_104_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_104_WERT_TYPE float
        // Speed torque range 104 / Drehzahl Drehmoment Bereich 104

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_105_WERT     (RXBUF_UINT(208)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_105_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_105_WERT_TYPE float
        // Speed torque range 105 / Drehzahl Drehmoment Bereich 105

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_106_WERT     (RXBUF_UINT(210)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_106_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_106_WERT_TYPE float
        // Speed torque range 106 / Drehzahl Drehmoment Bereich 106

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_107_WERT     (RXBUF_UINT(212)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_107_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_107_WERT_TYPE float
        // Speed torque range 107 / Drehzahl Drehmoment Bereich 107

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_108_WERT     (RXBUF_UINT(214)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_108_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_108_WERT_TYPE float
        // Speed torque range 108 / Drehzahl Drehmoment Bereich 108

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_109_WERT     (RXBUF_UINT(216)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_109_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_109_WERT_TYPE float
        // Speed torque range 109 / Drehzahl Drehmoment Bereich 109

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_110_WERT     (RXBUF_UINT(218)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_110_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_110_WERT_TYPE float
        // Speed torque range 110 / Drehzahl Drehmoment Bereich 110

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_111_WERT     (RXBUF_UINT(220)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_111_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_111_WERT_TYPE float
        // Speed torque range 111 / Drehzahl Drehmoment Bereich 111

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_112_WERT     (RXBUF_UINT(222)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_112_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_112_WERT_TYPE float
        // Speed torque range 112 / Drehzahl Drehmoment Bereich 112

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_113_WERT     (RXBUF_UINT(224)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_113_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_113_WERT_TYPE float
        // Speed torque range 113 / Drehzahl Drehmoment Bereich 113

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_114_WERT     (RXBUF_UINT(226)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_114_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_114_WERT_TYPE float
        // Speed torque range 114 / Drehzahl Drehmoment Bereich 114

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_115_WERT     (RXBUF_UINT(228)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_115_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_115_WERT_TYPE float
        // Speed torque range 115 / Drehzahl Drehmoment Bereich 115

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_116_WERT     (RXBUF_UINT(230)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_116_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_116_WERT_TYPE float
        // Speed torque range 116 / Drehzahl Drehmoment Bereich 116

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_117_WERT     (RXBUF_UINT(232)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_117_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_117_WERT_TYPE float
        // Speed torque range 117 / Drehzahl Drehmoment Bereich 117

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_118_WERT     (RXBUF_UINT(234)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_118_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_118_WERT_TYPE float
        // Speed torque range 118 / Drehzahl Drehmoment Bereich 118

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_119_WERT     (RXBUF_UINT(236)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_119_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_119_WERT_TYPE float
        // Speed torque range 119 / Drehzahl Drehmoment Bereich 119

    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_120_WERT     (RXBUF_UINT(238)*0.002f)
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_120_WERT_UNIT '%'
    #define I3_RES_EME_STAT_DREHZAHL_DREHMOMENT_BEREICH_120_WERT_TYPE float
        // Speed torque range 120 / Drehzahl Drehmoment Bereich 120

#define I3_PID_EME_RATE_BASED_MONITORING                             0xE52F
        // RBM data on discontinuous diagnoses including dependent secondaries. / RBM Daten zu nicht kontinuierlichen
        // Diagnosen inkl. Dependant Secondaries.

    // Can't yet generate code for STAT_DTC_1_HEXCODE_DATA of type data[3] at offset 0. But we account for the 3 bytes
        // HexCode of DTC 1 / HexCode von DTC 1

    #define I3_RES_EME_STAT_DTC_1_NUM_WERT                           (RXBUF_UINT(3))
    #define I3_RES_EME_STAT_DTC_1_NUM_WERT_TYPE                      unsigned short
        // DTC numerator 1 / Numerator von DTC 1

    #define I3_RES_EME_STAT_DTC_1_DEN_WERT                           (RXBUF_UINT(5))
    #define I3_RES_EME_STAT_DTC_1_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 1 / Denominator von DTC 1

    // Can't yet generate code for STAT_DTC_2_HEXCODE_DATA of type data[3] at offset 7. But we account for the 3 bytes
        // HexCode of DTC 2 / HexCode von DTC 2

    #define I3_RES_EME_STAT_DTC_2_NUM_WERT                           (RXBUF_UINT(10))
    #define I3_RES_EME_STAT_DTC_2_NUM_WERT_TYPE                      unsigned short
        // DTC numerator 2 / Numerator von DTC 2

    #define I3_RES_EME_STAT_DTC_2_DEN_WERT                           (RXBUF_UINT(12))
    #define I3_RES_EME_STAT_DTC_2_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 2 / Denominator von DTC 2

    // Can't yet generate code for STAT_DTC_3_HEXCODE_DATA of type data[3] at offset 14. But we account for the 3 bytes
        // HexCode of DTC 3 / HexCode von DTC 3

    #define I3_RES_EME_STAT_DTC_3_NUM_WERT                           (RXBUF_UINT(17))
    #define I3_RES_EME_STAT_DTC_3_NUM_WERT_TYPE                      unsigned short
        // DTC numerator 3 / Numerator von DTC 3

    #define I3_RES_EME_STAT_DTC_3_DEN_WERT                           (RXBUF_UINT(19))
    #define I3_RES_EME_STAT_DTC_3_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 3 / Denominator von DTC 3

    // Can't yet generate code for STAT_DTC_4_HEXCODE_DATA of type data[3] at offset 21. But we account for the 3 bytes
        // HexCode of DTC 4 / HexCode von DTC 4

    #define I3_RES_EME_STAT_DTC_4_NUM_WERT                           (RXBUF_UINT(24))
    #define I3_RES_EME_STAT_DTC_4_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 4 / Numerator von DTC 4

    #define I3_RES_EME_STAT_DTC_4_DEN_WERT                           (RXBUF_UINT(26))
    #define I3_RES_EME_STAT_DTC_4_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 4 / Denominator von DTC 4

    // Can't yet generate code for STAT_DTC_5_HEXCODE_DATA of type data[3] at offset 28. But we account for the 3 bytes
        // HexCode of DTC 5 / HexCode von DTC 5

    #define I3_RES_EME_STAT_DTC_5_NUM_WERT                           (RXBUF_UINT(31))
    #define I3_RES_EME_STAT_DTC_5_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 5 / Numerator von DTC 5

    #define I3_RES_EME_STAT_DTC_5_DEN_WERT                           (RXBUF_UINT(33))
    #define I3_RES_EME_STAT_DTC_5_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 5 / Denominator von DTC 5

    // Can't yet generate code for STAT_DTC_6_HEXCODE_DATA of type data[3] at offset 35. But we account for the 3 bytes
        // HexCode of DTC 6 / HexCode von DTC 6

    #define I3_RES_EME_STAT_DTC_6_NUM_WERT                           (RXBUF_UINT(38))
    #define I3_RES_EME_STAT_DTC_6_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 6 / Numerator von DTC 6

    #define I3_RES_EME_STAT_DTC_6_DEN_WERT                           (RXBUF_UINT(40))
    #define I3_RES_EME_STAT_DTC_6_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 6 / Denominator von DTC 6

    // Can't yet generate code for STAT_DTC_7_HEXCODE_DATA of type data[3] at offset 42. But we account for the 3 bytes
        // HexCode of DTC 7 / HexCode von DTC 7

    #define I3_RES_EME_STAT_DTC_7_NUM_WERT                           (RXBUF_UINT(45))
    #define I3_RES_EME_STAT_DTC_7_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 7 / Numerator von DTC 7

    #define I3_RES_EME_STAT_DTC_7_DEN_WERT                           (RXBUF_UINT(47))
    #define I3_RES_EME_STAT_DTC_7_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 7 / Denominator von DTC 7

    // Can't yet generate code for STAT_DTC_8_HEXCODE_DATA of type data[3] at offset 49. But we account for the 3 bytes
        // HexCode of DTC 8 / HexCode von DTC 8

    #define I3_RES_EME_STAT_DTC_8_NUM_WERT                           (RXBUF_UINT(52))
    #define I3_RES_EME_STAT_DTC_8_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 8 / Numerator von DTC 8

    #define I3_RES_EME_STAT_DTC_8_DEN_WERT                           (RXBUF_UINT(54))
    #define I3_RES_EME_STAT_DTC_8_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 8 / Denominator von DTC 8

    // Can't yet generate code for STAT_DTC_9_HEXCODE_DATA of type data[3] at offset 56. But we account for the 3 bytes
        // HexCode of DTC 9 / HexCode von DTC 9

    #define I3_RES_EME_STAT_DTC_9_NUM_WERT                           (RXBUF_UINT(59))
    #define I3_RES_EME_STAT_DTC_9_NUM_WERT_TYPE                      unsigned short
        // Numerator from DTC 9 / Numerator von DTC 9

    #define I3_RES_EME_STAT_DTC_9_DEN_WERT                           (RXBUF_UINT(61))
    #define I3_RES_EME_STAT_DTC_9_DEN_WERT_TYPE                      unsigned short
        // Denominator of DTC 9 / Denominator von DTC 9

    // Can't yet generate code for STAT_DTC_10_HEXCODE_DATA of type data[3] at offset 63. But we account for the 3 bytes
        // HexCode of DTC 10 / HexCode von DTC 10

    #define I3_RES_EME_STAT_DTC_10_NUM_WERT                          (RXBUF_UINT(66))
    #define I3_RES_EME_STAT_DTC_10_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 10 / Numerator von DTC 10

    #define I3_RES_EME_STAT_DTC_10_DEN_WERT                          (RXBUF_UINT(68))
    #define I3_RES_EME_STAT_DTC_10_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 10 / Denominator von DTC 10

    // Can't yet generate code for STAT_DTC_11_HEXCODE_DATA of type data[3] at offset 70. But we account for the 3 bytes
        // HexCode of DTC 11 / HexCode von DTC 11

    #define I3_RES_EME_STAT_DTC_11_NUM_WERT                          (RXBUF_UINT(73))
    #define I3_RES_EME_STAT_DTC_11_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 11 / Numerator von DTC 11

    #define I3_RES_EME_STAT_DTC_11_DEN_WERT                          (RXBUF_UINT(75))
    #define I3_RES_EME_STAT_DTC_11_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 11 / Denominator von DTC 11

    // Can't yet generate code for STAT_DTC_12_HEXCODE_DATA of type data[3] at offset 77. But we account for the 3 bytes
        // HexCode of DTC 12 / HexCode von DTC 12

    #define I3_RES_EME_STAT_DTC_12_NUM_WERT                          (RXBUF_UINT(80))
    #define I3_RES_EME_STAT_DTC_12_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 12 / Numerator von DTC 12

    #define I3_RES_EME_STAT_DTC_12_DEN_WERT                          (RXBUF_UINT(82))
    #define I3_RES_EME_STAT_DTC_12_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 12 / Denominator von DTC 12

    // Can't yet generate code for STAT_DTC_13_HEXCODE_DATA of type data[3] at offset 84. But we account for the 3 bytes
        // HexCode of DTC 13 / HexCode von DTC 13

    #define I3_RES_EME_STAT_DTC_13_NUM_WERT                          (RXBUF_UINT(87))
    #define I3_RES_EME_STAT_DTC_13_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 13 / Numerator von DTC 13

    #define I3_RES_EME_STAT_DTC_13_DEN_WERT                          (RXBUF_UINT(89))
    #define I3_RES_EME_STAT_DTC_13_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 13 / Denominator von DTC 13

    // Can't yet generate code for STAT_DTC_14_HEXCODE_DATA of type data[3] at offset 91. But we account for the 3 bytes
        // HexCode of DTC 14 / HexCode von DTC 14

    #define I3_RES_EME_STAT_DTC_14_NUM_WERT                          (RXBUF_UINT(94))
    #define I3_RES_EME_STAT_DTC_14_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 14 / Numerator von DTC 14

    #define I3_RES_EME_STAT_DTC_14_DEN_WERT                          (RXBUF_UINT(96))
    #define I3_RES_EME_STAT_DTC_14_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 14 / Denominator von DTC 14

    // Can't yet generate code for STAT_DTC_15_HEXCODE_DATA of type data[3] at offset 98. But we account for the 3 bytes
        // HexCode of DTC 15 / HexCode von DTC 15

    #define I3_RES_EME_STAT_DTC_15_NUM_WERT                          (RXBUF_UINT(101))
    #define I3_RES_EME_STAT_DTC_15_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 15 / Numerator von DTC 15

    #define I3_RES_EME_STAT_DTC_15_DEN_WERT                          (RXBUF_UINT(103))
    #define I3_RES_EME_STAT_DTC_15_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 15 / Denominator von DTC 15

    // Can't yet generate code for STAT_DTC_16_HEXCODE_DATA of type data[3] at offset 105. But we account for the 3 bytes
        // HexCode of DTC 16 / HexCode von DTC 16

    #define I3_RES_EME_STAT_DTC_16_NUM_WERT                          (RXBUF_UINT(108))
    #define I3_RES_EME_STAT_DTC_16_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 16 / Numerator von DTC 16

    #define I3_RES_EME_STAT_DTC_16_DEN_WERT                          (RXBUF_UINT(110))
    #define I3_RES_EME_STAT_DTC_16_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 16 / Denominator von DTC 16

    // Can't yet generate code for STAT_DTC_17_HEXCODE_DATA of type data[3] at offset 112. But we account for the 3 bytes
        // HexCode of DTC 17 / HexCode von DTC 17

    #define I3_RES_EME_STAT_DTC_17_NUM_WERT                          (RXBUF_UINT(115))
    #define I3_RES_EME_STAT_DTC_17_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 17 / Numerator von DTC 17

    #define I3_RES_EME_STAT_DTC_17_DEN_WERT                          (RXBUF_UINT(117))
    #define I3_RES_EME_STAT_DTC_17_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 17 / Denominator von DTC 17

    // Can't yet generate code for STAT_DTC_18_HEXCODE_DATA of type data[3] at offset 119. But we account for the 3 bytes
        // HexCode of DTC 18 / HexCode von DTC 18

    #define I3_RES_EME_STAT_DTC_18_NUM_WERT                          (RXBUF_UINT(122))
    #define I3_RES_EME_STAT_DTC_18_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 18 / Numerator von DTC 18

    #define I3_RES_EME_STAT_DTC_18_DEN_WERT                          (RXBUF_UINT(124))
    #define I3_RES_EME_STAT_DTC_18_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 18 / Denominator von DTC 18

    // Can't yet generate code for STAT_DTC_19_HEXCODE_DATA of type data[3] at offset 126. But we account for the 3 bytes
        // HexCode from DTC 19 / HexCode von DTC 19

    #define I3_RES_EME_STAT_DTC_19_NUM_WERT                          (RXBUF_UINT(129))
    #define I3_RES_EME_STAT_DTC_19_NUM_WERT_TYPE                     unsigned short
        // DTC 19 numerator / Numerator von DTC 19

    #define I3_RES_EME_STAT_DTC_19_DEN_WERT                          (RXBUF_UINT(131))
    #define I3_RES_EME_STAT_DTC_19_DEN_WERT_TYPE                     unsigned short
        // Denominator from DTC 19 / Denominator von DTC 19

    // Can't yet generate code for STAT_DTC_20_HEXCODE_DATA of type data[3] at offset 133. But we account for the 3 bytes
        // HexCode of DTC 20 / HexCode von DTC 20

    #define I3_RES_EME_STAT_DTC_20_NUM_WERT                          (RXBUF_UINT(136))
    #define I3_RES_EME_STAT_DTC_20_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 20 / Numerator von DTC 20

    #define I3_RES_EME_STAT_DTC_20_DEN_WERT                          (RXBUF_UINT(138))
    #define I3_RES_EME_STAT_DTC_20_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 20 / Denominator von DTC 20

    // Can't yet generate code for STAT_DTC_21_HEXCODE_DATA of type data[3] at offset 140. But we account for the 3 bytes
        // HexCode of DTC 21 / HexCode von DTC 21

    #define I3_RES_EME_STAT_DTC_21_NUM_WERT                          (RXBUF_UINT(143))
    #define I3_RES_EME_STAT_DTC_21_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 21 / Numerator von DTC 21

    #define I3_RES_EME_STAT_DTC_21_DEN_WERT                          (RXBUF_UINT(145))
    #define I3_RES_EME_STAT_DTC_21_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 21 / Denominator von DTC 21

    // Can't yet generate code for STAT_DTC_22_HEXCODE_DATA of type data[3] at offset 147. But we account for the 3 bytes
        // HexCode of DTC 22 / HexCode von DTC 22

    #define I3_RES_EME_STAT_DTC_22_NUM_WERT                          (RXBUF_UINT(150))
    #define I3_RES_EME_STAT_DTC_22_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 22 / Numerator von DTC 22

    #define I3_RES_EME_STAT_DTC_22_DEN_WERT                          (RXBUF_UINT(152))
    #define I3_RES_EME_STAT_DTC_22_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 22 / Denominator von DTC 22

    // Can't yet generate code for STAT_DTC_23_HEXCODE_DATA of type data[3] at offset 154. But we account for the 3 bytes
        // HexCode of DTC 23 / HexCode von DTC 23

    #define I3_RES_EME_STAT_DTC_23_NUM_WERT                          (RXBUF_UINT(157))
    #define I3_RES_EME_STAT_DTC_23_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 23 / Numerator von DTC 23

    #define I3_RES_EME_STAT_DTC_23_DEN_WERT                          (RXBUF_UINT(159))
    #define I3_RES_EME_STAT_DTC_23_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 23 / Denominator von DTC 23

    // Can't yet generate code for STAT_DTC_24_HEXCODE_DATA of type data[3] at offset 161. But we account for the 3 bytes
        // HexCode of DTC 24 / HexCode von DTC 24

    #define I3_RES_EME_STAT_DTC_24_NUM_WERT                          (RXBUF_UINT(164))
    #define I3_RES_EME_STAT_DTC_24_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 24 / Numerator von DTC 24

    #define I3_RES_EME_STAT_DTC_24_DEN_WERT                          (RXBUF_UINT(166))
    #define I3_RES_EME_STAT_DTC_24_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 24 / Denominator von DTC 24

    // Can't yet generate code for STAT_DTC_25_HEXCODE_DATA of type data[3] at offset 168. But we account for the 3 bytes
        // HexCode of DTC 25 / HexCode von DTC 25

    #define I3_RES_EME_STAT_DTC_25_NUM_WERT                          (RXBUF_UINT(171))
    #define I3_RES_EME_STAT_DTC_25_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 25 / Numerator von DTC 25

    #define I3_RES_EME_STAT_DTC_25_DEN_WERT                          (RXBUF_UINT(173))
    #define I3_RES_EME_STAT_DTC_25_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 25 / Denominator von DTC 25

    // Can't yet generate code for STAT_DTC_26_HEXCODE_DATA of type data[3] at offset 175. But we account for the 3 bytes
        // HexCode of DTC 26 / HexCode von DTC 26

    #define I3_RES_EME_STAT_DTC_26_NUM_WERT                          (RXBUF_UINT(178))
    #define I3_RES_EME_STAT_DTC_26_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 26 / Numerator von DTC 26

    #define I3_RES_EME_STAT_DTC_26_DEN_WERT                          (RXBUF_UINT(180))
    #define I3_RES_EME_STAT_DTC_26_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 26 / Denominator von DTC 26

    // Can't yet generate code for STAT_DTC_27_HEXCODE_DATA of type data[3] at offset 182. But we account for the 3 bytes
        // HexCode of DTC 27 / HexCode von DTC 27

    #define I3_RES_EME_STAT_DTC_27_NUM_WERT                          (RXBUF_UINT(185))
    #define I3_RES_EME_STAT_DTC_27_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 27 / Numerator von DTC 27

    #define I3_RES_EME_STAT_DTC_27_DEN_WERT                          (RXBUF_UINT(187))
    #define I3_RES_EME_STAT_DTC_27_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 27 / Denominator von DTC 27

    // Can't yet generate code for STAT_DTC_28_HEXCODE_DATA of type data[3] at offset 189. But we account for the 3 bytes
        // HexCode of DTC 28 / HexCode von DTC 28

    #define I3_RES_EME_STAT_DTC_28_NUM_WERT                          (RXBUF_UINT(192))
    #define I3_RES_EME_STAT_DTC_28_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 28 / Numerator von DTC 28

    #define I3_RES_EME_STAT_DTC_28_DEN_WERT                          (RXBUF_UINT(194))
    #define I3_RES_EME_STAT_DTC_28_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 28 / Denominator von DTC 28

    // Can't yet generate code for STAT_DTC_29_HEXCODE_DATA of type data[3] at offset 196. But we account for the 3 bytes
        // HexCode of DTC 29 / HexCode von DTC 29

    #define I3_RES_EME_STAT_DTC_29_NUM_WERT                          (RXBUF_UINT(199))
    #define I3_RES_EME_STAT_DTC_29_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 29 / Numerator von DTC 29

    #define I3_RES_EME_STAT_DTC_29_DEN_WERT                          (RXBUF_UINT(201))
    #define I3_RES_EME_STAT_DTC_29_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 29 / Denominator von DTC 29

    // Can't yet generate code for STAT_DTC_30_HEXCODE_DATA of type data[3] at offset 203. But we account for the 3 bytes
        // HexCode of DTC 30 / HexCode von DTC 30

    #define I3_RES_EME_STAT_DTC_30_NUM_WERT                          (RXBUF_UINT(206))
    #define I3_RES_EME_STAT_DTC_30_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 30 / Numerator von DTC 30

    #define I3_RES_EME_STAT_DTC_30_DEN_WERT                          (RXBUF_UINT(208))
    #define I3_RES_EME_STAT_DTC_30_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 30 / Denominator von DTC 30

    // Can't yet generate code for STAT_DTC_31_HEXCODE_DATA of type data[3] at offset 210. But we account for the 3 bytes
        // HexCode of DTC 31 / HexCode von DTC 31

    #define I3_RES_EME_STAT_DTC_31_NUM_WERT                          (RXBUF_UINT(213))
    #define I3_RES_EME_STAT_DTC_31_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 31 / Numerator von DTC 31

    #define I3_RES_EME_STAT_DTC_31_DEN_WERT                          (RXBUF_UINT(215))
    #define I3_RES_EME_STAT_DTC_31_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 31 / Denominator von DTC 31

    // Can't yet generate code for STAT_DTC_32_HEXCODE_DATA of type data[3] at offset 217. But we account for the 3 bytes
        // HexCode of DTC 32 / HexCode von DTC 32

    #define I3_RES_EME_STAT_DTC_32_NUM_WERT                          (RXBUF_UINT(220))
    #define I3_RES_EME_STAT_DTC_32_NUM_WERT_TYPE                     unsigned short
        // DTC 32 numerator / Numerator von DTC 32

    #define I3_RES_EME_STAT_DTC_32_DEN_WERT                          (RXBUF_UINT(222))
    #define I3_RES_EME_STAT_DTC_32_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 32 / Denominator von DTC 32

    // Can't yet generate code for STAT_DTC_33_HEXCODE_DATA of type data[3] at offset 224. But we account for the 3 bytes
        // HexCode of DTC 33 / HexCode von DTC 33

    #define I3_RES_EME_STAT_DTC_33_NUM_WERT                          (RXBUF_UINT(227))
    #define I3_RES_EME_STAT_DTC_33_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 33 / Numerator von DTC 33

    #define I3_RES_EME_STAT_DTC_33_DEN_WERT                          (RXBUF_UINT(229))
    #define I3_RES_EME_STAT_DTC_33_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 33 / Denominator von DTC 33

    // Can't yet generate code for STAT_DTC_34_HEXCODE_DATA of type data[3] at offset 231. But we account for the 3 bytes
        // HexCode of DTC 34 / HexCode von DTC 34

    #define I3_RES_EME_STAT_DTC_34_NUM_WERT                          (RXBUF_UINT(234))
    #define I3_RES_EME_STAT_DTC_34_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 34 / Numerator von DTC 34

    #define I3_RES_EME_STAT_DTC_34_DEN_WERT                          (RXBUF_UINT(236))
    #define I3_RES_EME_STAT_DTC_34_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 34 / Denominator von DTC 34

    // Can't yet generate code for STAT_DTC_35_HEXCODE_DATA of type data[3] at offset 238. But we account for the 3 bytes
        // HexCode of DTC 35 / HexCode von DTC 35

    #define I3_RES_EME_STAT_DTC_35_NUM_WERT                          (RXBUF_UINT(241))
    #define I3_RES_EME_STAT_DTC_35_NUM_WERT_TYPE                     unsigned short
        // DTC 35 numerator / Numerator von DTC 35

    #define I3_RES_EME_STAT_DTC_35_DEN_WERT                          (RXBUF_UINT(243))
    #define I3_RES_EME_STAT_DTC_35_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 35 / Denominator von DTC 35

    // Can't yet generate code for STAT_DTC_36_HEXCODE_DATA of type data[3] at offset 245. But we account for the 3 bytes
        // HexCode of DTC 36 / HexCode von DTC 36

    #define I3_RES_EME_STAT_DTC_36_NUM_WERT                          (RXBUF_UINT(248))
    #define I3_RES_EME_STAT_DTC_36_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 36 / Numerator von DTC 36

    #define I3_RES_EME_STAT_DTC_36_DEN_WERT                          (RXBUF_UINT(250))
    #define I3_RES_EME_STAT_DTC_36_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 36 / Denominator von DTC 36

    // Can't yet generate code for STAT_DTC_37_HEXCODE_DATA of type data[3] at offset 252. But we account for the 3 bytes
        // HexCode of DTC 37 / HexCode von DTC 37

    #define I3_RES_EME_STAT_DTC_37_NUM_WERT                          (RXBUF_UINT(255))
    #define I3_RES_EME_STAT_DTC_37_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 37 / Numerator von DTC 37

    #define I3_RES_EME_STAT_DTC_37_DEN_WERT                          (RXBUF_UINT(257))
    #define I3_RES_EME_STAT_DTC_37_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 37 / Denominator von DTC 37

    // Can't yet generate code for STAT_DTC_38_HEXCODE_DATA of type data[3] at offset 259. But we account for the 3 bytes
        // HexCode of DTC 38 / HexCode von DTC 38

    #define I3_RES_EME_STAT_DTC_38_NUM_WERT                          (RXBUF_UINT(262))
    #define I3_RES_EME_STAT_DTC_38_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 38 / Numerator von DTC 38

    #define I3_RES_EME_STAT_DTC_38_DEN_WERT                          (RXBUF_UINT(264))
    #define I3_RES_EME_STAT_DTC_38_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 38 / Denominator von DTC 38

    // Can't yet generate code for STAT_DTC_39_HEXCODE_DATA of type data[3] at offset 266. But we account for the 3 bytes
        // HexCode of DTC 39 / HexCode von DTC 39

    #define I3_RES_EME_STAT_DTC_39_NUM_WERT                          (RXBUF_UINT(269))
    #define I3_RES_EME_STAT_DTC_39_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 39 / Numerator von DTC 39

    #define I3_RES_EME_STAT_DTC_39_DEN_WERT                          (RXBUF_UINT(271))
    #define I3_RES_EME_STAT_DTC_39_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 39 / Denominator von DTC 39

    // Can't yet generate code for STAT_DTC_40_HEXCODE_DATA of type data[3] at offset 273. But we account for the 3 bytes
        // HexCode of DTC 40 / HexCode von DTC 40

    #define I3_RES_EME_STAT_DTC_40_NUM_WERT                          (RXBUF_UINT(276))
    #define I3_RES_EME_STAT_DTC_40_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 40 / Numerator von DTC 40

    #define I3_RES_EME_STAT_DTC_40_DEN_WERT                          (RXBUF_UINT(278))
    #define I3_RES_EME_STAT_DTC_40_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 40 / Denominator von DTC 40

    // Can't yet generate code for STAT_DTC_41_HEXCODE_DATA of type data[3] at offset 280. But we account for the 3 bytes
        // HexCode of DTC 41 / HexCode von DTC 41

    #define I3_RES_EME_STAT_DTC_41_NUM_WERT                          (RXBUF_UINT(283))
    #define I3_RES_EME_STAT_DTC_41_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 41 / Numerator von DTC 41

    #define I3_RES_EME_STAT_DTC_41_DEN_WERT                          (RXBUF_UINT(285))
    #define I3_RES_EME_STAT_DTC_41_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 41 / Denominator von DTC 41

    // Can't yet generate code for STAT_DTC_42_HEXCODE_DATA of type data[3] at offset 287. But we account for the 3 bytes
        // HexCode of DTC 42 / HexCode von DTC 42

    #define I3_RES_EME_STAT_DTC_42_NUM_WERT                          (RXBUF_UINT(290))
    #define I3_RES_EME_STAT_DTC_42_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 42 / Numerator von DTC 42

    #define I3_RES_EME_STAT_DTC_42_DEN_WERT                          (RXBUF_UINT(292))
    #define I3_RES_EME_STAT_DTC_42_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 42 / Denominator von DTC 42

    // Can't yet generate code for STAT_DTC_43_HEXCODE_DATA of type data[3] at offset 294. But we account for the 3 bytes
        // HexCode of DTC 43 / HexCode von DTC 43

    #define I3_RES_EME_STAT_DTC_43_NUM_WERT                          (RXBUF_UINT(297))
    #define I3_RES_EME_STAT_DTC_43_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 43 / Numerator von DTC 43

    #define I3_RES_EME_STAT_DTC_43_DEN_WERT                          (RXBUF_UINT(299))
    #define I3_RES_EME_STAT_DTC_43_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 43 / Denominator von DTC 43

    // Can't yet generate code for STAT_DTC_44_HEXCODE_DATA of type data[3] at offset 301. But we account for the 3 bytes
        // HexCode of DTC 44 / HexCode von DTC 44

    #define I3_RES_EME_STAT_DTC_44_NUM_WERT                          (RXBUF_UINT(304))
    #define I3_RES_EME_STAT_DTC_44_NUM_WERT_TYPE                     unsigned short
        // DTC 44 numerator / Numerator von DTC 44

    #define I3_RES_EME_STAT_DTC_44_DEN_WERT                          (RXBUF_UINT(306))
    #define I3_RES_EME_STAT_DTC_44_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 44 / Denominator von DTC 44

    // Can't yet generate code for STAT_DTC_45_HEXCODE_DATA of type data[3] at offset 308. But we account for the 3 bytes
        // HexCode of DTC 45 / HexCode von DTC 45

    #define I3_RES_EME_STAT_DTC_45_NUM_WERT                          (RXBUF_UINT(311))
    #define I3_RES_EME_STAT_DTC_45_NUM_WERT_TYPE                     unsigned short
        // DTC 45 numerator / Numerator von DTC 45

    #define I3_RES_EME_STAT_DTC_45_DEN_WERT                          (RXBUF_UINT(313))
    #define I3_RES_EME_STAT_DTC_45_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 45 / Denominator von DTC 45

    // Can't yet generate code for STAT_DTC_46_HEXCODE_DATA of type data[3] at offset 315. But we account for the 3 bytes
        // HexCode of DTC 46 / HexCode von DTC 46

    #define I3_RES_EME_STAT_DTC_46_NUM_WERT                          (RXBUF_UINT(318))
    #define I3_RES_EME_STAT_DTC_46_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 46 / Numerator von DTC 46

    #define I3_RES_EME_STAT_DTC_46_DEN_WERT                          (RXBUF_UINT(320))
    #define I3_RES_EME_STAT_DTC_46_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 46 / Denominator von DTC 46

    // Can't yet generate code for STAT_DTC_47_HEXCODE_DATA of type data[3] at offset 322. But we account for the 3 bytes
        // HexCode of DTC 47 / HexCode von DTC 47

    #define I3_RES_EME_STAT_DTC_47_NUM_WERT                          (RXBUF_UINT(325))
    #define I3_RES_EME_STAT_DTC_47_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 47 / Numerator von DTC 47

    #define I3_RES_EME_STAT_DTC_47_DEN_WERT                          (RXBUF_UINT(327))
    #define I3_RES_EME_STAT_DTC_47_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 47 / Denominator von DTC 47

    // Can't yet generate code for STAT_DTC_48_HEXCODE_DATA of type data[3] at offset 329. But we account for the 3 bytes
        // HexCode of DTC 48 / HexCode von DTC 48

    #define I3_RES_EME_STAT_DTC_48_NUM_WERT                          (RXBUF_UINT(332))
    #define I3_RES_EME_STAT_DTC_48_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 48 / Numerator von DTC 48

    #define I3_RES_EME_STAT_DTC_48_DEN_WERT                          (RXBUF_UINT(334))
    #define I3_RES_EME_STAT_DTC_48_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 48 / Denominator von DTC 48

    // Can't yet generate code for STAT_DTC_49_HEXCODE_DATA of type data[3] at offset 336. But we account for the 3 bytes
        // HexCode of DTC 49 / HexCode von DTC 49

    #define I3_RES_EME_STAT_DTC_49_NUM_WERT                          (RXBUF_UINT(339))
    #define I3_RES_EME_STAT_DTC_49_NUM_WERT_TYPE                     unsigned short
        // DTC 49 numerator / Numerator von DTC 49

    #define I3_RES_EME_STAT_DTC_49_DEN_WERT                          (RXBUF_UINT(341))
    #define I3_RES_EME_STAT_DTC_49_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 49 / Denominator von DTC 49

    // Can't yet generate code for STAT_DTC_50_HEXCODE_DATA of type data[3] at offset 343. But we account for the 3 bytes
        // HexCode of DTC 50 / HexCode von DTC 50

    #define I3_RES_EME_STAT_DTC_50_NUM_WERT                          (RXBUF_UINT(346))
    #define I3_RES_EME_STAT_DTC_50_NUM_WERT_TYPE                     unsigned short
        // DTC 50 numerator / Numerator von DTC 50

    #define I3_RES_EME_STAT_DTC_50_DEN_WERT                          (RXBUF_UINT(348))
    #define I3_RES_EME_STAT_DTC_50_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 50 / Denominator von DTC 50

    // Can't yet generate code for STAT_DTC_51_HEXCODE_DATA of type data[3] at offset 350. But we account for the 3 bytes
        // HexCode of DTC 51 / HexCode von DTC 51

    #define I3_RES_EME_STAT_DTC_51_NUM_WERT                          (RXBUF_UINT(353))
    #define I3_RES_EME_STAT_DTC_51_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 51 / Numerator von DTC 51

    #define I3_RES_EME_STAT_DTC_51_DEN_WERT                          (RXBUF_UINT(355))
    #define I3_RES_EME_STAT_DTC_51_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 51 / Denominator von DTC 51

    // Can't yet generate code for STAT_DTC_52_HEXCODE_DATA of type data[3] at offset 357. But we account for the 3 bytes
        // HexCode of DTC 52 / HexCode von DTC 52

    #define I3_RES_EME_STAT_DTC_52_NUM_WERT                          (RXBUF_UINT(360))
    #define I3_RES_EME_STAT_DTC_52_NUM_WERT_TYPE                     unsigned short
        // DTC 52 numerator / Numerator von DTC 52

    #define I3_RES_EME_STAT_DTC_52_DEN_WERT                          (RXBUF_UINT(362))
    #define I3_RES_EME_STAT_DTC_52_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 52 / Denominator von DTC 52

    // Can't yet generate code for STAT_DTC_53_HEXCODE_DATA of type data[3] at offset 364. But we account for the 3 bytes
        // HexCode of DTC 53 / HexCode von DTC 53

    #define I3_RES_EME_STAT_DTC_53_NUM_WERT                          (RXBUF_UINT(367))
    #define I3_RES_EME_STAT_DTC_53_NUM_WERT_TYPE                     unsigned short
        // DTC 53 numerator / Numerator von DTC 53

    #define I3_RES_EME_STAT_DTC_53_DEN_WERT                          (RXBUF_UINT(369))
    #define I3_RES_EME_STAT_DTC_53_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 53 / Denominator von DTC 53

    // Can't yet generate code for STAT_DTC_54_HEXCODE_DATA of type data[3] at offset 371. But we account for the 3 bytes
        // HexCode of DTC 54 / HexCode von DTC 54

    #define I3_RES_EME_STAT_DTC_54_NUM_WERT                          (RXBUF_UINT(374))
    #define I3_RES_EME_STAT_DTC_54_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 54 / Numerator von DTC 54

    #define I3_RES_EME_STAT_DTC_54_DEN_WERT                          (RXBUF_UINT(376))
    #define I3_RES_EME_STAT_DTC_54_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 54 / Denominator von DTC 54

    // Can't yet generate code for STAT_DTC_55_HEXCODE_DATA of type data[3] at offset 378. But we account for the 3 bytes
        // HexCode of DTC 55 / HexCode von DTC 55

    #define I3_RES_EME_STAT_DTC_55_NUM_WERT                          (RXBUF_UINT(381))
    #define I3_RES_EME_STAT_DTC_55_NUM_WERT_TYPE                     unsigned short
        // DTC 55 numerator / Numerator von DTC 55

    #define I3_RES_EME_STAT_DTC_55_DEN_WERT                          (RXBUF_UINT(383))
    #define I3_RES_EME_STAT_DTC_55_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 55 / Denominator von DTC 55

    // Can't yet generate code for STAT_DTC_56_HEXCODE_DATA of type data[3] at offset 385. But we account for the 3 bytes
        // HexCode of DTC 56 / HexCode von DTC 56

    #define I3_RES_EME_STAT_DTC_56_NUM_WERT                          (RXBUF_UINT(388))
    #define I3_RES_EME_STAT_DTC_56_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 56 / Numerator von DTC 56

    #define I3_RES_EME_STAT_DTC_56_DEN_WERT                          (RXBUF_UINT(390))
    #define I3_RES_EME_STAT_DTC_56_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 56 / Denominator von DTC 56

    // Can't yet generate code for STAT_DTC_57_HEXCODE_DATA of type data[3] at offset 392. But we account for the 3 bytes
        // HexCode of DTC 57 / HexCode von DTC 57

    #define I3_RES_EME_STAT_DTC_57_NUM_WERT                          (RXBUF_UINT(395))
    #define I3_RES_EME_STAT_DTC_57_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 57 / Numerator von DTC 57

    #define I3_RES_EME_STAT_DTC_57_DEN_WERT                          (RXBUF_UINT(397))
    #define I3_RES_EME_STAT_DTC_57_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 57 / Denominator von DTC 57

    // Can't yet generate code for STAT_DTC_58_HEXCODE_DATA of type data[3] at offset 399. But we account for the 3 bytes
        // HexCode of DTC 58 / HexCode von DTC 58

    #define I3_RES_EME_STAT_DTC_58_NUM_WERT                          (RXBUF_UINT(402))
    #define I3_RES_EME_STAT_DTC_58_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 58 / Numerator von DTC 58

    #define I3_RES_EME_STAT_DTC_58_DEN_WERT                          (RXBUF_UINT(404))
    #define I3_RES_EME_STAT_DTC_58_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 58 / Denominator von DTC 58

    // Can't yet generate code for STAT_DTC_59_HEXCODE_DATA of type data[3] at offset 406. But we account for the 3 bytes
        // HexCode of DTC 59 / HexCode von DTC 59

    #define I3_RES_EME_STAT_DTC_59_NUM_WERT                          (RXBUF_UINT(409))
    #define I3_RES_EME_STAT_DTC_59_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 59 / Numerator von DTC 59

    #define I3_RES_EME_STAT_DTC_59_DEN_WERT                          (RXBUF_UINT(411))
    #define I3_RES_EME_STAT_DTC_59_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 59 / Denominator von DTC 59

    // Can't yet generate code for STAT_DTC_60_HEXCODE_DATA of type data[3] at offset 413. But we account for the 3 bytes
        // HexCode of DTC 60 / HexCode von DTC 60

    #define I3_RES_EME_STAT_DTC_60_NUM_WERT                          (RXBUF_UINT(416))
    #define I3_RES_EME_STAT_DTC_60_NUM_WERT_TYPE                     unsigned short
        // DTC 60 numerator / Numerator von DTC 60

    #define I3_RES_EME_STAT_DTC_60_DEN_WERT                          (RXBUF_UINT(418))
    #define I3_RES_EME_STAT_DTC_60_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 60 / Denominator von DTC 60

    // Can't yet generate code for STAT_DTC_61_HEXCODE_DATA of type data[3] at offset 420. But we account for the 3 bytes
        // HexCode of DTC 61 / HexCode von DTC 61

    #define I3_RES_EME_STAT_DTC_61_NUM_WERT                          (RXBUF_UINT(423))
    #define I3_RES_EME_STAT_DTC_61_NUM_WERT_TYPE                     unsigned short
        // DTC 61 numerator / Numerator von DTC 61

    #define I3_RES_EME_STAT_DTC_61_DEN_WERT                          (RXBUF_UINT(425))
    #define I3_RES_EME_STAT_DTC_61_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 61 / Denominator von DTC 61

    // Can't yet generate code for STAT_DTC_62_HEXCODE_DATA of type data[3] at offset 427. But we account for the 3 bytes
        // HexCode of DTC 62 / HexCode von DTC 62

    #define I3_RES_EME_STAT_DTC_62_NUM_WERT                          (RXBUF_UINT(430))
    #define I3_RES_EME_STAT_DTC_62_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 62 / Numerator von DTC 62

    #define I3_RES_EME_STAT_DTC_62_DEN_WERT                          (RXBUF_UINT(432))
    #define I3_RES_EME_STAT_DTC_62_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 62 / Denominator von DTC 62

    // Can't yet generate code for STAT_DTC_63_HEXCODE_DATA of type data[3] at offset 434. But we account for the 3 bytes
        // HexCode of DTC 63 / HexCode von DTC 63

    #define I3_RES_EME_STAT_DTC_63_NUM_WERT                          (RXBUF_UINT(437))
    #define I3_RES_EME_STAT_DTC_63_NUM_WERT_TYPE                     unsigned short
        // DTC 63 numerator / Numerator von DTC 63

    #define I3_RES_EME_STAT_DTC_63_DEN_WERT                          (RXBUF_UINT(439))
    #define I3_RES_EME_STAT_DTC_63_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 63 / Denominator von DTC 63

    // Can't yet generate code for STAT_DTC_64_HEXCODE_DATA of type data[3] at offset 441. But we account for the 3 bytes
        // HexCode of DTC 64 / HexCode von DTC 64

    #define I3_RES_EME_STAT_DTC_64_NUM_WERT                          (RXBUF_UINT(444))
    #define I3_RES_EME_STAT_DTC_64_NUM_WERT_TYPE                     unsigned short
        // DTC 64 numerator / Numerator von DTC 64

    #define I3_RES_EME_STAT_DTC_64_DEN_WERT                          (RXBUF_UINT(446))
    #define I3_RES_EME_STAT_DTC_64_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 64 / Denominator von DTC 64

    // Can't yet generate code for STAT_DTC_65_HEXCODE_DATA of type data[3] at offset 448. But we account for the 3 bytes
        // HexCode of DTC 65 / HexCode von DTC 65

    #define I3_RES_EME_STAT_DTC_65_NUM_WERT                          (RXBUF_UINT(451))
    #define I3_RES_EME_STAT_DTC_65_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 65 / Numerator von DTC 65

    #define I3_RES_EME_STAT_DTC_65_DEN_WERT                          (RXBUF_UINT(453))
    #define I3_RES_EME_STAT_DTC_65_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 65 / Denominator von DTC 65

    // Can't yet generate code for STAT_DTC_66_HEXCODE_DATA of type data[3] at offset 455. But we account for the 3 bytes
        // HexCode of DTC 66 / HexCode von DTC 66

    #define I3_RES_EME_STAT_DTC_66_NUM_WERT                          (RXBUF_UINT(458))
    #define I3_RES_EME_STAT_DTC_66_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 66 / Numerator von DTC 66

    #define I3_RES_EME_STAT_DTC_66_DEN_WERT                          (RXBUF_UINT(460))
    #define I3_RES_EME_STAT_DTC_66_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 66 / Denominator von DTC 66

    // Can't yet generate code for STAT_DTC_67_HEXCODE_DATA of type data[3] at offset 462. But we account for the 3 bytes
        // HexCode of DTC 67 / HexCode von DTC 67

    #define I3_RES_EME_STAT_DTC_67_NUM_WERT                          (RXBUF_UINT(465))
    #define I3_RES_EME_STAT_DTC_67_NUM_WERT_TYPE                     unsigned short
        // DTC 67 numerator / Numerator von DTC 67

    #define I3_RES_EME_STAT_DTC_67_DEN_WERT                          (RXBUF_UINT(467))
    #define I3_RES_EME_STAT_DTC_67_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 67 / Denominator von DTC 67

    // Can't yet generate code for STAT_DTC_68_HEXCODE_DATA of type data[3] at offset 469. But we account for the 3 bytes
        // HexCode of DTC 68 / HexCode von DTC 68

    #define I3_RES_EME_STAT_DTC_68_NUM_WERT                          (RXBUF_UINT(472))
    #define I3_RES_EME_STAT_DTC_68_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 68 / Numerator von DTC 68

    #define I3_RES_EME_STAT_DTC_68_DEN_WERT                          (RXBUF_UINT(474))
    #define I3_RES_EME_STAT_DTC_68_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 68 / Denominator von DTC 68

    // Can't yet generate code for STAT_DTC_69_HEXCODE_DATA of type data[3] at offset 476. But we account for the 3 bytes
        // HexCode of DTC 69 / HexCode von DTC 69

    #define I3_RES_EME_STAT_DTC_69_NUM_WERT                          (RXBUF_UINT(479))
    #define I3_RES_EME_STAT_DTC_69_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 69 / Numerator von DTC 69

    #define I3_RES_EME_STAT_DTC_69_DEN_WERT                          (RXBUF_UINT(481))
    #define I3_RES_EME_STAT_DTC_69_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 69 / Denominator von DTC 69

    // Can't yet generate code for STAT_DTC_70_HEXCODE_DATA of type data[3] at offset 483. But we account for the 3 bytes
        // HexCode of DTC 70 / HexCode von DTC 70

    #define I3_RES_EME_STAT_DTC_70_NUM_WERT                          (RXBUF_UINT(486))
    #define I3_RES_EME_STAT_DTC_70_NUM_WERT_TYPE                     unsigned short
        // DTC 70 numerator / Numerator von DTC 70

    #define I3_RES_EME_STAT_DTC_70_DEN_WERT                          (RXBUF_UINT(488))
    #define I3_RES_EME_STAT_DTC_70_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 70 / Denominator von DTC 70

    // Can't yet generate code for STAT_DTC_71_HEXCODE_DATA of type data[3] at offset 490. But we account for the 3 bytes
        // HexCode of DTC 71 / HexCode von DTC 71

    #define I3_RES_EME_STAT_DTC_71_NUM_WERT                          (RXBUF_UINT(493))
    #define I3_RES_EME_STAT_DTC_71_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 71 / Numerator von DTC 71

    #define I3_RES_EME_STAT_DTC_71_DEN_WERT                          (RXBUF_UINT(495))
    #define I3_RES_EME_STAT_DTC_71_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 71 / Denominator von DTC 71

    // Can't yet generate code for STAT_DTC_72_HEXCODE_DATA of type data[3] at offset 497. But we account for the 3 bytes
        // HexCode of DTC 72 / HexCode von DTC 72

    #define I3_RES_EME_STAT_DTC_72_NUM_WERT                          (RXBUF_UINT(500))
    #define I3_RES_EME_STAT_DTC_72_NUM_WERT_TYPE                     unsigned short
        // DTC 72 numerator / Numerator von DTC 72

    #define I3_RES_EME_STAT_DTC_72_DEN_WERT                          (RXBUF_UINT(502))
    #define I3_RES_EME_STAT_DTC_72_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 72 / Denominator von DTC 72

    // Can't yet generate code for STAT_DTC_73_HEXCODE_DATA of type data[3] at offset 504. But we account for the 3 bytes
        // HexCode of DTC 73 / HexCode von DTC 73

    #define I3_RES_EME_STAT_DTC_73_NUM_WERT                          (RXBUF_UINT(507))
    #define I3_RES_EME_STAT_DTC_73_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 73 / Numerator von DTC 73

    #define I3_RES_EME_STAT_DTC_73_DEN_WERT                          (RXBUF_UINT(509))
    #define I3_RES_EME_STAT_DTC_73_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 73 / Denominator von DTC 73

    // Can't yet generate code for STAT_DTC_74_HEXCODE_DATA of type data[3] at offset 511. But we account for the 3 bytes
        // HexCode of DTC 74 / HexCode von DTC 74

    #define I3_RES_EME_STAT_DTC_74_NUM_WERT                          (RXBUF_UINT(514))
    #define I3_RES_EME_STAT_DTC_74_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 74 / Numerator von DTC 74

    #define I3_RES_EME_STAT_DTC_74_DEN_WERT                          (RXBUF_UINT(516))
    #define I3_RES_EME_STAT_DTC_74_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 74 / Denominator von DTC 74

    // Can't yet generate code for STAT_DTC_75_HEXCODE_DATA of type data[3] at offset 518. But we account for the 3 bytes
        // HexCode of DTC 75 / HexCode von DTC 75

    #define I3_RES_EME_STAT_DTC_75_NUM_WERT                          (RXBUF_UINT(521))
    #define I3_RES_EME_STAT_DTC_75_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 75 / Numerator von DTC 75

    #define I3_RES_EME_STAT_DTC_75_DEN_WERT                          (RXBUF_UINT(523))
    #define I3_RES_EME_STAT_DTC_75_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 75 / Denominator von DTC 75

    // Can't yet generate code for STAT_DTC_76_HEXCODE_DATA of type data[3] at offset 525. But we account for the 3 bytes
        // HexCode of DTC 76 / HexCode von DTC 76

    #define I3_RES_EME_STAT_DTC_76_NUM_WERT                          (RXBUF_UINT(528))
    #define I3_RES_EME_STAT_DTC_76_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 76 / Numerator von DTC 76

    #define I3_RES_EME_STAT_DTC_76_DEN_WERT                          (RXBUF_UINT(530))
    #define I3_RES_EME_STAT_DTC_76_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 76 / Denominator von DTC 76

    // Can't yet generate code for STAT_DTC_77_HEXCODE_DATA of type data[3] at offset 532. But we account for the 3 bytes
        // HexCode of DTC 77 / HexCode von DTC 77

    #define I3_RES_EME_STAT_DTC_77_NUM_WERT                          (RXBUF_UINT(535))
    #define I3_RES_EME_STAT_DTC_77_NUM_WERT_TYPE                     unsigned short
        // DTC 77 numerator / Numerator von DTC 77

    #define I3_RES_EME_STAT_DTC_77_DEN_WERT                          (RXBUF_UINT(537))
    #define I3_RES_EME_STAT_DTC_77_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 77 / Denominator von DTC 77

    // Can't yet generate code for STAT_DTC_78_HEXCODE_DATA of type data[3] at offset 539. But we account for the 3 bytes
        // HexCode of DTC 78 / HexCode von DTC 78 

    #define I3_RES_EME_STAT_DTC_78_NUM_WERT                          (RXBUF_UINT(542))
    #define I3_RES_EME_STAT_DTC_78_NUM_WERT_TYPE                     unsigned short
        // DTC 78 numerator / Numerator von DTC 78

    #define I3_RES_EME_STAT_DTC_78_DEN_WERT                          (RXBUF_UINT(544))
    #define I3_RES_EME_STAT_DTC_78_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 78 / Denominator von DTC 78

    // Can't yet generate code for STAT_DTC_79_HEXCODE_DATA of type data[3] at offset 546. But we account for the 3 bytes
        // HexCode of DTC 79 / HexCode von DTC 79

    #define I3_RES_EME_STAT_DTC_79_NUM_WERT                          (RXBUF_UINT(549))
    #define I3_RES_EME_STAT_DTC_79_NUM_WERT_TYPE                     unsigned short
        // DTC 79 numerator / Numerator von DTC 79

    #define I3_RES_EME_STAT_DTC_79_DEN_WERT                          (RXBUF_UINT(551))
    #define I3_RES_EME_STAT_DTC_79_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 79 / Denominator von DTC 79

    // Can't yet generate code for STAT_DTC_80_HEXCODE_DATA of type data[3] at offset 553. But we account for the 3 bytes
        // HexCode of DTC 80 / HexCode von DTC 80

    #define I3_RES_EME_STAT_DTC_80_NUM_WERT                          (RXBUF_UINT(556))
    #define I3_RES_EME_STAT_DTC_80_NUM_WERT_TYPE                     unsigned short
        // DTC 80 numerator / Numerator von DTC 80

    #define I3_RES_EME_STAT_DTC_80_DEN_WERT                          (RXBUF_UINT(558))
    #define I3_RES_EME_STAT_DTC_80_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 80 / Denominator von DTC 80

    // Can't yet generate code for STAT_DTC_81_HEXCODE_DATA of type data[3] at offset 560. But we account for the 3 bytes
        // HexCode of DTC 81 / HexCode von DTC 81

    #define I3_RES_EME_STAT_DTC_81_NUM_WERT                          (RXBUF_UINT(563))
    #define I3_RES_EME_STAT_DTC_81_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 81 / Numerator von DTC 81

    #define I3_RES_EME_STAT_DTC_81_DEN_WERT                          (RXBUF_UINT(565))
    #define I3_RES_EME_STAT_DTC_81_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 81 / Denominator von DTC 81

    // Can't yet generate code for STAT_DTC_82_HEXCODE_DATA of type data[3] at offset 567. But we account for the 3 bytes
        // HexCode of DTC 82 / HexCode von DTC 82

    #define I3_RES_EME_STAT_DTC_82_NUM_WERT                          (RXBUF_UINT(570))
    #define I3_RES_EME_STAT_DTC_82_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 82 / Numerator von DTC 82

    #define I3_RES_EME_STAT_DTC_82_DEN_WERT                          (RXBUF_UINT(572))
    #define I3_RES_EME_STAT_DTC_82_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 82 / Denominator von DTC 82

    // Can't yet generate code for STAT_DTC_83_HEXCODE_DATA of type data[3] at offset 574. But we account for the 3 bytes
        // HexCode of DTC 83 / HexCode von DTC 83

    #define I3_RES_EME_STAT_DTC_83_NUM_WERT                          (RXBUF_UINT(577))
    #define I3_RES_EME_STAT_DTC_83_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 83 / Numerator von DTC 83

    #define I3_RES_EME_STAT_DTC_83_DEN_WERT                          (RXBUF_UINT(579))
    #define I3_RES_EME_STAT_DTC_83_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 83 / Denominator von DTC 83

    // Can't yet generate code for STAT_DTC_84_HEXCODE_DATA of type data[3] at offset 581. But we account for the 3 bytes
        // HexCode of DTC 84 / HexCode von DTC 84

    #define I3_RES_EME_STAT_DTC_84_NUM_WERT                          (RXBUF_UINT(584))
    #define I3_RES_EME_STAT_DTC_84_NUM_WERT_TYPE                     unsigned short
        // DTC 84 numerator / Numerator von DTC 84

    #define I3_RES_EME_STAT_DTC_84_DEN_WERT                          (RXBUF_UINT(586))
    #define I3_RES_EME_STAT_DTC_84_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 84 / Denominator von DTC 84

    // Can't yet generate code for STAT_DTC_85_HEXCODE_DATA of type data[3] at offset 588. But we account for the 3 bytes
        // HexCode of DTC 85 / HexCode von DTC 85

    #define I3_RES_EME_STAT_DTC_85_NUM_WERT                          (RXBUF_UINT(591))
    #define I3_RES_EME_STAT_DTC_85_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 85 / Numerator von DTC 85

    #define I3_RES_EME_STAT_DTC_85_DEN_WERT                          (RXBUF_UINT(593))
    #define I3_RES_EME_STAT_DTC_85_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 85 / Denominator von DTC 85

    // Can't yet generate code for STAT_DTC_86_HEXCODE_DATA of type data[3] at offset 595. But we account for the 3 bytes
        // HexCode of DTC 86 / HexCode von DTC 86

    #define I3_RES_EME_STAT_DTC_86_NUM_WERT                          (RXBUF_UINT(598))
    #define I3_RES_EME_STAT_DTC_86_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 86 / Numerator von DTC 86

    #define I3_RES_EME_STAT_DTC_86_DEN_WERT                          (RXBUF_UINT(600))
    #define I3_RES_EME_STAT_DTC_86_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 86 / Denominator von DTC 86

    // Can't yet generate code for STAT_DTC_87_HEXCODE_DATA of type data[3] at offset 602. But we account for the 3 bytes
        // HexCode of DTC 87 / HexCode von DTC 87

    #define I3_RES_EME_STAT_DTC_87_NUM_WERT                          (RXBUF_UINT(605))
    #define I3_RES_EME_STAT_DTC_87_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 87 / Numerator von DTC 87

    #define I3_RES_EME_STAT_DTC_87_DEN_WERT                          (RXBUF_UINT(607))
    #define I3_RES_EME_STAT_DTC_87_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 87 / Denominator von DTC 87

    // Can't yet generate code for STAT_DTC_88_HEXCODE_DATA of type data[3] at offset 609. But we account for the 3 bytes
        // HexCode of DTC 88 / HexCode von DTC 88 

    #define I3_RES_EME_STAT_DTC_88_NUM_WERT                          (RXBUF_UINT(612))
    #define I3_RES_EME_STAT_DTC_88_NUM_WERT_TYPE                     unsigned short
        // DTC 88 numerator / Numerator von DTC 88

    #define I3_RES_EME_STAT_DTC_88_DEN_WERT                          (RXBUF_UINT(614))
    #define I3_RES_EME_STAT_DTC_88_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 88 / Denominator von DTC 88

    // Can't yet generate code for STAT_DTC_89_HEXCODE_DATA of type data[3] at offset 616. But we account for the 3 bytes
        // HexCode of DTC 89 / HexCode von DTC 89

    #define I3_RES_EME_STAT_DTC_89_NUM_WERT                          (RXBUF_UINT(619))
    #define I3_RES_EME_STAT_DTC_89_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 89 / Numerator von DTC 89

    #define I3_RES_EME_STAT_DTC_89_DEN_WERT                          (RXBUF_UINT(621))
    #define I3_RES_EME_STAT_DTC_89_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 89 / Denominator von DTC 89

    // Can't yet generate code for STAT_DTC_90_HEXCODE_DATA of type data[3] at offset 623. But we account for the 3 bytes
        // HexCode of DTC 90 / HexCode von DTC 90

    #define I3_RES_EME_STAT_DTC_90_NUM_WERT                          (RXBUF_UINT(626))
    #define I3_RES_EME_STAT_DTC_90_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 90 / Numerator von DTC 90

    #define I3_RES_EME_STAT_DTC_90_DEN_WERT                          (RXBUF_UINT(628))
    #define I3_RES_EME_STAT_DTC_90_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 90 / Denominator von DTC 90

    // Can't yet generate code for STAT_DTC_91_HEXCODE_DATA of type data[3] at offset 630. But we account for the 3 bytes
        // HexCode of DTC 91 / HexCode von DTC 91

    #define I3_RES_EME_STAT_DTC_91_NUM_WERT                          (RXBUF_UINT(633))
    #define I3_RES_EME_STAT_DTC_91_NUM_WERT_TYPE                     unsigned short
        // DTC 91 numerator / Numerator von DTC 91

    #define I3_RES_EME_STAT_DTC_91_DEN_WERT                          (RXBUF_UINT(635))
    #define I3_RES_EME_STAT_DTC_91_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 91 / Denominator von DTC 91

    // Can't yet generate code for STAT_DTC_92_HEXCODE_DATA of type data[3] at offset 637. But we account for the 3 bytes
        // HexCode of DTC 92 / HexCode von DTC 92

    #define I3_RES_EME_STAT_DTC_92_NUM_WERT                          (RXBUF_UINT(640))
    #define I3_RES_EME_STAT_DTC_92_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 92 / Numerator von DTC 92

    #define I3_RES_EME_STAT_DTC_92_DEN_WERT                          (RXBUF_UINT(642))
    #define I3_RES_EME_STAT_DTC_92_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 92 / Denominator von DTC 92

    // Can't yet generate code for STAT_DTC_93_HEXCODE_DATA of type data[3] at offset 644. But we account for the 3 bytes
        // HexCode of DTC 93 / HexCode von DTC 93

    #define I3_RES_EME_STAT_DTC_93_NUM_WERT                          (RXBUF_UINT(647))
    #define I3_RES_EME_STAT_DTC_93_NUM_WERT_TYPE                     unsigned short
        // DTC 93 numerator / Numerator von DTC 93

    #define I3_RES_EME_STAT_DTC_93_DEN_WERT                          (RXBUF_UINT(649))
    #define I3_RES_EME_STAT_DTC_93_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 93 / Denominator von DTC 93

    // Can't yet generate code for STAT_DTC_94_HEXCODE_DATA of type data[3] at offset 651. But we account for the 3 bytes
        // HexCode of DTC 94 / HexCode von DTC 94

    #define I3_RES_EME_STAT_DTC_94_NUM_WERT                          (RXBUF_UINT(654))
    #define I3_RES_EME_STAT_DTC_94_NUM_WERT_TYPE                     unsigned short
        // DTC 94 numerator / Numerator von DTC 94

    #define I3_RES_EME_STAT_DTC_94_DEN_WERT                          (RXBUF_UINT(656))
    #define I3_RES_EME_STAT_DTC_94_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 94 / Denominator von DTC 94

    // Can't yet generate code for STAT_DTC_95_HEXCODE_DATA of type data[3] at offset 658. But we account for the 3 bytes
        // HexCode of DTC 95 / HexCode von DTC 95

    #define I3_RES_EME_STAT_DTC_95_NUM_WERT                          (RXBUF_UINT(661))
    #define I3_RES_EME_STAT_DTC_95_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 95 / Numerator von DTC 95

    #define I3_RES_EME_STAT_DTC_95_DEN_WERT                          (RXBUF_UINT(663))
    #define I3_RES_EME_STAT_DTC_95_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 95 / Denominator von DTC 95

    // Can't yet generate code for STAT_DTC_96_HEXCODE_DATA of type data[3] at offset 665. But we account for the 3 bytes
        // HexCode of DTC 96 / HexCode von DTC 96

    #define I3_RES_EME_STAT_DTC_96_NUM_WERT                          (RXBUF_UINT(668))
    #define I3_RES_EME_STAT_DTC_96_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 96 / Numerator von DTC 96

    #define I3_RES_EME_STAT_DTC_96_DEN_WERT                          (RXBUF_UINT(670))
    #define I3_RES_EME_STAT_DTC_96_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 96 / Denominator von DTC 96

    // Can't yet generate code for STAT_DTC_97_HEXCODE_DATA of type data[3] at offset 672. But we account for the 3 bytes
        // HexCode of DTC 97 / HexCode von DTC 97

    #define I3_RES_EME_STAT_DTC_97_NUM_WERT                          (RXBUF_UINT(675))
    #define I3_RES_EME_STAT_DTC_97_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 97 / Numerator von DTC 97

    #define I3_RES_EME_STAT_DTC_97_DEN_WERT                          (RXBUF_UINT(677))
    #define I3_RES_EME_STAT_DTC_97_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 97 / Denominator von DTC 97

    // Can't yet generate code for STAT_DTC_98_HEXCODE_DATA of type data[3] at offset 679. But we account for the 3 bytes
        // HexCode of DTC 98 / HexCode von DTC 98 

    #define I3_RES_EME_STAT_DTC_98_NUM_WERT                          (RXBUF_UINT(682))
    #define I3_RES_EME_STAT_DTC_98_NUM_WERT_TYPE                     unsigned short
        // Numerator from DTC 98 / Numerator von DTC 98

    #define I3_RES_EME_STAT_DTC_98_DEN_WERT                          (RXBUF_UINT(684))
    #define I3_RES_EME_STAT_DTC_98_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 98 / Denominator von DTC 98

    // Can't yet generate code for STAT_DTC_99_HEXCODE_DATA of type data[3] at offset 686. But we account for the 3 bytes
        // HexCode of DTC 99 / HexCode von DTC 99

    #define I3_RES_EME_STAT_DTC_99_NUM_WERT                          (RXBUF_UINT(689))
    #define I3_RES_EME_STAT_DTC_99_NUM_WERT_TYPE                     unsigned short
        // DTC 99 numerator / Numerator von DTC 99

    #define I3_RES_EME_STAT_DTC_99_DEN_WERT                          (RXBUF_UINT(691))
    #define I3_RES_EME_STAT_DTC_99_DEN_WERT_TYPE                     unsigned short
        // Denominator of DTC 99 / Denominator von DTC 99

    // Can't yet generate code for STAT_DTC_100_HEXCODE_DATA of type data[3] at offset 693. But we account for the 3 bytes
        // HexCode of DTC 100 / HexCode von DTC 100

    #define I3_RES_EME_STAT_DTC_100_NUM_WERT                         (RXBUF_UINT(696))
    #define I3_RES_EME_STAT_DTC_100_NUM_WERT_TYPE                    unsigned short
        // DTC 100 numerator / Numerator von DTC 100

    #define I3_RES_EME_STAT_DTC_100_DEN_WERT                         (RXBUF_UINT(698))
    #define I3_RES_EME_STAT_DTC_100_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 100 / Denominator von DTC 100

    // Can't yet generate code for STAT_DTC_101_HEXCODE_DATA of type data[3] at offset 700. But we account for the 3 bytes
        // HexCode of DTC 101 / HexCode von DTC 101

    #define I3_RES_EME_STAT_DTC_101_NUM_WERT                         (RXBUF_UINT(703))
    #define I3_RES_EME_STAT_DTC_101_NUM_WERT_TYPE                    unsigned short
        // DTC 101 numerator / Numerator von DTC 101

    #define I3_RES_EME_STAT_DTC_101_DEN_WERT                         (RXBUF_UINT(705))
    #define I3_RES_EME_STAT_DTC_101_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 101 / Denominator von DTC 101

    // Can't yet generate code for STAT_DTC_102_HEXCODE_DATA of type data[3] at offset 707. But we account for the 3 bytes
        // HexCode of DTC 102 / HexCode von DTC 102

    #define I3_RES_EME_STAT_DTC_102_NUM_WERT                         (RXBUF_UINT(710))
    #define I3_RES_EME_STAT_DTC_102_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 102 / Numerator von DTC 102

    #define I3_RES_EME_STAT_DTC_102_DEN_WERT                         (RXBUF_UINT(712))
    #define I3_RES_EME_STAT_DTC_102_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 102 / Denominator von DTC 102

    // Can't yet generate code for STAT_DTC_103_HEXCODE_DATA of type data[3] at offset 714. But we account for the 3 bytes
        // HexCode of DTC 103 / HexCode von DTC 103

    #define I3_RES_EME_STAT_DTC_103_NUM_WERT                         (RXBUF_UINT(717))
    #define I3_RES_EME_STAT_DTC_103_NUM_WERT_TYPE                    unsigned short
        // DTC 103 numerator / Numerator von DTC 103

    #define I3_RES_EME_STAT_DTC_103_DEN_WERT                         (RXBUF_UINT(719))
    #define I3_RES_EME_STAT_DTC_103_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 103 / Denominator von DTC 103

    // Can't yet generate code for STAT_DTC_104_HEXCODE_DATA of type data[3] at offset 721. But we account for the 3 bytes
        // HexCode of DTC 104 / HexCode von DTC 104

    #define I3_RES_EME_STAT_DTC_104_NUM_WERT                         (RXBUF_UINT(724))
    #define I3_RES_EME_STAT_DTC_104_NUM_WERT_TYPE                    unsigned short
        // DTC 104 numerator / Numerator von DTC 104

    #define I3_RES_EME_STAT_DTC_104_DEN_WERT                         (RXBUF_UINT(726))
    #define I3_RES_EME_STAT_DTC_104_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 104 / Denominator von DTC 104

    // Can't yet generate code for STAT_DTC_105_HEXCODE_DATA of type data[3] at offset 728. But we account for the 3 bytes
        // HexCode of DTC 105 / HexCode von DTC 105

    #define I3_RES_EME_STAT_DTC_105_NUM_WERT                         (RXBUF_UINT(731))
    #define I3_RES_EME_STAT_DTC_105_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 105 / Numerator von DTC 105

    #define I3_RES_EME_STAT_DTC_105_DEN_WERT                         (RXBUF_UINT(733))
    #define I3_RES_EME_STAT_DTC_105_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 105 / Denominator von DTC 105

    // Can't yet generate code for STAT_DTC_106_HEXCODE_DATA of type data[3] at offset 735. But we account for the 3 bytes
        // HexCode of DTC 106 / HexCode von DTC 106

    #define I3_RES_EME_STAT_DTC_106_NUM_WERT                         (RXBUF_UINT(738))
    #define I3_RES_EME_STAT_DTC_106_NUM_WERT_TYPE                    unsigned short
        // DTC 106 numerator / Numerator von DTC 106

    #define I3_RES_EME_STAT_DTC_106_DEN_WERT                         (RXBUF_UINT(740))
    #define I3_RES_EME_STAT_DTC_106_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 106 / Denominator von DTC 106

    // Can't yet generate code for STAT_DTC_107_HEXCODE_DATA of type data[3] at offset 742. But we account for the 3 bytes
        // HexCode of DTC 107 / HexCode von DTC 107

    #define I3_RES_EME_STAT_DTC_107_NUM_WERT                         (RXBUF_UINT(745))
    #define I3_RES_EME_STAT_DTC_107_NUM_WERT_TYPE                    unsigned short
        // DTC 107 numerator / Numerator von DTC 107

    #define I3_RES_EME_STAT_DTC_107_DEN_WERT                         (RXBUF_UINT(747))
    #define I3_RES_EME_STAT_DTC_107_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 107 / Denominator von DTC 107

    // Can't yet generate code for STAT_DTC_108_HEXCODE_DATA of type data[3] at offset 749. But we account for the 3 bytes
        // HexCode of DTC 108 / HexCode von DTC 108 

    #define I3_RES_EME_STAT_DTC_108_NUM_WERT                         (RXBUF_UINT(752))
    #define I3_RES_EME_STAT_DTC_108_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 108 / Numerator von DTC 108

    #define I3_RES_EME_STAT_DTC_108_DEN_WERT                         (RXBUF_UINT(754))
    #define I3_RES_EME_STAT_DTC_108_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 108 / Denominator von DTC 108

    // Can't yet generate code for STAT_DTC_109_HEXCODE_DATA of type data[3] at offset 756. But we account for the 3 bytes
        // HexCode of DTC 109 / HexCode von DTC 109

    #define I3_RES_EME_STAT_DTC_109_NUM_WERT                         (RXBUF_UINT(759))
    #define I3_RES_EME_STAT_DTC_109_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 109 / Numerator von DTC 109

    #define I3_RES_EME_STAT_DTC_109_DEN_WERT                         (RXBUF_UINT(761))
    #define I3_RES_EME_STAT_DTC_109_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 109 / Denominator von DTC 109

    // Can't yet generate code for STAT_DTC_110_HEXCODE_DATA of type data[3] at offset 763. But we account for the 3 bytes
        // HexCode of DTC 110 / HexCode von DTC 110

    #define I3_RES_EME_STAT_DTC_110_NUM_WERT                         (RXBUF_UINT(766))
    #define I3_RES_EME_STAT_DTC_110_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 110 / Numerator von DTC 110

    #define I3_RES_EME_STAT_DTC_110_DEN_WERT                         (RXBUF_UINT(768))
    #define I3_RES_EME_STAT_DTC_110_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 110 / Denominator von DTC 110

    // Can't yet generate code for STAT_DTC_111_HEXCODE_DATA of type data[3] at offset 770. But we account for the 3 bytes
        // HexCode of DTC 111 / HexCode von DTC 111

    #define I3_RES_EME_STAT_DTC_111_NUM_WERT                         (RXBUF_UINT(773))
    #define I3_RES_EME_STAT_DTC_111_NUM_WERT_TYPE                    unsigned short
        // DTC 111 numerator / Numerator von DTC 111

    #define I3_RES_EME_STAT_DTC_111_DEN_WERT                         (RXBUF_UINT(775))
    #define I3_RES_EME_STAT_DTC_111_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 111 / Denominator von DTC 111

    // Can't yet generate code for STAT_DTC_112_HEXCODE_DATA of type data[3] at offset 777. But we account for the 3 bytes
        // HexCode of DTC 112 / HexCode von DTC 112

    #define I3_RES_EME_STAT_DTC_112_NUM_WERT                         (RXBUF_UINT(780))
    #define I3_RES_EME_STAT_DTC_112_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 112 / Numerator von DTC 112

    #define I3_RES_EME_STAT_DTC_112_DEN_WERT                         (RXBUF_UINT(782))
    #define I3_RES_EME_STAT_DTC_112_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 112 / Denominator von DTC 112

    // Can't yet generate code for STAT_DTC_113_HEXCODE_DATA of type data[3] at offset 784. But we account for the 3 bytes
        // HexCode of DTC 113 / HexCode von DTC 113

    #define I3_RES_EME_STAT_DTC_113_NUM_WERT                         (RXBUF_UINT(787))
    #define I3_RES_EME_STAT_DTC_113_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 113 / Numerator von DTC 113

    #define I3_RES_EME_STAT_DTC_113_DEN_WERT                         (RXBUF_UINT(789))
    #define I3_RES_EME_STAT_DTC_113_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 113 / Denominator von DTC 113

    // Can't yet generate code for STAT_DTC_114_HEXCODE_DATA of type data[3] at offset 791. But we account for the 3 bytes
        // Hex code from DTC 114 / HexCode von DTC 114

    #define I3_RES_EME_STAT_DTC_114_NUM_WERT                         (RXBUF_UINT(794))
    #define I3_RES_EME_STAT_DTC_114_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 114 / Numerator von DTC 114

    #define I3_RES_EME_STAT_DTC_114_DEN_WERT                         (RXBUF_UINT(796))
    #define I3_RES_EME_STAT_DTC_114_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 114 / Denominator von DTC 114

    // Can't yet generate code for STAT_DTC_115_HEXCODE_DATA of type data[3] at offset 798. But we account for the 3 bytes
        // Hex code of DTC 115 / HexCode von DTC 115

    #define I3_RES_EME_STAT_DTC_115_NUM_WERT                         (RXBUF_UINT(801))
    #define I3_RES_EME_STAT_DTC_115_NUM_WERT_TYPE                    unsigned short
        // DTC 115 numerator / Numerator von DTC 115

    #define I3_RES_EME_STAT_DTC_115_DEN_WERT                         (RXBUF_UINT(803))
    #define I3_RES_EME_STAT_DTC_115_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 115 / Denominator von DTC 115

    // Can't yet generate code for STAT_DTC_116_HEXCODE_DATA of type data[3] at offset 805. But we account for the 3 bytes
        // HexCode of DTC 116 / HexCode von DTC 116

    #define I3_RES_EME_STAT_DTC_116_NUM_WERT                         (RXBUF_UINT(808))
    #define I3_RES_EME_STAT_DTC_116_NUM_WERT_TYPE                    unsigned short
        // DTC 116 numerator / Numerator von DTC 116

    #define I3_RES_EME_STAT_DTC_116_DEN_WERT                         (RXBUF_UINT(810))
    #define I3_RES_EME_STAT_DTC_116_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 116 / Denominator von DTC 116

    // Can't yet generate code for STAT_DTC_117_HEXCODE_DATA of type data[3] at offset 812. But we account for the 3 bytes
        // HexCode of DTC 117 / HexCode von DTC 117

    #define I3_RES_EME_STAT_DTC_117_NUM_WERT                         (RXBUF_UINT(815))
    #define I3_RES_EME_STAT_DTC_117_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 117 / Numerator von DTC 117

    #define I3_RES_EME_STAT_DTC_117_DEN_WERT                         (RXBUF_UINT(817))
    #define I3_RES_EME_STAT_DTC_117_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 117 / Denominator von DTC 117

    // Can't yet generate code for STAT_DTC_118_HEXCODE_DATA of type data[3] at offset 819. But we account for the 3 bytes
        // HexCode of DTC 118 / HexCode von DTC 118

    #define I3_RES_EME_STAT_DTC_118_NUM_WERT                         (RXBUF_UINT(822))
    #define I3_RES_EME_STAT_DTC_118_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 118 / Numerator von DTC 118

    #define I3_RES_EME_STAT_DTC_118_DEN_WERT                         (RXBUF_UINT(824))
    #define I3_RES_EME_STAT_DTC_118_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 118 / Denominator von DTC 118

    // Can't yet generate code for STAT_DTC_119_HEXCODE_DATA of type data[3] at offset 826. But we account for the 3 bytes
        // HexCode of DTC 119 / HexCode von DTC 119

    #define I3_RES_EME_STAT_DTC_119_NUM_WERT                         (RXBUF_UINT(829))
    #define I3_RES_EME_STAT_DTC_119_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 119 / Numerator von DTC 119

    #define I3_RES_EME_STAT_DTC_119_DEN_WERT                         (RXBUF_UINT(831))
    #define I3_RES_EME_STAT_DTC_119_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 119 / Denominator von DTC 119

    // Can't yet generate code for STAT_DTC_120_HEXCODE_DATA of type data[3] at offset 833. But we account for the 3 bytes
        // HexCode of DTC 120 / HexCode von DTC 120

    #define I3_RES_EME_STAT_DTC_120_NUM_WERT                         (RXBUF_UINT(836))
    #define I3_RES_EME_STAT_DTC_120_NUM_WERT_TYPE                    unsigned short
        // DTC 120 numerator / Numerator von DTC 120

    #define I3_RES_EME_STAT_DTC_120_DEN_WERT                         (RXBUF_UINT(838))
    #define I3_RES_EME_STAT_DTC_120_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 120 / Denominator von DTC 120

    // Can't yet generate code for STAT_DTC_121_HEXCODE_DATA of type data[3] at offset 840. But we account for the 3 bytes
        // HexCode of DTC 121 / HexCode von DTC 121

    #define I3_RES_EME_STAT_DTC_121_NUM_WERT                         (RXBUF_UINT(843))
    #define I3_RES_EME_STAT_DTC_121_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 121 / Numerator von DTC 121

    #define I3_RES_EME_STAT_DTC_121_DEN_WERT                         (RXBUF_UINT(845))
    #define I3_RES_EME_STAT_DTC_121_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 121 / Denominator von DTC 121

    // Can't yet generate code for STAT_DTC_122_HEXCODE_DATA of type data[3] at offset 847. But we account for the 3 bytes
        // HexCode of DTC 122 / HexCode von DTC 122

    #define I3_RES_EME_STAT_DTC_122_NUM_WERT                         (RXBUF_UINT(850))
    #define I3_RES_EME_STAT_DTC_122_NUM_WERT_TYPE                    unsigned short
        // DTC 122 numerator / Numerator von DTC 122

    #define I3_RES_EME_STAT_DTC_122_DEN_WERT                         (RXBUF_UINT(852))
    #define I3_RES_EME_STAT_DTC_122_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 122 / Denominator von DTC 122

    // Can't yet generate code for STAT_DTC_123_HEXCODE_DATA of type data[3] at offset 854. But we account for the 3 bytes
        // HexCode of DTC 123 / HexCode von DTC 123

    #define I3_RES_EME_STAT_DTC_123_NUM_WERT                         (RXBUF_UINT(857))
    #define I3_RES_EME_STAT_DTC_123_NUM_WERT_TYPE                    unsigned short
        // DTC 123 numerator / Numerator von DTC 123

    #define I3_RES_EME_STAT_DTC_123_DEN_WERT                         (RXBUF_UINT(859))
    #define I3_RES_EME_STAT_DTC_123_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 123 / Denominator von DTC 123

    // Can't yet generate code for STAT_DTC_124_HEXCODE_DATA of type data[3] at offset 861. But we account for the 3 bytes
        // HexCode of DTC 124 / HexCode von DTC 124

    #define I3_RES_EME_STAT_DTC_124_NUM_WERT                         (RXBUF_UINT(864))
    #define I3_RES_EME_STAT_DTC_124_NUM_WERT_TYPE                    unsigned short
        // DTC 124 numerator / Numerator von DTC 124

    #define I3_RES_EME_STAT_DTC_124_DEN_WERT                         (RXBUF_UINT(866))
    #define I3_RES_EME_STAT_DTC_124_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 124 / Denominator von DTC 124

    // Can't yet generate code for STAT_DTC_125_HEXCODE_DATA of type data[3] at offset 868. But we account for the 3 bytes
        // HexCode of DTC 125 / HexCode von DTC 125

    #define I3_RES_EME_STAT_DTC_125_NUM_WERT                         (RXBUF_UINT(871))
    #define I3_RES_EME_STAT_DTC_125_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 125 / Numerator von DTC 125

    #define I3_RES_EME_STAT_DTC_125_DEN_WERT                         (RXBUF_UINT(873))
    #define I3_RES_EME_STAT_DTC_125_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 125 / Denominator von DTC 125

    // Can't yet generate code for STAT_DTC_126_HEXCODE_DATA of type data[3] at offset 875. But we account for the 3 bytes
        // HexCode of DTC 126 / HexCode von DTC 126

    #define I3_RES_EME_STAT_DTC_126_NUM_WERT                         (RXBUF_UINT(878))
    #define I3_RES_EME_STAT_DTC_126_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 126 / Numerator von DTC 126

    #define I3_RES_EME_STAT_DTC_126_DEN_WERT                         (RXBUF_UINT(880))
    #define I3_RES_EME_STAT_DTC_126_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 126 / Denominator von DTC 126

    // Can't yet generate code for STAT_DTC_127_HEXCODE_DATA of type data[3] at offset 882. But we account for the 3 bytes
        // HexCode of DTC 127 / HexCode von DTC 127

    #define I3_RES_EME_STAT_DTC_127_NUM_WERT                         (RXBUF_UINT(885))
    #define I3_RES_EME_STAT_DTC_127_NUM_WERT_TYPE                    unsigned short
        // DTC 127 numerator / Numerator von DTC 127

    #define I3_RES_EME_STAT_DTC_127_DEN_WERT                         (RXBUF_UINT(887))
    #define I3_RES_EME_STAT_DTC_127_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 127 / Denominator von DTC 127

    // Can't yet generate code for STAT_DTC_128_HEXCODE_DATA of type data[3] at offset 889. But we account for the 3 bytes
        // HexCode of DTC 128 / HexCode von DTC 128

    #define I3_RES_EME_STAT_DTC_128_NUM_WERT                         (RXBUF_UINT(892))
    #define I3_RES_EME_STAT_DTC_128_NUM_WERT_TYPE                    unsigned short
        // DTC 128 numerator / Numerator von DTC 128

    #define I3_RES_EME_STAT_DTC_128_DEN_WERT                         (RXBUF_UINT(894))
    #define I3_RES_EME_STAT_DTC_128_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 128 / Denominator von DTC 128

    // Can't yet generate code for STAT_DTC_129_HEXCODE_DATA of type data[3] at offset 896. But we account for the 3 bytes
        // HexCode of DTC 129 / HexCode von DTC 129

    #define I3_RES_EME_STAT_DTC_129_NUM_WERT                         (RXBUF_UINT(899))
    #define I3_RES_EME_STAT_DTC_129_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 129 / Numerator von DTC 129

    #define I3_RES_EME_STAT_DTC_129_DEN_WERT                         (RXBUF_UINT(901))
    #define I3_RES_EME_STAT_DTC_129_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 129 / Denominator von DTC 129

    // Can't yet generate code for STAT_DTC_130_HEXCODE_DATA of type data[3] at offset 903. But we account for the 3 bytes
        // HexCode of DTC 130 / HexCode von DTC 130

    #define I3_RES_EME_STAT_DTC_130_NUM_WERT                         (RXBUF_UINT(906))
    #define I3_RES_EME_STAT_DTC_130_NUM_WERT_TYPE                    unsigned short
        // DTC 130 numerator / Numerator von DTC 130

    #define I3_RES_EME_STAT_DTC_130_DEN_WERT                         (RXBUF_UINT(908))
    #define I3_RES_EME_STAT_DTC_130_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 130 / Denominator von DTC 130

    // Can't yet generate code for STAT_DTC_131_HEXCODE_DATA of type data[3] at offset 910. But we account for the 3 bytes
        // HexCode of DTC 131 / HexCode von DTC 131

    #define I3_RES_EME_STAT_DTC_131_NUM_WERT                         (RXBUF_UINT(913))
    #define I3_RES_EME_STAT_DTC_131_NUM_WERT_TYPE                    unsigned short
        // DTC 131 numerator / Numerator von DTC 131

    #define I3_RES_EME_STAT_DTC_131_DEN_WERT                         (RXBUF_UINT(915))
    #define I3_RES_EME_STAT_DTC_131_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 131 / Denominator von DTC 131

    // Can't yet generate code for STAT_DTC_132_HEXCODE_DATA of type data[3] at offset 917. But we account for the 3 bytes
        // HexCode of DTC 132 / HexCode von DTC 132

    #define I3_RES_EME_STAT_DTC_132_NUM_WERT                         (RXBUF_UINT(920))
    #define I3_RES_EME_STAT_DTC_132_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 132 / Numerator von DTC 132

    #define I3_RES_EME_STAT_DTC_132_DEN_WERT                         (RXBUF_UINT(922))
    #define I3_RES_EME_STAT_DTC_132_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 132 / Denominator von DTC 132

    // Can't yet generate code for STAT_DTC_133_HEXCODE_DATA of type data[3] at offset 924. But we account for the 3 bytes
        // HexCode of DTC 133 / HexCode von DTC 133

    #define I3_RES_EME_STAT_DTC_133_NUM_WERT                         (RXBUF_UINT(927))
    #define I3_RES_EME_STAT_DTC_133_NUM_WERT_TYPE                    unsigned short
        // DTC 133 numerator / Numerator von DTC 133

    #define I3_RES_EME_STAT_DTC_133_DEN_WERT                         (RXBUF_UINT(929))
    #define I3_RES_EME_STAT_DTC_133_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 133 / Denominator von DTC 133

    // Can't yet generate code for STAT_DTC_134_HEXCODE_DATA of type data[3] at offset 931. But we account for the 3 bytes
        // HexCode of DTC 134 / HexCode von DTC 134

    #define I3_RES_EME_STAT_DTC_134_NUM_WERT                         (RXBUF_UINT(934))
    #define I3_RES_EME_STAT_DTC_134_NUM_WERT_TYPE                    unsigned short
        // DTC 134 numerator / Numerator von DTC 134

    #define I3_RES_EME_STAT_DTC_134_DEN_WERT                         (RXBUF_UINT(936))
    #define I3_RES_EME_STAT_DTC_134_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 134 / Denominator von DTC 134

    // Can't yet generate code for STAT_DTC_135_HEXCODE_DATA of type data[3] at offset 938. But we account for the 3 bytes
        // HexCode of DTC 135 / HexCode von DTC 135

    #define I3_RES_EME_STAT_DTC_135_NUM_WERT                         (RXBUF_UINT(941))
    #define I3_RES_EME_STAT_DTC_135_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 135 / Numerator von DTC 135

    #define I3_RES_EME_STAT_DTC_135_DEN_WERT                         (RXBUF_UINT(943))
    #define I3_RES_EME_STAT_DTC_135_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 135 / Denominator von DTC 135

    // Can't yet generate code for STAT_DTC_136_HEXCODE_DATA of type data[3] at offset 945. But we account for the 3 bytes
        // HexCode of DTC 136 / HexCode von DTC 136

    #define I3_RES_EME_STAT_DTC_136_NUM_WERT                         (RXBUF_UINT(948))
    #define I3_RES_EME_STAT_DTC_136_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 136 / Numerator von DTC 136

    #define I3_RES_EME_STAT_DTC_136_DEN_WERT                         (RXBUF_UINT(950))
    #define I3_RES_EME_STAT_DTC_136_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 136 / Denominator von DTC 136

    // Can't yet generate code for STAT_DTC_137_HEXCODE_DATA of type data[3] at offset 952. But we account for the 3 bytes
        // HexCode of DTC 137 / HexCode von DTC 137

    #define I3_RES_EME_STAT_DTC_137_NUM_WERT                         (RXBUF_UINT(955))
    #define I3_RES_EME_STAT_DTC_137_NUM_WERT_TYPE                    unsigned short
        // DTC 137 numerator / Numerator von DTC 137

    #define I3_RES_EME_STAT_DTC_137_DEN_WERT                         (RXBUF_UINT(957))
    #define I3_RES_EME_STAT_DTC_137_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 137 / Denominator von DTC 137

    // Can't yet generate code for STAT_DTC_138_HEXCODE_DATA of type data[3] at offset 959. But we account for the 3 bytes
        // HexCode of DTC 138 / HexCode von DTC 138

    #define I3_RES_EME_STAT_DTC_138_NUM_WERT                         (RXBUF_UINT(962))
    #define I3_RES_EME_STAT_DTC_138_NUM_WERT_TYPE                    unsigned short
        // DTC 138 numerator / Numerator von DTC 138

    #define I3_RES_EME_STAT_DTC_138_DEN_WERT                         (RXBUF_UINT(964))
    #define I3_RES_EME_STAT_DTC_138_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 138 / Denominator von DTC 138

    // Can't yet generate code for STAT_DTC_139_HEXCODE_DATA of type data[3] at offset 966. But we account for the 3 bytes
        // HexCode of DTC 139 / HexCode von DTC 139

    #define I3_RES_EME_STAT_DTC_139_NUM_WERT                         (RXBUF_UINT(969))
    #define I3_RES_EME_STAT_DTC_139_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 139 / Numerator von DTC 139

    #define I3_RES_EME_STAT_DTC_139_DEN_WERT                         (RXBUF_UINT(971))
    #define I3_RES_EME_STAT_DTC_139_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 139 / Denominator von DTC 139

    // Can't yet generate code for STAT_DTC_140_HEXCODE_DATA of type data[3] at offset 973. But we account for the 3 bytes
        // HexCode of DTC 140 / HexCode von DTC 140

    #define I3_RES_EME_STAT_DTC_140_NUM_WERT                         (RXBUF_UINT(976))
    #define I3_RES_EME_STAT_DTC_140_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 140 / Numerator von DTC 140

    #define I3_RES_EME_STAT_DTC_140_DEN_WERT                         (RXBUF_UINT(978))
    #define I3_RES_EME_STAT_DTC_140_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 140 / Denominator von DTC 140

    // Can't yet generate code for STAT_DTC_141_HEXCODE_DATA of type data[3] at offset 980. But we account for the 3 bytes
        // HexCode of DTC 141 / HexCode von DTC 141

    #define I3_RES_EME_STAT_DTC_141_NUM_WERT                         (RXBUF_UINT(983))
    #define I3_RES_EME_STAT_DTC_141_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 141 / Numerator von DTC 141

    #define I3_RES_EME_STAT_DTC_141_DEN_WERT                         (RXBUF_UINT(985))
    #define I3_RES_EME_STAT_DTC_141_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 141 / Denominator von DTC 141

    // Can't yet generate code for STAT_DTC_142_HEXCODE_DATA of type data[3] at offset 987. But we account for the 3 bytes
        // HexCode of DTC 142 / HexCode von DTC 142

    #define I3_RES_EME_STAT_DTC_142_NUM_WERT                         (RXBUF_UINT(990))
    #define I3_RES_EME_STAT_DTC_142_NUM_WERT_TYPE                    unsigned short
        // Numerator from DTC 142 / Numerator von DTC 142

    #define I3_RES_EME_STAT_DTC_142_DEN_WERT                         (RXBUF_UINT(992))
    #define I3_RES_EME_STAT_DTC_142_DEN_WERT_TYPE                    unsigned short
        // Denominator of DTC 142 / Denominator von DTC 142

#define I3_PID_EME_LADEKOORDINATOR_INTERFACE                         0xE5FE
        // Interfaces from the charging coordinator to HVPM and chargers / Schnittstellen von Ladekoordinator zu HVPM und
        // Ladern

    #define I3_RES_EME_STAT_TAR_OPMO_CHGE_WERT                       (RXBUF_UCHAR(0))
    #define I3_RES_EME_STAT_TAR_OPMO_CHGE_WERT_TYPE                  unsigned char
        // Set operating mode from HVPM to charging coordinator / Soll Betriebsart von HVPM an Ladekoordinator

    #define I3_RES_EME_STAT_AVL_OPMOCHGE_WERT                        (RXBUF_UCHAR(1))
    #define I3_RES_EME_STAT_AVL_OPMOCHGE_WERT_TYPE                   unsigned char
        // Is the operating mode from LDK to HVPM / Ist Betriebsart von LDK an HVPM

    #define I3_RES_EME_STAT_TAR_OPMO_INTLE_WERT                      (RXBUF_UCHAR(2))
    #define I3_RES_EME_STAT_TAR_OPMO_INTLE_WERT_TYPE                 unsigned char
        // Set operating mode from LDK to internal loader / Soll Betriebsart von LDK an internen Lader

    #define I3_RES_EME_STAT_AVL_OPMO_INTLE_WERT                      (RXBUF_UCHAR(3))
    #define I3_RES_EME_STAT_AVL_OPMO_INTLE_WERT_TYPE                 unsigned char
        // Is the operating mode of the internal loader on the LDK / Ist Betriebsart von internem Lader an LDK

    #define I3_RES_EME_STAT_TAR_OPMO_CF_CHGE_WERT                    (RXBUF_UCHAR(4))
    #define I3_RES_EME_STAT_TAR_OPMO_CF_CHGE_WERT_TYPE               unsigned char
        // Set operating mode from LDK to external loader / Soll Betriebsart von LDK an externen Lader

    #define I3_RES_EME_STAT_AVL_OPMO_CF_CHGE_WERT                    (RXBUF_UCHAR(5))
    #define I3_RES_EME_STAT_AVL_OPMO_CF_CHGE_WERT_TYPE               unsigned char
        // Is the operating mode of the external charger on the LDK / Ist Betriebsart von externem Lader an LDK

    #define I3_RES_EME_STAT_TAR_CHG_MOD_CF_CHGE_WERT                 (RXBUF_UCHAR(6))
    #define I3_RES_EME_STAT_TAR_CHG_MOD_CF_CHGE_WERT_TYPE            unsigned char
        // Target charging mode of the external charger (1- or multi-phase) / Soll-Lademodus des externer Laders (1- oder
        // mehrphasig)

    #define I3_RES_EME_STAT_AVL_CHG_MOD_CF_CHGE_WERT                 (RXBUF_UCHAR(7))
    #define I3_RES_EME_STAT_AVL_CHG_MOD_CF_CHGE_WERT_TYPE            unsigned char
        // Actual charging mode of the comfort charging electronics (1- or multi-phase) / Ist-Lademodus der Komfort
        // Ladeelektronik (1- oder mehrphasig)

    #define I3_RES_EME_STAT_TAR_PWR_CHGNG_WERT                       (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_TAR_PWR_CHGNG_WERT_UNIT                  'W'
    #define I3_RES_EME_STAT_TAR_PWR_CHGNG_WERT_TYPE                  unsigned long
        // Target output from HVPM to LDK / Sollleistung von HVPM an LDK

    #define I3_RES_EME_STAT_AVL_PWR_CHGNG_WERT                       (RXBUF_UINT32(12)*0.1f)
    #define I3_RES_EME_STAT_AVL_PWR_CHGNG_WERT_UNIT                  'W'
    #define I3_RES_EME_STAT_AVL_PWR_CHGNG_WERT_TYPE                  float
        // Actual performance from LDK to HVPM / Istleistung von LDK an HVPM

    #define I3_RES_EME_STAT_TAR_PWR_INTLE_WERT                       (RXBUF_UINT32(16)*0.1f)
    #define I3_RES_EME_STAT_TAR_PWR_INTLE_WERT_UNIT                  'W'
    #define I3_RES_EME_STAT_TAR_PWR_INTLE_WERT_TYPE                  float
        // Target power from LDK to internal charger / Sollleistung von LDK an interen Lader

    #define I3_RES_EME_STAT_AVL_PWR_INTLE_WERT                       (RXBUF_UINT32(20)*0.1f)
    #define I3_RES_EME_STAT_AVL_PWR_INTLE_WERT_UNIT                  'W'
    #define I3_RES_EME_STAT_AVL_PWR_INTLE_WERT_TYPE                  float
        // Actual HV power of the internal charger / Ist-HV-Leistung des internen Laders

    #define I3_RES_EME_STAT_TAR_PWR_CF_CHGE_WERT                     (RXBUF_UINT(24))
    #define I3_RES_EME_STAT_TAR_PWR_CF_CHGE_WERT_UNIT                'W'
    #define I3_RES_EME_STAT_TAR_PWR_CF_CHGE_WERT_TYPE                unsigned short
        // Target output from LDK to external charger / Sollleistung von LDK an exteren Lader

    #define I3_RES_EME_STAT_AVL_PWR_CF_CHGE_WERT                     (RXBUF_UINT(26))
    #define I3_RES_EME_STAT_AVL_PWR_CF_CHGE_WERT_UNIT                'W'
    #define I3_RES_EME_STAT_AVL_PWR_CF_CHGE_WERT_TYPE                unsigned short
        // Actual HV output from external charger / Ist-HV-leistung von externem Lader

    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CHGE_WERT                (RXBUF_UINT32(28)*0.1f)
    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CHGE_WERT_UNIT           'A'
    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CHGE_WERT_TYPE           float
        // HVPM specification of the maximum permissible AC conductor current (effective value) for all available network
        // phases / HVPM-Vorgabe des maximal zulässigen AC-Leiterstromes (Effektivwert) für alle verfügbaren Netzphasen

    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CF_CHGE_WERT             (RXBUF_UINT(32)*0.1f)
    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CF_CHGE_WERT_UNIT        'A'
    #define I3_RES_EME_STAT_SPEC_I_MAX_ALTC_CF_CHGE_WERT_TYPE        float
        // Specification of the maximum permissible AC conductor current (effective value) for all available mains phases
        // - external charger. / Vorgabe des maximal zulässigen AC-Leiterstromes (Effektivwert) für alle verfügbaren
        // Netzphasen - Externer Lader.

    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CHGE_WERT                  (RXBUF_UINT32(34)*0.1f)
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CHGE_WERT_UNIT             'A'
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CHGE_WERT_TYPE             float
        // HVPM specification of the maximum permissible DC-HV current upper limit / HVPM-Vorgabe der maximal zulässigen
        // DC-HV-Stromobergrenze

    #define I3_RES_EME_STAT_AVL_I_CHGE_WERT                          (RXBUF_SINT(38)*0.1f-204.7)
    #define I3_RES_EME_STAT_AVL_I_CHGE_WERT_UNIT                     'A'
    #define I3_RES_EME_STAT_AVL_I_CHGE_WERT_TYPE                     float
        // Information about the current DC-HV current supplied by the LDK / Information über den aktuell von der LDK
        // abgegebenen DC-HV-Strom

    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_INTLE_WERT                 (RXBUF_UINT32(40)*0.1f)
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_INTLE_WERT_UNIT            'A'
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_INTLE_WERT_TYPE            float
        // Specification of the maximum permissible DC-HV current upper limit - internal charger. / Vorgabe der maximal
        // zulässigen DC-HV-Stromobergrenze - Interner Lader.

    #define I3_RES_EME_STAT_AVL_I_INTLE_WERT                         (RXBUF_UINT32(44)*0.1f)
    #define I3_RES_EME_STAT_AVL_I_INTLE_WERT_UNIT                    'A'
    #define I3_RES_EME_STAT_AVL_I_INTLE_WERT_TYPE                    float
        // Information about the DC-HV current currently being supplied by the KLE - internal charger / Information über
        // den aktuell von der KLE abgegebenen DC-HV-Strom - Interner Lader

    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CF_CHGE_WERT               (RXBUF_UINT(48)*0.1f)
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CF_CHGE_WERT_UNIT          'A'
    #define I3_RES_EME_STAT_SPEC_I_MAX_DC_CF_CHGE_WERT_TYPE          float
        // Specification of the maximum permissible DC-HV current upper limit - external charger. / Vorgabe der maximal
        // zulässigen DC-HV-Stromobergrenze - Externer Lader.

    #define I3_RES_EME_STAT_AVL_I_CF_CHGE_WERT                       (RXBUF_SINT(50)*0.1f-204.7)
    #define I3_RES_EME_STAT_AVL_I_CF_CHGE_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_AVL_I_CF_CHGE_WERT_TYPE                  float
        // Information about the DC-HV current currently being supplied by the KLE - external charger / Information über
        // den aktuell von der KLE abgegebenen DC-HV-Strom - Externer Lader

    #define I3_RES_EME_STAT_SPEC_U_MAX_CHG_CHGE_WERT                 (RXBUF_UINT(52)*0.1f)
    #define I3_RES_EME_STAT_SPEC_U_MAX_CHG_CHGE_WERT_UNIT            'V'
    #define I3_RES_EME_STAT_SPEC_U_MAX_CHG_CHGE_WERT_TYPE            float
        // HVPM specification of the maximum permissible DC-HV voltage upper limit of the charging electronics. /
        // HVPM-Vorgabe der maximal zulässigen DC-HV-Spannungsobergrenze der Ladeelektronik.

    #define I3_RES_EME_STAT_AVL_U_CHGE_WERT                          (RXBUF_UINT(54)*0.1f)
    #define I3_RES_EME_STAT_AVL_U_CHGE_WERT_UNIT                     'V'
    #define I3_RES_EME_STAT_AVL_U_CHGE_WERT_TYPE                     float
        // HV voltage measured by chargers (max from internal and external charger) / von Ladegeraeten gemessene
        // HV-Spannung (Max aus internem und externem Lader)

    #define I3_RES_EME_STAT_SPEC_U_MAX_INTLE_WERT                    (RXBUF_UINT32(56))
    #define I3_RES_EME_STAT_SPEC_U_MAX_INTLE_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_SPEC_U_MAX_INTLE_WERT_TYPE               unsigned long
        // Specification of the maximum permissible DC-HV voltage limit - internal charger. / Vorgabe der maximal
        // zulässigen DC-HV-Spannungsgrenze - Interner Lader.

    #define I3_RES_EME_STAT_AVL_U_INTLE_WERT                         (RXBUF_UINT32(60)*0.1f)
    #define I3_RES_EME_STAT_AVL_U_INTLE_WERT_UNIT                    'V'
    #define I3_RES_EME_STAT_AVL_U_INTLE_WERT_TYPE                    float
        // Actual HV voltage from internal charger / Ist-HV-Spannung von internem Lader

    #define I3_RES_EME_STAT_SPEC_U_MAX_CF_CHGE_WERT                  (RXBUF_SINT(64)*0.25f)
    #define I3_RES_EME_STAT_SPEC_U_MAX_CF_CHGE_WERT_UNIT             'V'
    #define I3_RES_EME_STAT_SPEC_U_MAX_CF_CHGE_WERT_TYPE             float
        // Specification of the maximum permissible DC-HV voltage limit - external charger. / Vorgabe der maximal
        // zulässigen DC-HV-Spannungsgrenze - Externer Lader.

    #define I3_RES_EME_STAT_AVL_U_CF_CHGE_WERT                       (RXBUF_SINT(66)*0.1f)
    #define I3_RES_EME_STAT_AVL_U_CF_CHGE_WERT_UNIT                  'V'
    #define I3_RES_EME_STAT_AVL_U_CF_CHGE_WERT_TYPE                  float
        // Actual HV voltage from external charger / Ist-HV-Spannung von externem Lader

    #define I3_RES_EME_STAT_AVL_U_CHGE_ALTC_WR_1_WERT                (RXBUF_UCHAR(68))
    #define I3_RES_EME_STAT_AVL_U_CHGE_ALTC_WR_1_WERT_UNIT           'V'
    #define I3_RES_EME_STAT_AVL_U_CHGE_ALTC_WR_1_WERT_TYPE           unsigned char
        // Smoothed and filtered AC voltage rms actual value between conductor 1 and neutral conductor (internal charger)
        // / Geglätteter und gefilterter AC-Spannungseffektiv-Istwert zwischen Leiter 1 und Nullleiter (Internes
        // Ladegeraet)

    #define I3_RES_EME_STAT_AVL_U_1_CF_CHGE_ALTC_WERT                (RXBUF_UCHAR(69))
    #define I3_RES_EME_STAT_AVL_U_1_CF_CHGE_ALTC_WERT_UNIT           'V'
    #define I3_RES_EME_STAT_AVL_U_1_CF_CHGE_ALTC_WERT_TYPE           unsigned char
        // Smoothed and filtered AC voltage rms actual value between conductor 1 and neutral conductor (external charger)
        // / Geglätteter und gefilterter AC-Spannungseffektiv-Istwert zwischen Leiter 1 und Nullleiter (externes
        // Ladegeraet)

    #define I3_RES_EME_STAT_AVL_U_2_CF_CHGE_ALTC_WERT                (RXBUF_UCHAR(70))
    #define I3_RES_EME_STAT_AVL_U_2_CF_CHGE_ALTC_WERT_UNIT           'V'
    #define I3_RES_EME_STAT_AVL_U_2_CF_CHGE_ALTC_WERT_TYPE           unsigned char
        // Smoothed and filtered AC voltage rms actual value between conductor 2 and neutral conductor (external charger)
        // / Geglätteter und gefilterter AC-Spannungseffektiv-Istwert zwischen Leiter 2 und Nullleiter (externes
        // Ladegeraet)

    #define I3_RES_EME_STAT_AVL_TEMP_CHGE_WERT                       (RXBUF_SINT(71)-48.0)
    #define I3_RES_EME_STAT_AVL_TEMP_CHGE_WERT_UNIT                  '°C'
    #define I3_RES_EME_STAT_AVL_TEMP_CHGE_WERT_TYPE                  short
        // Current temperature of the charging electronics. / Aktuelle Temperatur der Ladeelektronik.

    #define I3_RES_EME_STAT_AVL_TEMP_INTLE_WERT                      (RXBUF_SINT(73))
    #define I3_RES_EME_STAT_AVL_TEMP_INTLE_WERT_UNIT                 '°C'
    #define I3_RES_EME_STAT_AVL_TEMP_INTLE_WERT_TYPE                 short
        // Current temperature of the internal charger. / Aktuelle Temperatur des internen Laders.

    #define I3_RES_EME_STAT_AVL_TEMP_CF_CHGE_WERT                    (RXBUF_SINT(75)-48.0)
    #define I3_RES_EME_STAT_AVL_TEMP_CF_CHGE_WERT_UNIT               '°C'
    #define I3_RES_EME_STAT_AVL_TEMP_CF_CHGE_WERT_TYPE               short
        // Current temperature of the external charger. / Aktuelle Temperatur des externenLaders.

    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_DER_WERT                (RXBUF_UINT32(77))
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_DER_WERT_UNIT           'W'
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_DER_WERT_TYPE           unsigned long
        // Current derating performance of the charging electronics / Aktuelle Derating-Leistung der Ladeelektronik

    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_INTLE_DER_WERT          (RXBUF_UINT32(81))
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_INTLE_DER_WERT_UNIT     'W'
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_INTLE_DER_WERT_TYPE     unsigned long
        // Current derating power of the internal charger / Aktuelle Derating-Leistung des internen Laders

    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_CF_CHGE_DER_WERT        (RXBUF_UINT32(85)*10.0f)
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_CF_CHGE_DER_WERT_UNIT   'W'
    #define I3_RES_EME_STAT_PWR_HV_STAT_AVLB_CF_CHGE_DER_WERT_TYPE   float
        // Current derating upper limit of the ExtLe. / Aktuelle Derating-Leistungsobergrenze der ExtLe.

    #define I3_RES_EME_STAT_REAS_FAILSAFE_CHGNG_WERT                 (RXBUF_UINT(89))
    #define I3_RES_EME_STAT_REAS_FAILSAFE_CHGNG_WERT_TYPE            unsigned short
        // Information about the trigger for the Failsafe state / Information über den Auslöser für den Zustand Failsafe

    #define I3_RES_EME_STAT_REAS_FAILSAFE_INTLE_WERT                 (RXBUF_UINT(91))
    #define I3_RES_EME_STAT_REAS_FAILSAFE_INTLE_WERT_TYPE            unsigned short
        // Information about the trigger for the failsafe state of the internal loader / Information über den Auslöser
        // für den Zustand Failsafe des internen Laders

    #define I3_RES_EME_STAT_REAS_CON_VRFD_CF_CHGE_WERT               (RXBUF_UINT(93))
    #define I3_RES_EME_STAT_REAS_CON_VRFD_CF_CHGE_WERT_TYPE          unsigned short
        // Information about the trigger for the Failsafe state in the external loader. / Information über den Auslöser
        // für den Zustand Failsafe im externen Lader.

    #define I3_RES_EME_STAT_REAS_DER_CHGNG_WERT                      (RXBUF_UCHAR(95))
    #define I3_RES_EME_STAT_REAS_DER_CHGNG_WERT_TYPE                 unsigned char
        // Information about the cause of the derating of the charging electronics / Information über die Deratingursache
        // der Ladeelektronik

    #define I3_RES_EME_STAT_REAS_DER_INTLE_WERT                      (RXBUF_UCHAR(96))
    #define I3_RES_EME_STAT_REAS_DER_INTLE_WERT_TYPE                 unsigned char
        // Information about the cause of the derating of the internal charger / Information über die Deratingursache des
        // internen Laders

    #define I3_RES_EME_STAT_REAS_DER_CF_CHGNG_WERT                   (RXBUF_UCHAR(97))
    #define I3_RES_EME_STAT_REAS_DER_CF_CHGNG_WERT_TYPE              unsigned char
        // Information about the cause of the derating of the external charger / Information über die Deratingursache des
        // externen Laders

    #define I3_RES_EME_STAT_ST_ERR_CHGNG_WERT                        (RXBUF_UCHAR(98))
    #define I3_RES_EME_STAT_ST_ERR_CHGNG_WERT_TYPE                   unsigned char
        // Information about error states of the charging electronics / Information über Fehlerzustände der
        // Ladeelektronik

    #define I3_RES_EME_STAT_ST_ERR_INTLE_WERT                        (RXBUF_UCHAR(99))
    #define I3_RES_EME_STAT_ST_ERR_INTLE_WERT_TYPE                   unsigned char
        // Information about error states of the internal loader / Information über Fehlerzustände des internen Laders

    #define I3_RES_EME_STAT_ST_ERR_CF_CHGE_WERT                      (RXBUF_UCHAR(100))
    #define I3_RES_EME_STAT_ST_ERR_CF_CHGE_WERT_TYPE                 unsigned char
        // Information about error states of the external charger / Information über Fehlerzustände des externer Laders

    #define I3_RES_EME_STAT_FREQWR_CHGNG_WERT                        (RXBUF_UINT32(101))
    #define I3_RES_EME_STAT_FREQWR_CHGNG_WERT_UNIT                   'Hz'
    #define I3_RES_EME_STAT_FREQWR_CHGNG_WERT_TYPE                   unsigned long
        // Frequency AC network of the charging electronics / Frequenz AC-Netz der Ladeelektronik

    #define I3_RES_EME_STAT_FREQWR_INTLE_WERT                        (RXBUF_UINT32(105))
    #define I3_RES_EME_STAT_FREQWR_INTLE_WERT_UNIT                   'Hz'
    #define I3_RES_EME_STAT_FREQWR_INTLE_WERT_TYPE                   unsigned long
        // Frequency AC network of the internal charger / Frequenz AC-Netz des internen Laders

    #define I3_RES_EME_STAT_FREQWR_1_CF_CHGE_ALTC_WERT               (RXBUF_UINT32(109)*0.25f)
    #define I3_RES_EME_STAT_FREQWR_1_CF_CHGE_ALTC_WERT_UNIT          'Hz'
    #define I3_RES_EME_STAT_FREQWR_1_CF_CHGE_ALTC_WERT_TYPE          float
        // Smoothed and filtered AC grid frequency between conductor 1 and neutral of the external charger. / Geglättete
        // und gefilterte AC-Netzfrequenz zwischen Leiter 1 und Nulleiter des externen Laders.

    #define I3_RES_EME_STAT_FREQWR_2_CF_CHGE_ALTC_WERT               (RXBUF_UINT32(113)*0.25f)
    #define I3_RES_EME_STAT_FREQWR_2_CF_CHGE_ALTC_WERT_UNIT          'Hz'
    #define I3_RES_EME_STAT_FREQWR_2_CF_CHGE_ALTC_WERT_TYPE          float
        // Smoothed and filtered AC grid frequency between conductor 2 and neutral of the external charger. / Geglättete
        // und gefilterte AC-Netzfrequenz zwischen Leiter 2 und Nulleiter des externen Laders.

    #define I3_RES_EME_STAT_AVL_EFFY_CHGNG_CYC_WERT                  (RXBUF_UINT32(117))
    #define I3_RES_EME_STAT_AVL_EFFY_CHGNG_CYC_WERT_UNIT             '%'
    #define I3_RES_EME_STAT_AVL_EFFY_CHGNG_CYC_WERT_TYPE             unsigned long
        // Efficiency of the charging electronics / Effizienz der Ladeelektronik

    #define I3_RES_EME_STAT_AVL_EFFY_INTLE_CYC_WERT                  (RXBUF_UCHAR(121))
    #define I3_RES_EME_STAT_AVL_EFFY_INTLE_CYC_WERT_UNIT             '%'
    #define I3_RES_EME_STAT_AVL_EFFY_INTLE_CYC_WERT_TYPE             unsigned char
        // Internal loader efficiency / Effizienz des internen Laders

    #define I3_RES_EME_STAT_AVL_EFFY_CF_CHGNG_CYC_WERT               (RXBUF_UCHAR(122))
    #define I3_RES_EME_STAT_AVL_EFFY_CF_CHGNG_CYC_WERT_UNIT          '%'
    #define I3_RES_EME_STAT_AVL_EFFY_CF_CHGNG_CYC_WERT_TYPE          unsigned char
        // External charger efficiency / Effizienz des externen Laders

    #define I3_RES_EME_STAT_TAR_CHGNG_TYP_WERT                       (RXBUF_UCHAR(123))
    #define I3_RES_EME_STAT_TAR_CHGNG_TYP_WERT_TYPE                  unsigned char
        // Default charging type by HVPM (conductive, inductive) / Vorgabe-Ladetyp durch HVPM (konduktiv, induktiv)

    #define I3_RES_EME_STAT_AVL_CHGNG_TYP_WERT                       (RXBUF_UCHAR(124))
    #define I3_RES_EME_STAT_AVL_CHGNG_TYP_WERT_TYPE                  unsigned char
        // Actual charging type feedback through LDK (conductive, inductive) / Ist-Ladetyp Rückmeldung durch LDK
        // (konduktiv, induktiv)

#define I3_PID_EME_DCDC_MESSGROESSEN_KOMPLETT                        0xE5FF
        // Status of all available DCDC measured values for both PKR2 and non-PKR2 software / Status aller verfügbaren
        // DCDC Messgrössen für beide PKR2 und nicht-PKR2 Software

    #define I3_RES_EME_STAT_AVL_CUTIL_DCDC_CNV_WERT                  (RXBUF_UINT32(0))
    #define I3_RES_EME_STAT_AVL_CUTIL_DCDC_CNV_WERT_UNIT             '%'
    #define I3_RES_EME_STAT_AVL_CUTIL_DCDC_CNV_WERT_TYPE             unsigned long
        // Load DCDC / Auslastung DCDC

    #define I3_RES_EME_STAT_AVL_I_HV_DCDC_WERT                       (RXBUF_SINT32(4)*0.1f)
    #define I3_RES_EME_STAT_AVL_I_HV_DCDC_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_AVL_I_HV_DCDC_WERT_TYPE                  float
        // Instantaneous HV current of the DC / DC converter / Momentaner HV-Strom des DC/DC-Wandlers

    #define I3_RES_EME_STAT_AVL_I_LV_DCDC_WERT                       (RXBUF_UINT32(8))
    #define I3_RES_EME_STAT_AVL_I_LV_DCDC_WERT_UNIT                  'A'
    #define I3_RES_EME_STAT_AVL_I_LV_DCDC_WERT_TYPE                  unsigned long
        // DCDC converter: ACTUAL current LV side at the B + bolt / DCDC Wandler: IST-Strom LV-Seite am B+ Bolzen

    #define I3_RES_EME_STAT_AVL_OPMO_DCDC_CNV_WERT                   (RXBUF_UCHAR(12))
    #define I3_RES_EME_STAT_AVL_OPMO_DCDC_CNV_WERT_TYPE              unsigned char
        // Actual operating mode of the DCDC converter / Ist-Betriebsart des DCDC-Wandlers

    #define I3_RES_EME_STAT_AVL_U_DCDC_CNV_HV_WERT                   (RXBUF_UINT32(13))
    #define I3_RES_EME_STAT_AVL_U_DCDC_CNV_HV_WERT_UNIT              'V'
    #define I3_RES_EME_STAT_AVL_U_DCDC_CNV_HV_WERT_TYPE              unsigned long
        // HV voltage in the DC / DC converter / HV Spannung im DC/DC-Wandler

    #define I3_RES_EME_STAT_AVL_U_LV_DCDC_CNV_WERT                   (RXBUF_UINT32(17)*0.1f)
    #define I3_RES_EME_STAT_AVL_U_LV_DCDC_CNV_WERT_UNIT              'V'
    #define I3_RES_EME_STAT_AVL_U_LV_DCDC_CNV_WERT_TYPE              float
        // DCDC converter: ACTUAL voltage LV side at B + bolt / DCDC Wandler: IST-Spannung LV-Seite am B+ Bolzen

    #define I3_RES_EME_STAT_SPEC_PWR_DCDC_CNV_MAX_WERT               (RXBUF_UINT32(21))
    #define I3_RES_EME_STAT_SPEC_PWR_DCDC_CNV_MAX_WERT_UNIT          'W'
    #define I3_RES_EME_STAT_SPEC_PWR_DCDC_CNV_MAX_WERT_TYPE          unsigned long
        // Commanded maximum HV power / Kommandierte maximale HV-Leistung

    #define I3_RES_EME_STAT_ST_DCDC_CNV_DIAG_WERT                    (RXBUF_UINT32(25))
    #define I3_RES_EME_STAT_ST_DCDC_CNV_DIAG_WERT_TYPE               unsigned long
        // Status of which current limit / which derating of the DCDC converter is active / Status welche
        // Stromgrenze/welches Derating des DCDC-Wandlers aktiv ist

    #define I3_RES_EME_STAT_ST_ERR_DCDC_CNV_WERT                     (RXBUF_UINT(29))
    #define I3_RES_EME_STAT_ST_ERR_DCDC_CNV_WERT_TYPE                unsigned short
        // Return of the active / inactive errors of the DC / DC converter - bit-coded / Rückgabe der aktiven/inaktiven
        // Fehler des DC/DC Wandlers - bitcodiert

    #define I3_RES_EME_STAT_TAR_OPMO_DCDC_CNV_WERT                   (RXBUF_UCHAR(31))
    #define I3_RES_EME_STAT_TAR_OPMO_DCDC_CNV_WERT_TYPE              unsigned char
        // Target operating mode of the DC / DC converter: 1: Standby 2: Buck 5: AC emergency charging / Soll-Betriebsart
        // des DC/DC-Wandlers: 1: Standby 2: Buck 5: AC-Notladen

    #define I3_RES_EME_STAT_TAR_U_LV_DCDC_CNV_WERT                   (RXBUF_UINT32(32)*0.1f)
    #define I3_RES_EME_STAT_TAR_U_LV_DCDC_CNV_WERT_UNIT              'V'
    #define I3_RES_EME_STAT_TAR_U_LV_DCDC_CNV_WERT_TYPE              float
        // Target LV voltage of the DCDC converter in buck operation (maximum value) / Soll-LV-Spannung des DCDC-Wandlers
        // im Buck-Betrieb (Maximaler Wert)

    #define I3_RES_EME_STAT_U_DCDC_CNV_HV_MIN_WERT                   (RXBUF_UINT32(36))
    #define I3_RES_EME_STAT_U_DCDC_CNV_HV_MIN_WERT_UNIT              'V'
    #define I3_RES_EME_STAT_U_DCDC_CNV_HV_MIN_WERT_TYPE              unsigned long
        // Minimum permissible HV voltage limit / Minimal zulässige HV-Spannungsgrenze

    #define I3_RES_EME_STAT_V_B_DCDC_HI_ENABLE_WERT                  (RXBUF_UCHAR(40))
    #define I3_RES_EME_STAT_V_B_DCDC_HI_ENABLE_WERT_TYPE             unsigned char
        // DCDC-enabled signal (HW signal to activate the DCDC HW) / DCDC-enabled-Signal (HW-Signal zum aktivieren der
        // DCDC-HW)

    #define I3_RES_EME_STAT_V_E_DCDC_BTS_STATUS_MC6_WERT             (RXBUF_UINT(41))
    #define I3_RES_EME_STAT_V_E_DCDC_BTS_STATUS_MC6_WERT_TYPE        unsigned short
        // Status of the component protection diagnostics on the MC6 (PIC) - bit-coded / Status der
        // Bauteilschutzdiagnosen auf dem MC6 (PIC) - bitcodiert

    #define I3_RES_EME_STAT_V_E_DCDC_CTRL_STATUS_MC6_PKR2_WERT       (RXBUF_UINT(43))
    #define I3_RES_EME_STAT_V_E_DCDC_CTRL_STATUS_MC6_PKR2_WERT_TYPE  unsigned short
        // Status of the DC / DC controller (from PIC) - bit-coded (only PKR2!) / Status des DC/DC-Controllers (von PIC)
        // - bitcodiert (nur PKR2!)

    #define I3_RES_EME_STAT_V_E_DCDC_HI_ST_OUT_WERT                  (RXBUF_UINT32(45))
    #define I3_RES_EME_STAT_V_E_DCDC_HI_ST_OUT_WERT_TYPE             unsigned long
        // The reason for the limit values of the DC / DC converter. / Die Ursache für die Begrenzungsgrößen des
        // DC/DC-Wandlers.

    #define I3_RES_EME_STAT_V_E_DCDC_MC0_CTRL_WERT                   (RXBUF_UINT32(49))
    #define I3_RES_EME_STAT_V_E_DCDC_MC0_CTRL_WERT_TYPE              unsigned long
        // Status and control bits for the DCDC: Bit 0: Release signal (at 1) for frequency modulation operation in DCDC
        // Bit 1: KL15 status Bit 2: Status ELUP startup (1: active) (Bit 2 - only for PKR2!) / Status und Steuerungsbits
        // für den DCDC: Bit 0:   Freigabesignal (bei 1) für den Frequenzmodulation-Betrieb im DCDC Bit 1:   KL15-Status
        // Bit 2: Status ELUP Anlauf (1: aktiv) (Bit 2 - nur für PKR2!)

    #define I3_RES_EME_STAT_V_H_SPI_DCDC_0_SPI_DATA_E_STATUS_WERT    (RXBUF_UINT(53))
    #define I3_RES_EME_STAT_V_H_SPI_DCDC_0_SPI_DATA_E_STATUS_WERT_TYPE unsigned short
        // Status of SPI communication from the point of view of MC0 / Status SPI-Kommunikation aus Sicht von MC0

    #define I3_RES_EME_STAT_V_H_SPI_DCDC_6_SPI_DATA_E_STATUS_WERT    (RXBUF_UINT(55))
    #define I3_RES_EME_STAT_V_H_SPI_DCDC_6_SPI_DATA_E_STATUS_WERT_TYPE unsigned short
        // Status of SPI communication from the point of view of MC6 / Status SPI-Kommunikation aus Sicht von MC6

    #define I3_RES_EME_STAT_V_I_DCDC_HV_MC6_WERT                     (RXBUF_UINT32(57)*0.1f)
    #define I3_RES_EME_STAT_V_I_DCDC_HV_MC6_WERT_UNIT                'A'
    #define I3_RES_EME_STAT_V_I_DCDC_HV_MC6_WERT_TYPE                float
        // HV electricity / HV-Strom

    #define I3_RES_EME_STAT_V_I_DCDC_TRA1_MC6_WERT                   (RXBUF_UINT32(61)*0.1f)
    #define I3_RES_EME_STAT_V_I_DCDC_TRA1_MC6_WERT_UNIT              'A'
    #define I3_RES_EME_STAT_V_I_DCDC_TRA1_MC6_WERT_TYPE              float
        // Transformer electricity / Transformator Strom

    #define I3_RES_EME_STAT_V_I_DCDC_TRA_FIL_WERT                    (RXBUF_UINT32(65)*0.1f)
    #define I3_RES_EME_STAT_V_I_DCDC_TRA_FIL_WERT_UNIT               'A'
    #define I3_RES_EME_STAT_V_I_DCDC_TRA_FIL_WERT_TYPE               float
        // Filtered transformer electricity / Gefilterter Transformator Strom

    #define I3_RES_EME_STAT_V_S_DCDC_PWM_HTS1_WERT                   (RXBUF_UINT(69))
    #define I3_RES_EME_STAT_V_S_DCDC_PWM_HTS1_WERT_TYPE              unsigned short
        // Duty cycle buck converter 1 (only for non-PKR2 software!) Push-pull converter phase shift between HSS1 and
        // HSS2 (only PKR2!) / Einschaltdauer Tiefsetzsteller 1 (nur für non-PKR2 Software!)  Gegentaktwandler
        // Phasenverschiebung zwischen HSS1 und HSS2 (nur PKR2!)

    #define I3_RES_EME_STAT_V_S_DCDC_PWM_HTS2_WERT                   (RXBUF_UINT(71))
    #define I3_RES_EME_STAT_V_S_DCDC_PWM_HTS2_WERT_TYPE              unsigned short
        // Switch-on time buck converter 2 (only for non-PKR2 software!) Switch-on time rectifier (only PKR2!) /
        // Einschaltzeit Tiefsetzsteller 2 (nur für non-PKR2 Software!)  Einschaltzeit Gleichrichter (nur PKR2!)

    #define I3_RES_EME_STAT_V_S_DCDC_SW_VERSION_WERT                 (RXBUF_UINT(73))
    #define I3_RES_EME_STAT_V_S_DCDC_SW_VERSION_WERT_TYPE            unsigned short
        // DCDC SW version / DCDC SW-Version

    #define I3_RES_EME_STAT_V_T_DCDC_BO_WERT                         (RXBUF_UINT32(75))
    #define I3_RES_EME_STAT_V_T_DCDC_BO_WERT_UNIT                    '°C'
    #define I3_RES_EME_STAT_V_T_DCDC_BO_WERT_TYPE                    unsigned long
        // Temperature DCDC board / Temperatur DCDC Board

    #define I3_RES_EME_STAT_V_T_DCDC_GR_MC6_WERT                     (RXBUF_UINT32(79))
    #define I3_RES_EME_STAT_V_T_DCDC_GR_MC6_WERT_UNIT                '°C'
    #define I3_RES_EME_STAT_V_T_DCDC_GR_MC6_WERT_TYPE                unsigned long
        // Temperature rectifier / Temperatur Gleichrichter

    #define I3_RES_EME_STAT_V_T_DCDC_GTW_MC6_WERT                    (RXBUF_UINT32(83))
    #define I3_RES_EME_STAT_V_T_DCDC_GTW_MC6_WERT_UNIT               '°C'
    #define I3_RES_EME_STAT_V_T_DCDC_GTW_MC6_WERT_TYPE               unsigned long
        // Temperature push-pull converter / Temperatur Gegentaktwandler

    #define I3_RES_EME_STAT_V_U_DCDC_GT_MC6_PKR2_WERT                (RXBUF_UINT32(87))
    #define I3_RES_EME_STAT_V_U_DCDC_GT_MC6_PKR2_WERT_UNIT           'V'
    #define I3_RES_EME_STAT_V_U_DCDC_GT_MC6_PKR2_WERT_TYPE           unsigned long
        // Gate driver supply voltage (only PKR2!) / Gatetreiber-Versorgungsspannung (nur PKR2!)

    #define I3_RES_EME_STAT_V_U_DCDC_LV_WERT                         (RXBUF_UINT32(91)*0.1f)
    #define I3_RES_EME_STAT_V_U_DCDC_LV_WERT_UNIT                    'V'
    #define I3_RES_EME_STAT_V_U_DCDC_LV_WERT_TYPE                    float
        // LV actual voltage / LV Ist-Spannung

    #define I3_RES_EME_STAT_V_U_DCDC_LV_CAL_WERT                     (RXBUF_UINT32(95)*0.1f)
    #define I3_RES_EME_STAT_V_U_DCDC_LV_CAL_WERT_UNIT                'V'
    #define I3_RES_EME_STAT_V_U_DCDC_LV_CAL_WERT_TYPE                float
        // Raw signal LV voltage measurement DCDC converter / Rohsignal LV Spannungsmessung DCDC Wandler

    #define I3_RES_EME_STAT_V_U_DCDC_LV_SOLL_WERT                    (RXBUF_UINT32(99)*0.1f)
    #define I3_RES_EME_STAT_V_U_DCDC_LV_SOLL_WERT_UNIT               'V'
    #define I3_RES_EME_STAT_V_U_DCDC_LV_SOLL_WERT_TYPE               float
        // LV target voltage specification / LV-Soll-Spannung-Vorgabe

    #define I3_RES_EME_STAT_V_I_DCDC_TS1_MC6_RUKO_WERT               (RXBUF_UINT32(103))
    #define I3_RES_EME_STAT_V_I_DCDC_TS1_MC6_RUKO_WERT_UNIT          'A'
    #define I3_RES_EME_STAT_V_I_DCDC_TS1_MC6_RUKO_WERT_TYPE          unsigned long
        // Buck converter phase 1 current (only for non-PKR2 software!) / Tiefsetzsteller Phase1 Strom (nur für non-PKR2
        // Software!)

    #define I3_RES_EME_STAT_V_I_DCDC_TS2_MC6_RUKO_WERT               (RXBUF_UINT32(107))
    #define I3_RES_EME_STAT_V_I_DCDC_TS2_MC6_RUKO_WERT_UNIT          'A'
    #define I3_RES_EME_STAT_V_I_DCDC_TS2_MC6_RUKO_WERT_TYPE          unsigned long
        // Buck converter phase 2 current (only for non-PKR2 software!) / Tiefsetzsteller Phase 2 Strom (nur für non-PKR2
        // Software!)

    #define I3_RES_EME_STAT_V_T_DCDC_TS_MC6_RUKO_WERT                (RXBUF_UINT32(111))
    #define I3_RES_EME_STAT_V_T_DCDC_TS_MC6_RUKO_WERT_UNIT           '°C'
    #define I3_RES_EME_STAT_V_T_DCDC_TS_MC6_RUKO_WERT_TYPE           unsigned long
        // Step-down converter temperature (only for non-PKR2 software!) / Tiefsetzsteller Temperatur (nur für non-PKR2
        // Software!)

// Skipping NV_FLASH_PRUEFEN on 0xF000 which takes arguments

// Skipping RBM_TEST on 0xF001 which takes arguments

// Skipping AE_HWCAL_LESEN on 0xF010 which takes arguments

#define I3_PID_EME_AE_RESETINFO_LESEN                                0xF011
        // Reading out the reset info from the flash / Auslesen der Resetinfo aus dem Flash

// Skipping AKS_DIAG_STATUS_SELECT on 0xF012 which takes arguments

#define I3_PID_EME_AE_FREILAUF_MODUS                                 0xF050
        // Free running mode / Freilauf Modus

    #define I3_RES_EME_STAT_STATUS                                   (RXBUF_SCHAR(0))
    #define I3_RES_EME_STAT_STATUS_UNIT                              '0-n'
    #define I3_RES_EME_STAT_STATUS_TYPE                              char
        // Free running status: 0 = inactive; 1 = active / Status Freilauf: 0=inaktiv; 1=aktiv
